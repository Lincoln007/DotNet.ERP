using Common.Logging;
using Pharos.SyncService;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace Pharos.POS.ClientService
{
    class SyncServiceClientStartup
    {
        public static void RunSync(CancellationToken token)
        {
            SyncController controller = new SyncController();
            var storeId = System.Configuration.ConfigurationManager.AppSettings["StoreId"];
            var companyToken = Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings["CompanyId"]);
            var endPointConfigurationName = System.Configuration.ConfigurationManager.AppSettings["EndPointConfigurationName"];
            controller.DoSynchronize(companyToken, storeId, endPointConfigurationName, new LocalSyncContext());
        }

        internal static Task AutoSync(CancellationToken token)
        {
            return Task.Factory.StartNew(() =>
            {

                while (true)
                {
                    try
                    {
                        RunSync(token);
                        token.ThrowIfCancellationRequested();
                        Thread.Sleep(30);
                    }
                    catch (Exception ex)
                    {
                        ILog logger = LogManager.GetLogger(Assembly.GetExecutingAssembly().GetName().Name);
                        logger.Error(ex.Message, ex);
                        //Do Log
                    }
                }
            }, token);
        }
    }
}
