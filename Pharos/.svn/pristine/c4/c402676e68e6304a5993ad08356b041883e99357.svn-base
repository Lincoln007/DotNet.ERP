using System.Data.Entity;
using System.Data.Entity.ModelConfiguration.Conventions;

namespace Pharos.SyncService
{
    public class PosSyncDbContext: DbContext
    {
        static PosSyncDbContext()
        {
            //不重建数据库结构
            Database.SetInitializer<PosSyncDbContext>(null);
        }
        public PosSyncDbContext()
            : base("Data Source=192.168.10.126;Initial Catalog=Pharos_TestSync;Persist Security Info=True;User ID=pharos_admin;Password=pharos_admin;")        //System.Configuration.ConfigurationManager.AppSettings["ConnectionString"]
        {
            ///Leo: disable the Lazy Loading the WCF will not be able to serilize the entities.
            //是否启用延迟加载:  
            //  true:   延迟加载（Lazy Loading）：获取实体时不会加载其导航属性，一旦用到导航属性就会自动加载  
            //  false:  直接加载（Eager loading）：通过 Include 之类的方法显示加载导航属性，获取实体时会即时加载通过 Include 指定的导航属性  
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
            //UseLegacyPreserveChangesBehavior
            //确定是否使用旧的行为， true 使用，false 不使用；
            this.Configuration.AutoDetectChangesEnabled = true;  //自动监测变化，默认值为 true 
        }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            ///移除EF映射默认给表名添加“s“或者“es”
            modelBuilder.Conventions.Remove<PluralizingTableNameConvention>();
            ///配置关系
            base.OnModelCreating(modelBuilder);
        }

        //映射方式二
        public DbSet<SyncTest> Tests { get; set; }

    }
}