@using Pharos.Logic.OMS.Entity
@using Pharos.Logic.OMS.Entity.View
@model  Realm
@{
    ViewBag.Title = "Save";
    Layout = "~/Views/Shared/_FormLayout.cshtml";
}

<style type="text/css">
    .formbox td {
        padding: 5px 0px;
    }
</style>

<script type="text/javascript">

    //商户号
    var CID = "@Model.CID";
    if (CID == "0") {
        CID = "";
    }

    var Id = getUrlParam('Id');
    var isRequired = true;
    if (Id != null) {
        isRequired = false;
    }

    //获取url的参数
    function getUrlParam(name) {

        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象

        var r = window.location.search.substr(1).match(reg);  //匹配目标参数

        if (r != null) return unescape(r[2]); return null; //返回参数值

    }

    $(function () {
        $("#CID").next().find(".combo-arrow").removeClass("combo-arrow");
    });

    var comboRows = [];
    var comboload = function (param, success, error) {
        //获取输入的值
        var q = param.q || "";
        //此处q的length代表输入多少个字符后开始查询
        if (q.length <= 0) return false;
        var $combo = $(this);

        var id = getUrlParam('Id');
        if (id == null) {
            id = 0;
        }
        $.ajax({
            url: "@Url.Action("GetCidWhere", "DomainLicense")",
            type: "post",
            data: {
                //传值，还是JSON数据搜索
                keyword: q,
                id: id
            },
            dataType: "json",
            success: function (data) {
                comboRows = data.rows;
                //关键步骤，遍历一个MAP对象
                var items = $.map(data.rows, function (item) {
                    return { CID: item.CID, CID: item.CID };
                });
                //执行loader的success方法
                success(items);
            },    //异常处理
            error: function (xml, text, msg) {
                error.apply(this, arguments);
            }
        });
    }

    function tradersOnChange(newValue, oldValue) {
        GetTradersFullTitle(encodeURIComponent(newValue));
    }

    //类别
    function CategoryOnChange(newValue, oldValue) {
        if (newValue == 1)
        {
            $("#CID").combobox("enable").combobox("enableValidation");
            $("#TradersFullTitle").textbox("enable");
        }
        else if (newValue == 2) {
            $("#CID").combobox("setValue", "").combobox("disable").combobox("disableValidation");
            $("#TradersFullTitle").textbox("setValue", "").textbox("disable");
        }
        else {
            $("#CID").combobox("enable").combobox("enableValidation");
            $("#TradersFullTitle").textbox("enable");
        }
    }

    //获取客户全称
    function GetTradersFullTitle(CID) {
        $.ajax({
            url: "/DomainLicense/GetTradersFullTitle?CID=" + CID,
            type: "post",
            async: false,
            dataType: "text",
            data: {},
            success: function (data) {
                $("#TradersFullTitle").textbox("setValue", data);
            }
        });
    }



    function SaveBefore() {
        return true;
    }

</script>

<div class="default-form">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(o => o.Id)
        <div class="content">

            <div class="formbox" style="border-bottom:0px;">
                <table class="table-form" width="100%">

                    <tr>
                        <td class="name" style=" width:15%;">商户号：</td>
                        <td class="input">@Html.TextBoxFor(o => o.CID, new { @class = "easyui-combobox", data_options = "required:true,prompt:'请输入',width:125,editable:true,mode:'remote',valueField:'CID',textField:'CID',loader:comboload,onChange:tradersOnChange,value:CID" })</td>
                        <td class="name" style="width:20%;">客户全称：</td>
                        <td class="input">@Html.TextBoxFor(o => o.TradersFullTitle, new { @class = "easyui-textbox", data_options = "novalidate:true,required:false,prompt:'',validType: 'length[1,100]',width:190,readonly:true" })</td>
                    </tr>

                    <tr>
                        <td class="name">类别：</td>
                        <td class="input">@Html.DropDownListFor(o => o.Category, new List<SelectListItem>() { new SelectListItem() { Text = "请选择", Value = "0" }, new SelectListItem() { Text = "内部", Value = "1" }, new SelectListItem() { Text = "外部", Value = "2" } }, new { @class = "easyui-combobox datacontrol", data_options = "novalidate:true, editable: false,width:125,validType:'requiredForCombo',onChange:CategoryOnChange" })</td>
                        <td class="name">子域名：</td>
                        <td class="input">
                           @Html.TextBoxFor(o => o.Name, new { @class = "easyui-textbox", data_options = "novalidate:true,required:false,prompt:'',validType: 'length[1,20]',width:80" })
                           <span>.&nbsp;</span>@Html.DropDownListFor(o => o.Domain1, ViewBag.d1 as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "required:true,novalidate:true,validType:'requiredForCombo', editable: false,width:100" })
                        </td>
                    </tr>

                    <tr>
                        <td class="name">备注：</td>
                        <td class="input" colspan="3">
                            @Html.TextBoxFor(o => o.Remark, new { @class = "easyui-textbox", data_options = "required:false,prompt:'限50个字内',validType: 'length[0,50]',width:458" })
                        </td>
                    </tr>

                </table>
            </div>

        </div>
    }
</div>



