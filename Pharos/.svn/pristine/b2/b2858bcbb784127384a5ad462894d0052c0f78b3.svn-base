using Pharos.Logic.OMS.BLL;
using System;
using System.Collections.Generic;
using System.IO;
using System.Net;
using System.Text;
using System.Web.Mvc;
using System.Linq;
using System.Security.Cryptography;
using Pharos.Logic.OMS.Entity;
using Pharos.Logic.OMS;
using Pharos.Utility;
using Pharos.Utility.Helpers;
using QCT.Pay.Common;
using System.Reflection;
using System.ComponentModel;

namespace Pharos.OMS.Retailing.Controllers
{
    /// <summary>
    /// 金融接口
    /// </summary>
    public class FinanceController : BaseController
    {
        [Ninject.Inject]
        DictionaryService DicSvc { get; set; }
        [Ninject.Inject]
        PayApiService PayApiSvc { get; set; }
        //
        // GET: /Finance/

        #region 支付接口页面
        /// <summary>
        /// 支付接口页面-页面加载
        /// </summary>
        /// <returns></returns>
        public ActionResult PayApiIndex()
        {
            ViewBag.PayApiStatusList = JsonHelper.ToJson(EnumHelper.GetCacheList<PayApiStatus>(true));
            ViewBag.PayApiModeList = JsonHelper.ToJson(EnumHelper.GetCacheList<PayApiMode>(true));
            ViewBag.PayApiMethodList = GetPayApiMethodsStr(typeof(PayApiMethod));
            return View();
        }
        /// <summary>
        /// 支付接口页面-获取分页数据
        /// </summary>
        /// <returns></returns>
        public ActionResult GetPayApiPaging()
        {
            var count = 0;
            var list = PayApiSvc.GetPayApiPaging(Request.Params, out count);
            return ToDataGrid(list, count);
        }

        /// <summary>
        /// 支付接口页面-移除所选项
        /// </summary>
        /// <returns></returns>
        public ActionResult RemovePayApi()
        {
            //fishtodo:待确定使用关联判断再完成删除功能
            return View();
        }
        /// <summary>
        /// 支付接口页面-设置启用关闭所选项
        /// </summary>
        /// <param name="id"></param>
        /// <param name="status"></param>
        /// <returns></returns>
        [HttpPost]
        public JsonResult SetStatus(int id, short status)
        {
            return new JsonNetResult(PayApiSvc.SetStatus(id, status));
        }
        #endregion

        #region 支付接口表单
        /// <summary>
        /// 支付接口页面-新增支付接口页面
        /// </summary>
        /// <returns></returns>
        public ActionResult PayApiForm(int? id)
        {
            //fishtodo:删除数据字典 380 381 及子集， 删除按钮功能实现
            var payApiStatusList = (from list in EnumHelper.GetCacheList<PayApiStatus>(false) select new SelectListItem() { Text = list.Text, Value = list.Value }).ToList();
            payApiStatusList.First().Selected = true;
            ViewBag.PayApiStatusList = payApiStatusList;
            ViewBag.PayApiModeList = JsonHelper.ToJson(EnumHelper.GetCacheList<PayApiMode>(true));
            ViewBag.PayApiMethodList = GetPayApiMethodsStr(typeof(PayApiMethod));
            var obj = new PayApi();
            if (id.HasValue)
            {
                obj = PayApiSvc.GetOne(id);
            }
            return View(obj.IsNullThrow());
        }
        public static Type DescAttribut = typeof(DescriptionAttribute);
        public static Type DispAttribute = typeof(CategoryAttribute);
        /// <summary>
        /// 支付方式下拉数据字符串Json
        /// </summary>
        /// <param name="type"></param>
        /// <returns></returns>
        private string GetPayApiMethodsStr(Type type)
        {
            var enumNames = type.GetEnumNames();
            List<object> list = new List<object>();
            for (int i = 0; i < enumNames.Length; i++)
            {
                FieldInfo item = type.GetField(enumNames[i]);
                object[] objs = item.GetCustomAttributes(DescAttribut, false);
                object[] objsDisp = item.GetCustomAttributes(DispAttribute, false);
                DescriptionAttribute descAttr = (DescriptionAttribute)objs[0];
                CategoryAttribute dispAttr = (CategoryAttribute)objsDisp[0];
                var value = Convert.ToInt32(System.Enum.Parse(type, item.Name));
                list.Add(new { text = descAttr.Description, value = value.ToString(), groupId = dispAttr.Category });
            }
            return JsonHelper.ToJson(list);
        }
        /// <summary>
        /// 支付接口页面-新增或编辑支付接口页面-保存
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        public ActionResult SavePayApi(PayApi unitPay)
        {
            var op = PayApiSvc.SaveOrUpdate(unitPay);
            return new OpActionResult(op);
        }
        #endregion

        #region 支付结算周期
        public ActionResult RatePeriodIndex()
        {
            return View();
        }
        public ActionResult RatePeriodForm()
        {
            return View();
        }
        #endregion

    }

}
