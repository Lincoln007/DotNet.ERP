using Pharos.Logic.ApiData.Pos.Exceptions;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Pharos.Logic.ApiData.Pos.Sale.AfterSale
{
    public static class OrderChangeFactory
    {
        static Dictionary<string, OrderChangeRefundSale> orderChangeSaleCache = new Dictionary<string, OrderChangeRefundSale>();
        private static Dictionary<string, OrderChangeRefundSale> OrderChangeCache
        {
            get { return orderChangeSaleCache; }
        }

        public static OrderChangeRefundSale Factory(string storeId, string machineId, int companyToken)
        {
            string key = string.Format("{0}*-*{1}*-*{2}", storeId, machineId, companyToken);

            if (orderChangeSaleCache.ContainsKey(key))
            {
                var shoppingCart = orderChangeSaleCache[key];
                if (shoppingCart == null)
                {
                    goto TheSaleException;
                }
                return shoppingCart;
            }
            else
            {
                OrderChangeCache.Remove(key);
                var orderChangeSale = new OrderChangeRefundSale();
                orderChangeSaleCache.Add(key, orderChangeSale);
                return orderChangeSale;
            }
        TheSaleException:
            throw new SaleException("400", "未登录或者未授权，不允许操作！");
        }

        public static void Disposable(string storeId, string machineId, int companyToken) 
        {
            string key = string.Format("{0}*-*{1}*-*{2}", storeId, machineId, companyToken);
            orderChangeSaleCache.Remove(key);
        }
    }
}
