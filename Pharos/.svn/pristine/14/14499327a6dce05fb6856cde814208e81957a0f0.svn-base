using Pharos.Logic.OMS.DAL;
using Pharos.Logic.OMS.Entity;
using Pharos.Logic.OMS.IDAL;
using Pharos.Utility.Helpers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Pharos.Logic.OMS.BLL
{
    public class DevicesService
    {
        [Ninject.Inject]
        public IBaseRepository<Devices> DevicesRepository { get; set; }
        public Utility.OpResult SaveOrUpdate(Devices model)
        {
            if (model.Id == 0)
            {
                DevicesRepository.Add(model);
            }
            return Utility.OpResult.Result(DevicesRepository.SaveChanges());
        }

        public IEnumerable<dynamic> GetPageList(System.Collections.Specialized.NameValueCollection nvl, out int recordCount)
        {
            //var query = DevicesRepository.GetQuery(null);
            //var keyword = (nvl["keyword"] ?? "").Trim();
            //query = query.Where(o => (o.LoginName != null && o.LoginName.Contains(keyword)) || (o.FullName != null && o.FullName.Contains(keyword)));
            //recordCount = query.Count();
            //return query.ToPageList();
            recordCount = 0;
            return null;
        }

        public List<SysUserInfo> GetList()
        {
            throw new NotImplementedException();
        }

        public Utility.OpResult Deletes(object[] ids)
        {
            throw new NotImplementedException();
        }

        public SysUserInfo GetOne(object id)
        {
            throw new NotImplementedException();
        }
    }
}
