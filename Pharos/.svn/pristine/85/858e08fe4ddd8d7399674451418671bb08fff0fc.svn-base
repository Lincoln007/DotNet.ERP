using Pharos.Logic.OMS;
using Pharos.Logic.OMS.Entity;
using Pharos.Logic.OMS.EntityExtend;
using Pharos.Logic.OMS.Entity.View;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Pharos.Utility.Helpers;
using Pharos.Utility;
using Pharos.Logic.OMS.BLL;

namespace Pharos.OMS.Retailing.Controllers
{
    public class AgentsInfoController : BaseController
    {

        //代理商档案BLL
        [Ninject.Inject]
        AgentsInfoService agentsInfoService { get; set; }

        //商户资料BLL
        [Ninject.Inject]
        TradersService tradersService { get; set; }

        /// <summary>
        /// 获取有效-起始日期、有效-终止日期
        /// </summary>
        /// <returns></returns>
        public string getStartEndDT(int DicSN)
        {
            if (DicSN != 0)
            {
                SysDataDictionary data = agentsInfoService.getData(DicSN);
                if (data != null)
                {
                    int year = Convert.ToInt32(data.Title.Replace("年",""));
                    string StartEndDT = "";
                    DateTime dtNow = DateTime.Now;
                    StartEndDT = dtNow.ToString("yyyy-MM-dd");
                    StartEndDT = StartEndDT + "|" + dtNow.AddYears(year).ToString("yyyy-MM-dd");
                    return StartEndDT;
                }
                else
                {
                    return "";
                }
            }
            else
            {
                return "";
            }

        }

        public ActionResult Save(int? id)
        {

            //有效期
            ViewBag.ValidityY = ListToSelect(tradersService.getDataList(450).Select(o => new SelectListItem() { Value = o.DicSN.ToString(), Text = o.Title }), emptyTitle: "请选择");

            var obj = new Traders
            {
                BusinessScopeId = "",
                Pay = "",
                CurrentProvinceId = 15
            };
            if (id.HasValue)
            {
                obj = tradersService.GetOne(id.Value);
                obj.BusinessScopeId = obj.BusinessScopeId.IsNullOrEmpty() ? "" : obj.BusinessScopeId;
                obj.Pay = obj.Pay.IsNullOrEmpty() ? "" : obj.Pay;
            }

            return View(obj.IsNullThrow());
        }

        [HttpPost]
        public ActionResult Save(AgentsInfo agentsInfo)
        {
            HttpFileCollectionBase files= Request.Files;
            HttpPostedFileBase PostedFileBase=files[0];

            var op = agentsInfoService.Save(agentsInfo, PostedFileBase,Request.Params);
            return new OpActionResult(op);
        }

    }
}
