@model OutboundGoods
@{
    ViewBag.Title = Pharos.Sys.SysConstPool.Page_Title;
    Layout = "~/Views/Shared/_FormLayout.cshtml";
    var chs = ViewBag.channel as List<SelectListItem>;
    var hideAdd = !CurrentUser.HasPermiss(SysConstLimits.库存管理_出入库登记);
}

<div class="default-form">
    @using (Html.BeginForm("SaveOutboundGoods", "Store", FormMethod.Post))
    {
        @Html.HiddenFor(o => o.Rows)
        @Html.HiddenFor(o => o.Id)
        @Html.HiddenFor(o => o.OutboundId)
        @Html.HiddenFor(o => o.State)

        <table style="font-size:12px; line-height:38px; padding:0 0 2px 7px; min-width:950px;" id="query">
            <tr>
                <td class="left_td font-12">出库方式：</td>
                <td class="font-12 width-162" style="padding-right:20px;" >
                    @if (Model.Id > 0)
                    {
                        if (Model.OutboundType == 1)
                        {
                            <span>正常</span>
                        }
                        else
                        {
                            <span>其它</span>
                        }
                    }
                    else
                    {
                        @Html.RadioButtonListFor(o => o.OutboundType, ViewBag.outboundType as List<SelectListItem>)
                    }
                </td>
                <td>出货仓库：</td>
                <td>
                    @*@Html.DropDownListFor(o => o.StoreId, ViewBag.stores as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "validType:'requiredForCombo',novalidate:true,editable:false" })*@
                    @Html.DropDownListFor(o => o.StoreId, ViewBag.stores as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = " validType:'requiredForCombo',onChange:applySelect,readonly:" + (Model.StoreId != null ? "true" : "false") })
                </td>
                <td class="left_searchlabel" style="display:none">出货渠道：</td>
                <td id="channeltd" style="display:none">
                    @*@Html.DropDownListFor(o => o.Channel, ViewBag.channel as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "onSelect:applySelect" })*@
                    @Html.RadioButtonListFor(o => o.Channel, ViewBag.channels as List<SelectListItem>)
                </td>
                <td class="left_searchlabel">提货单位：</td>
                <td id="ApplyOrg">
                    @*@Html.DropDownListFor(o => o.ApplyOrgId, ViewBag.applyOrg as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "validType:'requiredForCombo',novalidate:true ", id = "ApplyOrgId" })*@
                    @Html.DropDownListFor(o => o.ApplyOrgId, new List<SelectListItem>(), new { @class = "easyui-combobox datacontrol", data_options = "validType:'requiredForCombo',novalidate:true,onChange:applySelect,readonly:" + (Model.ApplyOrgId != null ? "true" : "false"), id = "ApplyOrgId" })
                </td>                
                <td class="left_searchlabel">经办人：</td>
                <td>
                    <label>@ViewBag.CurUserName</label>
                    <input type="hidden" id="OperatorUID" name="OperatorUID" value="@ViewBag.CurUID">
                </td>
                <td class="left_searchlabel" style="padding-left:30px;">登记日期：</td>
                <td>
                    <label>@(Model.CreateDT == new DateTime() ? DateTime.Now.ToString("yyyy-MM-dd") : Model.CreateDT.ToString("yyyy-MM-dd"))</label>
                    <input type="hidden" id="CreateDT" name="CreateDT" value="@(Model.CreateDT == new DateTime() ? DateTime.Now.ToString("yyyy-MM-dd") : Model.CreateDT.ToString("yyyy-MM-dd"))" />
                </td>
            </tr>
        </table>
        <input type="button" id="btnapp" onclick="append()" value="add" style="display:none" />

    <table class="easyui-datagrid" id="grid2"
           data-options="url:'@Url.Action("GetOutboundListByOutboundId", "Store", new { outboundId =Model.OutboundId})',border:true,rownumbers:true,fit:false,fitColumns:true,pagination:false,singleSelect: true,title:'出货清单'@*,onBeforeLoad:gridBeforeLoad*@,onLoadSuccess:gridLoadSuccess,onBeforeEdit:beforeEdit,onLoadError:function(){alert('error')},onClickCell:clickCell">
        <thead>
            <tr>
                <th data-options="field:'ProductCode',editor:{type:'textbox',options:{disabled:true}}" width="150">货号</th>
                <th data-options="field:'Barcode',editor:{type:'combobox',options:{required:true,panelWidth:250,mode:'remote',valueField:'barcode',textField:'title',loader:comboload,onChange:comboSelect}}" width="200">条形码</th>
                <th data-options="field:'Title',editor:{type:'textbox',options:{disabled:true}}" width="250">品名</th>
                <th data-options="field:'SubUnit',editor:{type:'textbox',options:{disabled:true}}" width="60">计量单位</th>
                <th data-options="field:'BuyPrice',editor:{type:'textbox',options:{disabled:false}},hidden:true" width="70">进价</th>
                <th data-options="field:'SysPrice',editor:{type:'textbox',options:{disabled:false}}" width="70">系统售价</th>
                <th data-options="field:'OutboundNumber',editor:{type:'numberbox',options:{required:true,min:0.1,precision:2}}" width="60">数量</th>         
                @*<th data-options="field:'Subtotal',formatter:totalCount" width="100">小计</th>*@
                <th data-options="field:'Subtotal',formatter:function(value, row, index){if(isNaN(row.OutboundNumber)) return value; return row.SysPrice?'￥'+Number(row.SysPrice*row.OutboundNumber).toFixed(2):'';}" width="100">小计</th>
                <th data-options="field:'Memo',editor:{type:'textbox'}" width="250">备注</th>
                <th data-options="field:'Editor',formatter:operation" width="100">操作</th>
            </tr>
        </thead>
    </table>
        <div>
            @if (!hideAdd)
            { 
            <a id="save_btn" class="easyui-linkbutton cus4 linkbtn" onclick="saveOutboundGoods()" style="margin-left:500px; margin-top:50px; width:80px;">保存</a>
            }
        </div>
    }
</div>
<script>
    $(function () {
        //如果出库方式是其它，去掉提货单位的必填验证
        var inType = GetRadioValue('OutboundType');
        if (inType == "1") {
            $('#ApplyOrgId').textbox('enableValidation');
        }
        else {
            $('#ApplyOrgId').textbox('disableValidation');
        }
        $("[name='OutboundType']").click(function () {
            if ($(this).val() == "1") {
                $('#ApplyOrgId').textbox('enableValidation');
            } else {
                $('#ApplyOrgId').textbox('disableValidation');
            }
        });

        $dg2 = $("#grid2");
        if ($("#Id").val() > 0) {
            $("#save_btn").css("visibility", "hidden");
        } else {
            appClick();
        }
        //如果id不为空禁用出货渠道
        if ($("#Id").val() > 0) {
            //var input = $("#channeltd").find("input:radio");
            //input.attr("disabled", "disabled");
        }
        //出货渠道-提货单位，联动下拉
        $("[name='Channel']").click(function () {
            var type = $(this).val();
            var value = "@Model.ApplyOrgId";
            $.post("@Url.Action("applyParentTypeSelect", "Store")", { Id: $(this).val(), showTitle: 1, t: Math.random(), value: value }, function (data) {
                $("#ApplyOrgId").combobox("clear").combobox("loadData", data);
                //批发价默认以批发价为显示，如无批发价则显示进价
                //var title = type == "1" ? "批发价" : "进价";
                //$(".datagrid-header-inner .datagrid-cell-c1-BuyPrice span:first").html(title); 
                var title = type == "1" ? "批发价" : "系统售价";
                $(".datagrid-header-inner .datagrid-cell-c1-SysPrice span:first").html(title);

            }, "json");
        });
        if ($("[name='Channel']:first").attr("checked"))
            $("[name='Channel']:first").click();
        else
            $("[name='Channel']:last").click();

    });

    //获取RadioButton的值
    function GetRadioValue(RadioName) {
        var obj;
        obj = document.getElementsByName(RadioName);
        if (obj != null) {
            var i;
            for (i = 0; i < obj.length; i++) {
                if (obj[i].checked) {
                    return obj[i].value;
                }
            }
        }
        return null;
    }

    function gridLoadSuccess(data) {
        //gridHideColumn();
        if ($("#Id").val() > 0 && $("#State").val() != 0) { 
            $dg2.datagrid("hideColumn", "Editor");
            appendTotalRow();
            changeValue();
        } else {
            setTimeout(function () { appClick(); }, 100);
        }
    }

    //function gridHideColumn() {
    //    var type = $("[name='Channel']:checked").val(); 
    //    if (type == "0") {
    //        $dg2.datagrid("hideColumn", "BuyPrice");
    //    }
    //    else {
    //        $dg2.datagrid("hideColumn", "SysPrice");
    //    }
    //}

    //function totalCount(value, row, index) {  
    //    var type = $("[name='Channel']:checked").val();
    //    var price = type == "0" ? row.SysPrice : row.BuyPrice;
    //    if (isNaN(row.OutboundNumber)) {
    //        return 0;
    //    }
    //    else {
    //        return price ? '￥' + Number(price * row.OutboundNumber).toFixed(2) : '';
    //    }
    //}

    function appendTotalRow() {  
        var rows = $dg2.datagrid('getRows');
        $.each(rows, function (index, row) {
            if (row != undefined) {
                if (row.Id == 'countrow') {
                    var rowIndex = $dg2.datagrid('getRowIndex', row);
                    $dg2.datagrid('deleteRow', rowIndex);
                }
            }
        })
        var totalRow = { 
            Id: 'countrow',
            SysPrice: '<span>合计</span>',
            OutboundNumber: '<span id="totalNum">0</span>',
            Subtotal: '<span id="totalPrice">￥0</span>',
            Editor: 'countrow'
        }
        $dg2.datagrid('appendRow', totalRow);
    }

    var comboload = function (param, success, error) {
        //获取输入的值
        var q = param.q || "";
        //此处q的length代表输入多少个字符后开始查询
        if (q.length <= 1) return false;
        //var type = $("[name='Channel']:checked").val();
        //var sid = type == "1" ? $("#ApplyOrgId").combobox("getValue") : $("#StoreId").combobox("getValue");
        var sid = $("#StoreId").combobox("getValue");
        if (!sid) return;
        var type = $("[name='Channel']:checked").val();
        //var applyorgId = type == "1" ? $("#ApplyOrgId").combobox("getValue") : "";
        var aId = $("#ApplyOrgId").combobox("getValue"); 
        $.ajax({
            url: "@Url.Action("GetProductFromCommodity")",
            type: "post",
            cache:false,
            data: {
                //传值，还是JSON数据搜索
                searchName: q,
                storeId: sid,
                type: type,
                applyorgId: aId,
                t:Math.random()
            },
            //重要，如果写jsonp会报转换错误，此处不写都可以
            dataType: "json",
            success: function (data) {
                comboRows = data.rows;
                //关键步骤，遍历一个MAP对象
                var items = $.map(data.rows, function (item) {
                    return { barcode: item.Barcode, title: item.Title }; // + "(" + item.Barcode + ")"
                });
                //执行loader的success方法
                success(items);
            },    //异常处理
            error: function (xml, text, msg) {
                error.apply(this, arguments);
            }
        });
    }
    var comboRows = [];
    function comboSelect(newValue, oldValue) {
        var obj = getRow(newValue);
        if (!obj) return;
        editIndex = $dg2.datagrid('getRows').length - 2;
        var ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'ProductCode' });
        $(ed.target).textbox('setValue', obj.ProductCode);
        ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'Title' });
        $(ed.target).textbox('setValue', obj.Title);
        ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'SubUnit' });
        $(ed.target).textbox('setValue', obj.SubUnit);
        var channelVal = $("input[name='Channel']:checked").val();
        //if (channelVal == 1) {//批发价
        //    ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'SysPrice' });
        //    $(ed.target).textbox('setValue', obj.TradePrice);
        //} else {
        ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'SysPrice' });
        $(ed.target).textbox('setValue', obj.SysPrice.toFixed(2));
        ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'BuyPrice' });
        $(ed.target).textbox('setValue', obj.BuyPrice.toFixed(2));
        //}
        ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'OutboundNumber' });
        $(ed.target).unbind("keyup").bind("keyup", function (e) {
            e.preventDefault();
            if (e.keyCode == 13) append();
        });//.focus().select();
    }
    function getRow(Barcode) {
        var obj = null;
        $.each(comboRows, function (i, row) {
            if (row.Barcode == Barcode) {
                obj = row; return;
            }
        });
        if (obj == null) {
            if (Barcode != undefined)
                initComboRows(Barcode);
            $.each(comboRows, function (i, row) {
                if (row.Barcode == Barcode) {
                    obj = row; return;
                }
            });
        }
        return obj;
    }
    function initComboRows(barcode) {
        var type = $("[name='Channel']:checked").val();
        //var sid = type == "1" ? $("#ApplyOrgId").combobox("getValue") : $("#StoreId").combobox("getValue");
        var sid = $("#StoreId").combobox("getValue");
        var aId = $("#ApplyOrgId").combobox("getValue"); 
        if (!sid) return;
        $.ajax({
            url: "@Url.Action("GetProductFromCommodity")",
            type: "post",
            async: false,
            data: {
                searchName: barcode,
                storeId: sid,
                type: type,
                applyorgId: aId,
            },
            dataType: "json",
            success: function (data) {
                comboRows = data.rows;
            }
        });
    }
    var editIndex = undefined, clickIndex = undefined, opadd = false, channelType = undefined;
    var $dg2;
    function endEditing() {
        if (editIndex == undefined) { return true }
        editIndex = $dg2.datagrid('getRows').length - 2;
        if ($dg2.datagrid('validateRow', editIndex)) {
            var ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'Barcode' });
            if (ed == null) return true;
            var vl = $(ed.target).combobox('getValue');
            if (comboRowsExisitBarcode(vl) == false) {
                $.messager.alert("提示", "该条码不存在!"); return false;
            }
            var ed2 = $dg2.datagrid('getEditor', { index: editIndex, field: 'ProductCode' });
            if (!$(ed2.target).textbox('getValue')) {
                $.messager.alert("提示", "该条码不存在!"); return false;
            }
            var data = $dg2.datagrid("getData");
            if (isExists(data.rows, vl)) {
                $.messager.alert("提示", "该货号已存在", "warning", function () {
                    $(ed.target).combobox('showPanel').next('span').find('input').focus()
                });
                return false;
            } else {
                $dg2.datagrid('endEdit', editIndex);
                editIndex = undefined;
                return true;
            }
        } else {
            return false;
        }
    }
    function endClickEditing() {
        if (clickIndex == undefined) { return true }
        if ($dg2.datagrid('validateRow', clickIndex)) {
            $dg2.datagrid('endEdit', clickIndex);
            clickIndex = undefined;
            changeValue();
            return true;

        } else {
            return false;
        }
    }
    function beforeEdit(rowIndex, rowData) {
        //var ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'Barcode' });
        //setTimeout(function () { $(".datagrid-cell-c1-ProdcutCd .textbox-text").focus(); }, 1000);
    }

    function append() {
        channelType = $("[name='Channel']:checked").val();
        if (endClickEditing() && endEditing()) {
            opadd = true;
            $dg2.datagrid('appendRow', { OutboundNumber: 1, Id: guidGenerator() });
            editIndex = $dg2.datagrid('getRows').length - 1;
            $dg2.datagrid('selectRow', editIndex)
                .datagrid('beginEdit', editIndex);
            //$dg2.datagrid('beginEdit', editIndex);

            //如果是批发登记，则批发价可编辑
            if (channelType == "1") {
                var ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'SysPrice' });
                $(ed.target).textbox('enable');
            } else {
                var ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'SysPrice' });
                $(ed.target).textbox('disable');
            }
        }
        appendTotalRow();
        changeValue();

        //绑定回车事件
        setTimeout(function () {
            var bindEditIndex = $dg2.datagrid('getRows').length - 2;
            var ed = $dg2.datagrid('getEditor', { index: bindEditIndex, field: 'Barcode' });
            var ed2 = $dg2.datagrid('getEditor', { index: bindEditIndex, field: 'OutboundNumber' });         
            var ed3 = $dg2.datagrid('getEditor', { index: bindEditIndex, field: 'Memo' });

            $(ed.target).textbox('textbox').focus();
            $($(ed.target).combo('textbox')).unbind("keyup").bind("keyup", function (e) {
                if (e.keyCode == 13) {
                    $(ed2.target).textbox('textbox').focus();
                    $(ed2.target).textbox('textbox').select();
                }
            });
            $($(ed2.target).combo('textbox')).unbind("keyup").bind("keyup", function (e) {
                if (e.keyCode == 13) {
                    $(ed3.target).textbox('textbox').focus();
                    $(ed3.target).textbox('textbox').select();
                }
            });
           
            $($(ed3.target).combo('textbox')).unbind("keyup").bind("keyup", function (e) {
                if (e.keyCode == 13) {
                        append();
                }
            });
        }, 50)
    }

    function removeItem(id) {
        $.messager.confirm('提示', "是否确定删除该项信息?", function (r) {
            if (!r) {
                return r;
            }
            $dg2.datagrid("selectRecord", id);
            var row = $dg2.datagrid("getSelected")
            var index = $dg2.datagrid("getRowIndex", row);
            $dg2.datagrid('deleteRow', index);
            changeValue();
        });
    }
    function operation(value, row, index) {
        if (value == 'countrow') return '';
        if (opadd) {
            opadd = false;
            return "<a href='javascript:void(0)' onclick='append()'>[添加]</a>";
        } else {
            return "<a href='javascript:void(0)' onclick=\"removeItem('" + row.Id + "')\">[删除]</a>";
        }
    }
    function clickCell(index, field) {
        var type = $("[name='Channel']:checked").val();

        if (index == $dg2.datagrid('getRows').length - 1)
            return false;
        if ($("#Id").val() > 0 && $("#State").val() != 0)
            return false
        if (endClickEditing() && (channelType=="1" && field == "SysPrice") || field == "OutboundNumber" || field == "Memo") {
            $dg2.datagrid('selectRow', index)
                    .datagrid('editCell', { index: index, field: field });
            clickIndex = index;
        }
    }
    function appClick() {
        setTimeout(function () {
            $("#btnapp").click()
        }, 1000);
    }
    function acceptChanges() {
        $dg2.datagrid("acceptChanges");
    }
    function changeValue() {
        var rows = $dg2.datagrid("getRows");
        var submitRows = [];
        for (var i = 0; i < rows.length; i++) {
            if (rows[i].Id != "countrow") {
                rows[i].Id = i + 1;
                submitRows.add(rows[i]);
            }
        }
        $("#Rows").val(JSON.stringify(submitRows));
        editIndex = rows.length - 1;
        var total = 0;
        var totalNum = 0;
        $.each(rows, function (i, r) {   
            if (!isNaN(r.SysPrice) && !isNaN(r.OutboundNumber)) {
                total += r.SysPrice * r.OutboundNumber;
                totalNum += Number(r.OutboundNumber);
            }
        });
        $("#totalPrice").html("￥" + total);
        //$("#totalPrice").html("￥" + 28);
        $("#totalNum").html("" + totalNum);
    }
    function isExists(rows, Barcode) {
        var result = false;
        $.each(rows, function (idx, row) {
            if (row.Barcode == Barcode) {
                result = true; return;
            }
        });
        return result;
    }

    function saveOutboundGoods() {
        $('form').submit();
    }

    //保存成功之后重置页面
    function Refresh(result) {
        $.messager.alert("提示", "操作成功!");
        if ($("#Id").val() == 0) {
            $('.default-form form').form('reset');
            $('#ApplyOrgId').textbox('enableValidation');
            //$("#StoreId").combobox("setValue", 0);
            //$("#ApplyOrgId").combobox("setValue", 0);
            $("#grid2").datagrid('loadData', { total:0, rows: [] });
            $.post("@Url.Action("ParentTypeSelect", "Store")", { Id: $("input[name='Channel']:checked").val(), showTitle: 1, t: Math.random() }, function (data) {
                $("#ApplyOrgId").combobox("clear").combobox("loadData", data);
                $("#ApplyOrgId").combobox('setValue', '@Model.ApplyOrgId');
                var title = $("input[name='Channel']:checked").val() == "1" ? "批发价" : "系统售价";
                $(".datagrid-header-inner .datagrid-cell-c1-SysPrice span:first").html(title);


            }, "json");
            appClick();
        } else {
            pharos.easyui.dialog.topClose("formDiv");
            pharos.easyui.dialog.curJquery("formDiv")("#grid").datagrid("reload");
        }
    }

    function SaveBefore() {
        //if ($("#State").val() == 1) {
        //    $.messager.alert("提示", "已审出库单不能编辑", "warning");
        //    return false;
        //}
        if ($("#StoreId").combobox("getValue") == undefined) {
            $.messager.alert("提示", "输入的出货仓库不存在，请重新选择", "warning");
            return false;
        }
        if ($("#ApplyOrgId").combobox("getValue") == undefined) {
            $.messager.alert("提示", "输入的提货单位不存在，请重新选择", "warning");
            return false;
        }
        //if ($("#ApplyUID").combobox("getValue") == undefined) {
        //    $.messager.alert("提示", "输入的提货员不存在，请重新选择", "warning");
        //    return false;
        //}
        if ($("#StoreId").combobox("getValue") == $("#ApplyOrgId").combobox("getValue")) {
            $.messager.alert("提示", "出货仓库和提货单位不能相同", "warning");
            return false;
        }
        var rowsLength = $dg2.datagrid('getRows').length;
        if (rowsLength <= 2) {
            $.messager.alert("提示", "请添加需要出库的产品", "warning");
            return false;
        }
        editIndex = $dg2.datagrid('getRows').length - 2;
        var ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'Barcode' });
        if (ed == null) return true;
        $(ed.target).combobox('disableValidation');
        endClickEditing();
        changeValue();
        comboRows = [];
        return true;
    }
    $.extend($.fn.validatebox.defaults.rules, {
        cdexist: {
            validator: function (value) {
                var ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'Barcode' });
                if (!ed) return true;
                var vl = $(ed.target).combobox('getValue');
                var data = $dg2.datagrid("getData");
                return !isExists(data.rows, vl);
            },
            message: '该货号已存在列表中'
        }
    });
    //function guidGenerator() {
    //    var rows = $dg2.datagrid("getRows");
    //    var ids = $.map(rows, function (row) {
    //        return row.Id ? row.Id : 0;
    //    });
    //    var maxId = Math.max.apply(null, ids);
    //    if (maxId == -Infinity) maxId = 0;
    //    return maxId + 1;
    //}
    function guidGenerator() {
        var S4 = function () {
            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
        };
        return (S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4());
    }

    var isChange = false;
    function applySelect(newValue, oldValue) {
        var changeEl = this;
        if (isChange) { isChange = false; return; }
        var rows = $dg2.datagrid("getRows");
        var ed = $dg2.datagrid('getEditor', { index: editIndex, field: 'Barcode' });
        if (!rows || rows.length <= 2) {
            if (ed == null) return;
        }
        $.messager.confirm("提示", "重选择将会清空已选商品,是否继续?", function (r) {
            if (!r) { isChange = true; $(changeEl).combobox("setValue", oldValue); return; }
            for (var i = rows.length - 3; i >= 0; i--) {
                $dg2.datagrid("deleteRow", i);
            }
            editIndex = rows.length - 1;
            $("#grid2").datagrid('loadData', { total: 0, rows: [] });
            appClick();
            comboRows = [];
        })
    }

    function comboRowsExisitBarcode(barcode) {
        var result = false;
        $.each(comboRows, function (index, comboRow) {
            if (barcode == comboRow.Barcode) {
                result = true;
            }
        });
        return result;
    }

</script>
