using Pharos.Logic.OMS.Entity;
using Pharos.Logic.OMS.IDAL;
using Pharos.Utility;
using System;
using System.Collections.Generic;
using System.Linq;

namespace Pharos.Logic.OMS.BLL
{
    public class AreaService
    {
        [Ninject.Inject]
        public IBaseRepository<Area> AreaRepository { get; set; }
        public Pharos.Utility.OpResult SaveOrUpdate(Area model)
        {
            throw new NotImplementedException();
        }

        public IEnumerable<dynamic> GetPageList(System.Collections.Specialized.NameValueCollection nvl, out int recordCount)
        {
            var query= AreaRepository.GetQuery(null);
            recordCount = query.Count();
            return query.ToList();
        }
        public OpResult Deletes(int[] ids)
        {
            var list = AreaRepository.GetQuery(o => ids.Contains(o.AreaID)).ToList();
            AreaRepository.RemoveRange(list);
            return Utility.OpResult.Success();
        }

        public Area GetOne(object id)
        {
            return AreaRepository.Get(id);
        }

    }
}
