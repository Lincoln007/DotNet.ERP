using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Pharos.Utility.Helpers;
namespace Pharos.Logic.DAL
{
    internal class ProductDAL:BaseDAL
    {
        /// <summary>
        /// 自动生成10位数
        /// </summary>
        /// <param name="categorySN"></param>
        /// <returns></returns>
        internal string GenerateNewBarcode(int categorySN)
        {
            if (categorySN>0)
            {
                using (EFDbContext db = new EFDbContext())
                {
                    var sql = string.Format("exec Sys_GenerateNewProductCode {0}", categorySN);
                    return db.Database.SqlQuery<string>(sql).FirstOrDefault();
                }
            }
            return "";
        }
        internal System.Data.DataTable GetChangePriceList(System.Collections.Specialized.NameValueCollection nvl,out int recordCount)
        {
            string sql = @"SELECT dbo.F_SupplierNameById(a.supplierid) SupplierTitle,dbo.F_TrimStrMore(STUFF((SELECT '、'+w.Title FROM dbo.Warehouse w INNER join dbo.SplitString(a.storeId,',',1) s ON s.Value=w.StoreId FOR XML PATH('')),1,1,''),60) as StoreTitle,
                c.Barcode,c.Title,c.Size,b.CurBuyPrice ,b.CurSysPrice , b.OldSysPrice ,b.OldBuyPrice ,b.OldGrossprofitRate,b.CurGrossprofitRate,b.Memo,b.ChangePriceId,b.Id,b.State Flag,a.State,a.CreateDT,
                (CASE WHEN b.EndDate IS NULL THEN CONVERT(VARCHAR(20),b.StartDate,102)+'-不限' ELSE CONVERT(VARCHAR(20),b.StartDate,102)+'至'+CONVERT(VARCHAR(20),b.EndDate,102) end) DateSpacing
                 FROM ProductChangePrice a
                INNER JOIN ProductChangePriceList b ON b.ChangePriceId=a.Id
                INNER JOIN dbo.ProductRecord c ON b.barcode=c.Barcode where 1=1 ";
            if (!nvl["supplierId"].IsNullOrEmpty())
                sql += " and a.supplierid='" + nvl["supplierId"] + "'";
            if (!nvl["storeId"].IsNullOrEmpty())
                sql += " and ','+a.storeId+',' like '%," + nvl["storeId"] + ",%'";
            if (!nvl["state"].IsNullOrEmpty())
                sql += " and a.state=" + nvl["state"];
            return base.ExceuteSqlForPage(sql,out recordCount);
        }
        internal System.Data.DataTable GetChangeLogList(string barcode, out int recordCount)
        {
            string sql =string.Format(@"SELECT STUFF((SELECT '、'+w.Title FROM dbo.Warehouse w INNER join dbo.SplitString(a.storeId,',',1) s ON s.Value=w.StoreId FOR XML PATH('')),1,1,'') as StoreTitle,
                b.SysPrice,a.AuditorDT,a.CreateDT,dbo.F_UserNameById(a.AuditorUID) FullName,b.Id FROM ProductChangePrice a
                INNER join dbo.ProductChangePriceList b ON b.ChangePriceId = a.Id
                WHERE a.State=1 AND b.Barcode='{0}'", barcode);
            return base.ExceuteSqlForPage(sql, out recordCount);
        }

        internal System.Data.DataTable GetTradePriceList(System.Collections.Specialized.NameValueCollection nvl, out int recordCount)
        {
            string sql = @"SELECT dbo.F_TrimStrMore(STUFF((SELECT '、'+w.Title FROM dbo.Supplier w INNER join dbo.SplitString(a.Wholesaler,',',1) s ON s.Value=w.Id FOR XML PATH('')),1,1,''),60) as SupplierTitle,
                c.Barcode,c.Title,c.Size,b.BuyPrice,b.SysPrice,b.TradePrice,b.Memo,b.TradePriceId,b.Id,a.State,a.CreateDT,
                (CASE WHEN b.EndDate IS NULL THEN CONVERT(VARCHAR(20),b.StartDate,102)+'-不限' ELSE CONVERT(VARCHAR(20),b.StartDate,102)+'-'+CONVERT(VARCHAR(20),b.EndDate,102) end) DateSpacing
                 FROM ProductTradePrice a
                INNER JOIN ProductTradePriceList b ON b.TradePriceId=a.Id
                INNER JOIN dbo.ProductRecord c ON b.barcode=c.Barcode where 1=1 ";
            if (!nvl["supplierId"].IsNullOrEmpty())
                sql += " and ','+a.Wholesaler+',' like '%," + nvl["supplierId"] + ",%'";
            if (!nvl["state"].IsNullOrEmpty())
                sql += " and a.state=" + nvl["state"];
            if (!nvl["searchText"].IsNullOrEmpty())
                sql += " and (c.barcode like '%" + nvl["searchText"] + "%' or c.Title like '%" + nvl["searchText"] + "%')";
            return base.ExceuteSqlForPage(sql, out recordCount);
        }
    }
}
