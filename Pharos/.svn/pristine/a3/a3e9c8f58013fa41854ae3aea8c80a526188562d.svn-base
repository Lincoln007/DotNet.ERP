using Pharos.Logic.OMS.Entity;
using Pharos.Logic.OMS.IDAL;
using Pharos.Utility;
using Pharos.Utility.Helpers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Pharos.Logic.OMS.BLL
{
    public class PositionService
    {
        [Ninject.Inject]
        IBaseRepository<SysPositions> PositionRepository { get; set; }
        [Ninject.Inject]
        IBaseRepository<Entity.SysDepartments> DepartRepository { get; set; }
        [Ninject.Inject]
        IBaseRepository<Entity.SysUser> UserRepository { get; set; }
        public IEnumerable<dynamic> GetPageList(System.Collections.Specialized.NameValueCollection nvl)
        {
            var queryPosit= PositionRepository.GetQuery();
            var queryUser = UserRepository.GetQuery();
            var queryDept = DepartRepository.GetQuery();
            var query = from x in queryPosit
                        select new { 
                            x.Id,
                            x.Code,
                            x.Title,
                            x.UpdateDT,
                            x.UpdateUID,
                            x.Status,
                            Updater = (x.UpdateUID == null || x.UpdateUID == string.Empty) ? string.Empty : queryUser.Where(o => o.UserId == x.UpdateUID).Select(o => o.FullName).FirstOrDefault(),
                            UserCount = queryUser.Count(o => o.PositId == x.PositId),
                            DepartMent=x.DeptId>0?queryDept.Where(o=>o.DeptId==x.DeptId).Select(o=>o.Title).FirstOrDefault():string.Empty,
                            PDepartMent = x.DeptId > 0 ?queryDept.Where(i=>i.DeptId== queryDept.Where(o => o.DeptId == x.DeptId).Select(o => o.PDeptId).FirstOrDefault()).Select(o=>o.Title).FirstOrDefault()+"/" : string.Empty,
                        };
            return query.ToList();
        }
        public OpResult SaveOrUpdate(SysPositions obj)
        {
            if (PositionRepository.IsExists(o => o.Code == obj.Code && o.Id != obj.Id))
                return OpResult.Fail("该代码已存在!");
            if (obj.Id == 0)
            {
                obj.PositId = Guid.NewGuid().ToString("n");
                obj.UpdateDT=obj.CreateDT = DateTime.Now;
                obj.UpdateUID= obj.CreateUID = CurrentUser.UID;
                PositionRepository.Add(obj, false);
            }
            else
            {
                var menu = DepartRepository.Get(obj.Id);
                obj.ToCopyProperty(menu, new List<string>() { "CreateDT", "CreateUID" });
                obj.UpdateDT = DateTime.Now;
                obj.UpdateUID = CurrentUser.UID;
            }
            PositionRepository.SaveChanges();
            return OpResult.Success();
        }
        public OpResult Deletes(int[] ids)
        {
            var list = PositionRepository.GetQuery(o => ids.Contains(o.Id)).ToList();
            PositionRepository.RemoveRange(list);
            return OpResult.Success();
        }
        public SysPositions Get(int id)
        {
            return PositionRepository.Get(id);
        }
        public void SetState(short mode, int id)
        {
            var obj = Get(id);
            obj.Status = mode == 1;
            PositionRepository.SaveChanges();
        }
    }
}
