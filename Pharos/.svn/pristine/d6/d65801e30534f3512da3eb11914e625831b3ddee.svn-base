using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Http;
using Newtonsoft.Json.Linq;
using Pharos.Logic.ApiData.Mobile.Exceptions;
using Pharos.Logic.ApiData.Pos.Exceptions;
using Pharos.Utility.Helpers;
namespace Pharos.Api.Retailing.Controllers
{
    public class UserInfoController : ApiController
    {
        /// <summary>
        /// 用户信息
        /// </summary>
        /// <param name="json">{}</param>
        /// <returns></returns>
        public object POST([FromBody]JObject json)
        {
            var usercode = json.Property("account", true);
            if (string.IsNullOrWhiteSpace(usercode))
                throw new PosException("登陆帐号为空!");
            var user = Pharos.Logic.BLL.UserInfoService.GetUserAndSup(usercode);
            if (user == null)
                throw new PosException("登陆帐号不存在!");
            return user;
        }
    }
    public class UpdatePasswordController : ApiController
    {
        /// <summary>
        /// 密码修改
        /// </summary>
        /// <param name="json">{}</param>
        /// <returns></returns>
        public void POST([FromBody]JObject json)
        {
            var account = json.Property("account", true);
            var oldpassword = json.Property("oldpassword", true);
            var newpassword = json.Property("newpassword", true);
            Pharos.Logic.BLL.UserInfoService.UpdatePassword(account, oldpassword, newpassword);
        }
    }
    public class HandSignController : ApiController
    {
        /// <summary>
        /// 手势密码设置 
        /// </summary>
        /// <param name="json">{}</param>
        /// <returns></returns>
        public void POST([FromBody]JObject json)
        {
            var account = json.Property("account", true);
            var oldpassword = json.Property("oldpassword", true) ?? "";
            var newpassword = json.Property("newpassword", true);
            Pharos.Logic.BLL.UserInfoService.UpdateHandsign(account, oldpassword, newpassword);
        }
        /// <summary>
        /// 手势密码是否开启
        /// </summary>
        /// <returns></returns>
        public int GET(string account)
        {
            var user = Pharos.Logic.BLL.UserInfoService.GetHandsign(account);
            return user == null ? 0 : 1;
        }
    }
    public class GetHandSignController : ApiController
    {
        /// <summary>
        /// 获取手势密码
        /// </summary>
        /// <param name="json">{}</param>
        /// <returns></returns>
        public object POST([FromBody]JObject json)
        {
            var account = json.Property("account", true);
            var password = json.Property("password", true);
            var user = Pharos.Logic.BLL.UserInfoService.GetHandsign(account);
            if (user == null) throw new MessageException("帐号不存在!");
            var pwd = Convert.ToString(user.GetPropertyValue("LoginPwd"));
            if (pwd != password)
                throw new MessageException("密码不正确!");
            return user.GetPropertyValue("Handsign");
        }
    }

    public class MobileController : ApiController
    {
        /// <summary>
        /// 设置手机号码
        /// </summary>
        /// <param name="json">请求参数{ "emUserName":"xxx", "mobile":"xxx" }</param>
        /// <returns></returns>
        public object POST([FromBody]JObject json)
        {
            var emUserName = json.Property("emUserName", true);
            var mobile = json.Property("mobile", true);
            return Pharos.Logic.BLL.UserInfoService.SetMobile(emUserName, mobile);
        }
    }
    public class SignatureController : ApiController
    {
        /// <summary>
        /// 设置个性签名
        /// </summary>
        /// <param name="json">请求参数{ "emUserName":"xxx", "signature":"xxx" }</param>
        /// <returns></returns>
        public object POST([FromBody]JObject json)
        {
            var emUserName = json.Property("emUserName", true);
            var signature = json.Property("signature", true);
            return Pharos.Logic.BLL.UserInfoService.SetSignature(emUserName, signature);
        }
    }
}