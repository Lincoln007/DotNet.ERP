@{
    ViewBag.Title = Pharos.Sys.SysConstPool.Page_Title;
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    var hideReSave = !CurrentUser.HasPermiss(SysConstLimits.库存管理_复盘录入);
    var hideApproval = !CurrentUser.HasPermiss(SysConstLimits.库存管理_盘点审核);
    ViewData.OpBtnInfo(new OpBtnInfo(addText: "新增盘点", editText: "复盘", hideDel: true,hideAdd:true,hideEdit:false,firstLoadData:false));
}

@section search{
    <table class="table-toolbar" style="margin-left:1px;">
        <tr>
            <td class="label-toolbar">
                <label>盘点门店:</label>
            </td>
            <td class="input-toolbar">
                @Html.DropDownList("storeId", ViewBag.shops as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "width:160,onSelect:storeSelect,validType:'requiredForCombo'" })
            </td>
            <td class="label-toolbar">
                <label>盘点批次:</label>
            </td>
            <td class="input-toolbar">
                @Html.DropDownList("checkBatch", new List<SelectListItem>() { new SelectListItem() { Text = "请选择", Value = "" } }, new { @class = "easyui-combobox datacontrol", data_options = "width:120,validType:'requiredForCombo',editable:false,onChange:batchChange" })
            </td>
        </tr>
    </table>
}
@section toolbar
{
    @if(!hideApproval)
    {
        <a href="#" class="easyui-linkbutton cus4 linkbtn" id="btnExcel" data-options="iconCls:'icon-export'" onclick="auditor()">审核通过，自动纠正库存</a>
    }
}

<script type="text/javascript">
    $(function () {
        $("#btnExcel").insertAfter($("#searchBtn"));
    });
    pharos.manager.geturl = "@Url.Action("FindApprovalList")";
    pharos.manager.sortOrder = "asc";
    pharos.manager.showFooter = true;
    pharos.manager.columns = [[
    {
        title: '审核状态', field: 'State', width: 60, formatter: function (value, row, index) {
            if (row.StoreTitle == undefined) {
                return "";
            }
            else {
                return value == 1 ? "已审" : "未审";
            }
        }
    },
    { field: 'Id', checkbox: true, hidden: true },
    { field: 'StoreTitle', title: '盘点门店', width: 130 },
    { field: 'CheckBatch', title: '盘点批次', width: 100 },
    { field: 'LockDate', title: '实盘日期', width: 100 },
    { field: 'ProductCode', title: '货号', width: 100,hidden:true },
    {
        field: 'Barcode', title: '条码', width: 130, formatter: function (value, row) {
            var val = value;
            if (row.Barcodes) {
                val += "<br/><font color='blue' title='一品多码'>" + row.Barcodes.replace(/,/g, "<br/>") + "</font>";
            }
            return val;
        }
    },
    { field: 'Title', title: '品名', width: 150 },
    { field: 'BrandTitle', title: '品牌', width: 80 },
    { field: 'SubUnit', title: '单位', width: 60 },
    { field: 'LockNumber', title: '锁库库存', width: 80 },
    { field: 'ActualNumber', title: '实盘数量', width: 80 },
    //{ field: 'CorrectNumber', title: '库存纠正数量', width: 80 },
    { field: 'FullName', title: '盘点员', width: 100 },
    {
        title: '盘点状态', field: 'pdState', width: 100, formatter: function (value, row, index) {
            if (row.StoreTitle == undefined) {
                return "";
            }
            else if (row.ActualNumber) {
                return "正常盘点商品";
            }
            else {
                return "漏盘商品";
            }
        }
    },
    ]];
    function storeSelect(record) {
        if (!record.value) {
            $("#checkBatch").combobox("clear").combobox("loadData", [record]);
            return;
        }
        $.post("@Url.Action("StoreSelect")", { storeId: record.value, t: Math.random() }, function (data) {
            $("#checkBatch").combobox("clear").combobox("loadData", data.batchs);
        }, "json");
    }
    function batchChange(nv, ov) {
        pharos.manager.gridReload();
    }
    function auditor() {
        var batch = $("#checkBatch").combobox("getValue");
        if (!batch) {
            $.messager.alert("提示", "请选择盘点批次!"); return;
        }
        var rows = pharos.manager.$dg.datagrid("getRows");
        if (rows && rows.length > 0) {
            if (rows[0].State == 1) {
                $.messager.alert("提示", "该批次已审核通过！");
                return;
            }
        }
        $.messager.confirm("提示", "审核通过后将自动库存纠正且不能再复盘,是否继续?", function (r) {
            if (!r) return r;
            $.post("@Url.Action("ApprovalPass")", { checkBatch: batch, t: Math.random() }, function (d) {
                if (d.successed) {
                    $.messager.alert("提示", "操作成功！", "info");
                    pharos.manager.gridReload();
                    storeSelect({ value: $("#storeId").combobox("getValue") });
                } else {
                    $.messager.alert("提示", "操作失败！" + d.message, "error");
                }
            }, "json");
        })
    }
    pharos.manager.editItem = function (Id, row) {
        this.Id = Id;
        if (row.State == 0) {
            @if(!hideReSave)
            {
            @:openDialog600(this.editText, "@Url.Action("ReSave")?id=" + Id + "&ActualNumber=" + row.ActualNumber);
            }
        }

    }
    function editBefore(rowData, field, index, value) {
        if (rowData.State == 1) {
            //$.messager.alert("提示", "该批次已审批不允许修改!");
            return false;
        }
        if (field == "CorrectNumber") {
            update(rowData.Id);
            return false;
        }
        return true;
    }
    function update(id) {
        //openDialog600("库存纠正", "@Url.Action("CrrectSave")?id=" + id);
        }
</script>