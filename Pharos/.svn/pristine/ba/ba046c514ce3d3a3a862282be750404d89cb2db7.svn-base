@{
    ViewBag.Title = "RechargeIndex";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    ViewData.OpBtnInfo(new OpBtnInfo(addText: "新增卡片", delText: "移除", hideDel: true));
}
@section search{
    <table class="table-toolbar">
        <tr>
            <td class="label-toolbar">
                <label>类型：</label>
            </td>
            <td class="input-toolbar">
                @*<select class="easyui-combobox"><option>全部</option></select>*@
                @Html.DropDownList("cardType", ViewBag.cardType as List<SelectListItem>, new { @class = "easyui-combobox", data_options = "editable:false" })
            </td>
            <td class="label-toolbar">
                <label>批次：</label>
            </td>
            <td class="input-toolbar">
                @*<select class="easyui-combobox"><option>全部</option></select>*@
                @Html.DropDownList("batchSN", ViewBag.batchs as List<SelectListItem>, new { @class = "easyui-combobox", data_options = "editable:false" })
            </td>
            <td class="label-toolbar">
                <label>状态：</label>
            </td>
            <td class="input-toolbar">
                <select name="state" class="easyui-combobox">
                    <option value="-1">全部</option>
                    <option value="0">未制卡</option>
                    <option value="2">可用</option>
                    <option value="3">已作废</option>
                </select>
            </td>
            <td class="label-toolbar">
                <label>创建人：</label>
            </td>
            <td class="input-toolbar">
                @*<select class="easyui-combobox"><option>全部</option><option>张三</option></select>*@
                @Html.DropDownList("createUID", ViewBag.users as List<SelectListItem>, new { @class = "easyui-combobox", data_options = "editable:false" })
            </td>
            <td class="label-toolbar">
                <label>创建日期:</label>
            </td>
            <td class="input-toolbar">
                <input name="beginDate" class="datacontrol Wdate" style="width:120px" />
            </td>
            <td style="float:left;margin-left:7px;margin-right:7px;line-height:28px;">-</td>
            <td class="input-toolbar">
                <input name="endDate" class="datacontrol Wdate" style="width:120px" />
            </td>
        </tr>
    </table>
}
<div id="win" class="easyui-dialog" data-options="title:'生成会员卡',cache:false,modal:true,width:420,height:150,closed:true,collapsible:false,minimizable:false,maximizable:false">
    <input type="text" value="正在生成会员卡，请稍候......" id="tips" style="width:100%; border:0; margin:20px 0 0 20px;" />
    <input type="hidden" value="0" id="State" />
</div>
@section toolbar
{
    <a class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-ok'" onclick="makingCard()">生成卡片</a>
    <a class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-export'" onclick="exportMakingCard()">导出制卡</a>
    @*<a class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-export'" onclick="">导出历史</a>*@
    <a href="#" class="easyui-menubutton" style="margin-left:0px;" data-options="menu:'#mm1',iconCls:'icon-edit'">设置状态</a>
    <div id="mm1" style="width:150px;">
        @*<div data-options="iconCls:''" onclick="UpdateMemberCardState(1)">设为已制卡</div>*@
        <div data-options="iconCls:''" onclick="UpdateMemberCardState(2)">设为可用</div>
        <div data-options="iconCls:''" onclick="UpdateMemberCardState(3)">设为作废</div>
    </div>
}

<script type="text/javascript">

    $(function () {
        var btngenerate = [{
            text: '关闭',
            iconCls: 'icon-cancel',
            handler: function () {
                $('#win').dialog('close');

            }
        }];
        $("#win").dialog({
            buttons: btngenerate,
            onClose: function () {
                if ($("#State").val() == "0") {
                    $('#win').dialog('open');
                    $.messager.alert("提示", "正在生成会员卡，无法关闭！");
                }
                else {
                    $('#win').dialog('close');
                    pharos.manager.gridReload();
                }
            },
            onOpen: function () {
                $("#tips").val("正在生成会员卡，请稍候......");
                $("State").val("0");
            }
        });
    })

    pharos.manager.geturl = "@Url.Action("FindCreateCardPageList")";
    pharos.manager.editurl = "@Url.Action("CreateMemberCard")";
    pharos.manager.columns = [[
        { field: 'Id', checkbox: true },
        { field: 'BatchSN', title: '批次', width: 80 },
        {
            field: 'CardType', title: '卡片种类', width: 80, formatter: function (value, row, index) {
                switch (value) {
                    case 1:
                        return "电子卡";
                    case 2:
                        return "磁卡";
                    case 3:
                        return "IC卡";
                }
            }
        },
        { field: 'CardName', title: '卡片名称', width: 80 },
        { field: 'MakeNumber', title: '制作数量', width: 80 },
        { field: 'StateTitle5', title: '发放数量', width: 80 },
        { field: 'StateTitle6', title: '已领数量', width: 80 },
        { field: 'AllRechange', title: '允许充值', width: 80 },
        { field: 'MinRecharge', title: '最低充值', width: 80 },
        {
            field: 'State', title: '状态', width: 80, formatter: function (value, row, index) {
                switch (value) {
                    case 0:
                        return "未制卡";
                        break;
                    case 1:
                        return "已生成";
                        break;
                    case 2:
                        return "可用";
                        break;
                    case 3:
                        return "已作废";
                        break;
                }
            }
        },
        {
            field: 'ExpiryStart', title: '有效期限', width: 150, formatter: function (value, row) {
                if (row.ExpiryEnd == null || row.ExpiryEnd == "") {
                    return value.replace(" 00:00:00", "") + "~ 不限";
                } else {
                    return value.replace(" 00:00:00", "") + "~" + row.ExpiryEnd.replace(" 00:00:00", "");
                }
            }
        },
        { field: 'ExpiryEnd', hidden: true },
        { field: 'CreateDT', title: '创建时间', width: 130 },
        { field: 'CreateUID', title: '创建人', width: 80 },
    ]];
    function UpdateMemberCardState(state) {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("UpdateMemberCardState")", { state: state, ids: ids }, function (result) {
            if (result.successed) {
                $.messager.alert("提示", "修改成功！", "info");
                pharos.manager.gridReload();
            } else {
                $.messager.alert("提示", "修改失败！" + result.message, "error");
            }
        }, "json");
    }
    //导出
    function exportMakingCard() {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var isPass = true;
        var errorMsg = "";
        var ids = $.map(rows, function (item) {
            if (item.State == 0) {
                isPass = false;
                errorMsg = "请先操作生成会员卡！";
                return false;
            } else if (item.State == 2) {
                isPass = false;
                errorMsg = "该批次已导出！";
                return false;
            }
            return item.Id;
        }).join();
        if (!isPass) {
            $.messager.alert("提示", errorMsg, "info");
            return false;
        }
        window.location.href = '@Url.Action("ExportMemberCard")?ids=' + ids;
    }
    //生成卡片
    function makingCard() {
        var rows = pharos.manager.selectItems();
        if (!rows) return;

        var isPass = true;
        var errorMsg = "";

        var ids = $.map(rows, function (item) {
            if (item.State != 0) {
                isPass = false;
                errorMsg = "不能重复生成同一批次！";
                return false;
            }
            return item.Id;

        }).join();
        if (!isPass) {
            $.messager.alert("提示", errorMsg, "info");
            return false;
        }
        $("#win").dialog("open");
        $.post("@Url.Action("GenerateMemberCard")", { ids: ids }, function (result) {
            if (result.successed) {
                $.messager.alert("提示", result.message, "info");
                pharos.manager.gridReload();
            } else {
                $.messager.alert("提示", result.message, "error");
            }
            $("#State").val("1");

        }, "json");
    }
</script>