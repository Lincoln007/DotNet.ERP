using Pharos.Logic.OMS;
using Pharos.Logic.OMS.Entity;
using Pharos.Logic.OMS.Entity.View;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Pharos.Utility.Helpers;
using Pharos.Utility;
using Pharos.Logic.OMS.BLL;

namespace Pharos.OMS.Retailing.Controllers
{
    public class MemberController : BaseController
    {

        [Ninject.Inject]
        TradersService tradersService { get; set; }

        [Ninject.Inject]
        VisitTrackService visitTrackService { get; set; }

        public ActionResult Index(int all=0)
        {
            //0是全部显示，1是部分显示
            ViewBag.all = all;
            //跟踪状态
            ViewBag.TrackStautsId = ListToSelect(tradersService.getDataList(205).Select(o => new SelectListItem() { Value = o.DicSN.ToString(), Text = o.Title }), emptyTitle: "请选择");
            //业务员
            ViewBag.user = ListToSelect(tradersService.getUserList().Select(o => new SelectListItem() { Value = o.UserId, Text = o.FullName, Selected = (o.UserId == CurrentUser.UID&&all>0) }), emptyTitle: "请选择");
            //客户类型
            ViewBag.TraderType = ListToSelect(tradersService.getTraderTypeList().Select(o => new SelectListItem() { Value = o.TraderTypeId.ToString(), Text = o.Title }), emptyTitle: "请选择");
            //经营类目
            ViewBag.BusinessScopeId = ListToSelect(tradersService.getBusinessList().Select(o => new SelectListItem() { Value = o.ById, Text = o.Title }), emptyTitle: "请选择");
            return View();
        }

        public ActionResult FindPageList()
        {
            var count = 0;
            var list = tradersService.GetPageList(Request.Params, out count);
            return ToDataGrid(list, count);
        }

        /// <summary>
        /// 获取省
        /// </summary>
        /// <returns></returns>
        public ActionResult getProvince()
        {
            var province = tradersService.getProvince();
            return new JsonNetResult(province);
        }

        /// <summary>
        /// 获取城市
        /// </summary>
        /// <returns></returns>
        public ActionResult getCity(int ProvinceID)
        {
            var city = tradersService.getCity(ProvinceID);
            return new JsonNetResult(city);
        }

        /// <summary>
        /// 获取区县
        /// </summary>
        /// <returns></returns>
        public ActionResult getDistrict(int CityID)
        {
            var district = tradersService.getDistrict(CityID);
            return new JsonNetResult(district);
        }

        public ActionResult Save(int? id)
        {
            //商户分类
            ViewBag.TraderType = ListToSelect(tradersService.getTraderTypeList().Select(o => new SelectListItem() { Value = o.TraderTypeId.ToString(), Text = o.Title }), emptyTitle: "请选择");

            //经营模式
            //ViewBag.ModeId = ListToSelect(tradersService.getDataList().Select(o => new SelectListItem() { Value = o.DicSN.ToString(), Text = o.Title }), emptyTitle: "请选择");

            //经营类目
            ViewBag.BusinessScopeId = tradersService.getBusinessList();

            //跟踪状态
            ViewBag.StautsId = ListToSelect(tradersService.getDataList(205).Select(o => new SelectListItem() { Value = o.DicSN.ToString(), Text = o.Title }), emptyTitle: "请选择");

            var obj = new Traders{ 
            BusinessScopeId="",
            Pay=""
           };
            if (id.HasValue)
            {
                obj = tradersService.GetOne(id.Value);
            }
            //登记人ID
            obj.CreateUID = obj.CreateUID.IsNullOrEmpty() ? CurrentUser.UID : obj.CreateUID;
            //登记人
            ViewBag.Create = tradersService.getFullName(obj.CreateUID);
            //采购意向清单
            ViewBag.OrderList = tradersService.getOrderList(obj.CID);
            //回访小结
            ViewBag.VisitTrack = visitTrackService.getVisitTrackList(obj.CID);
            //设备分类
            ViewBag.DeviceClass = ListToSelect(tradersService.getDataList(197).Select(o => new SelectListItem() { Value = o.DicSN.ToString(), Text = o.Title }));
            //采购意向清单单位
            ViewBag.OrderUnit = ListToSelect(tradersService.getDataList(254).Select(o => new SelectListItem() { Value = o.DicSN.ToString(), Text = o.Title }));
            //业务员
            ViewBag.user = ListToSelect(tradersService.getUserList().Select(o => new SelectListItem() { Value = o.UserId, Text = o.FullName }), emptyTitle: "请选择");
            //支付方式
            ViewBag.pay = tradersService.getDataList(226);
            //现有门店数量
            ViewBag.storeNum = ListToSelect(tradersService.getDataList(232).Select(o => new SelectListItem() { Value = o.DicSN.ToString(), Text = o.Title }), emptyTitle: "请选择");
            //每门店人均数
            ViewBag.averageNum = ListToSelect(tradersService.getDataList(244).Select(o => new SelectListItem() { Value = o.DicSN.ToString(), Text = o.Title }), emptyTitle: "请选择");
            return View(obj.IsNullThrow());
        }

        /// <summary>
        /// 保存、修改
        /// </summary>
        /// <param name="traders">商户资料</param>
        /// <param name="h_OrderList">采购意向清单</param>
        /// <param name="h_VisitTrack">回访小结</param>
        /// <param name="BusinessScopeId">经营类别</param>
        /// <param name="Pay">支付方式</param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult Save(Traders traders, string h_OrderList, string h_VisitTrack, string[] BusinessScopeId, string[] Pay)
        {
            var op = tradersService.Save(traders, h_OrderList, h_VisitTrack, BusinessScopeId,Pay);
            return new OpActionResult(op);
        }

        /// <summary>
        /// 商户审核通过、设为无效商户
        /// </summary>
        /// <param name="ids"></param>
        /// <param name="state"></param>
        /// <returns></returns>
        [HttpPost]
        public ActionResult setStatus(string ids, short status)
        {
            return new JsonNetResult(tradersService.setStatus(ids, status));
        }

        [HttpPost]
        public ActionResult Delete(int[] ids)
        {
            return new JsonNetResult(tradersService.Deletes(ids));
        }

    }
}
