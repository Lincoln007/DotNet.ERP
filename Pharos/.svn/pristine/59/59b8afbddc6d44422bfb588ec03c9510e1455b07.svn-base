using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Pharos.Logic.Entity;
using Pharos.Sys.Entity;

namespace Pharos.Logic.BLL
{
    public class MemberRechargeService : BaseService<MemberRecharge>
    {
        /// <summary>
        /// get datagrid datas by where 
        /// </summary>
        /// <param name="beginDate"></param>
        /// <param name="endDate"></param>
        /// <param name="keyWold"></param>
        /// <param name="count"></param>
        /// <returns></returns>
        public object FindRechargePageList(DateTime? beginDate, DateTime? endDate, string keyWold, out int count)
        {
            var query = from a in CurrentRepository.Entities.Where(o => o.CompanyId == CommonService.CompanyId)
                        join b in BaseService<MembershipCard>.CurrentRepository.Entities
                        on a.CardId equals b.CardSN
                        join c in BaseService<Members>.CurrentRepository.Entities
                        on b.MemberId equals c.MemberId
                        join d in BaseService<SysStoreUserInfo>.CurrentRepository.Entities
                        on a.CreateUID equals d.UID
                        select new { a, b, c, d };


            if (beginDate != null)
            {
                query = query.Where(o => o.a.CreateDT > beginDate);
            }
            if (endDate != null)
            {
                query = query.Where(o => o.a.CreateDT < endDate);
            }
            if (!string.IsNullOrEmpty(keyWold))
            {
                query = query.Where(o => o.b.CardSN.Contains(keyWold) || o.c.MemberNo.Contains(keyWold) || o.c.MobilePhone.Contains(keyWold));
            }
            count = query.Count();
            if (count > 0)
            {
                //exits data
                return query.Select(o => new
                {
                    //cardsn user money rechangemoney giftmoney balance createdate type memo douser
                    CardSN = o.b.CardSN,
                    MemberFullName = o.c.RealName,
                    BeforChargeMonunt = o.a.AfterAmount - o.a.RechargeAmount,
                    RechargeAmount = o.a.RechargeAmount,
                    GivenAmount = o.a.GivenAmount,
                    PresentExp = o.a.PresentExp,
                    Blance = o.a.AfterAmount,
                    CreateDT = o.a.CreateDT,
                    CreateUID = o.d.FullName,
                    Memo = o.a.Memo
                });
            }
            else
            {
                return null;
            }
        }
    }
}
