@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    ViewData.OpBtnInfo(new OpBtnInfo(addText: "新增代理商", hideDel: true, searchHeight: 87));
}

<style type="text/css">
    .table-toolbar .s_tr td {
        padding-top: 9px;
    }
</style>

@section search{
    <table class="table-toolbar">
        <tr>
            <td class="label-toolbar">
                <label>指派人：</label>
            </td>
            <td class="input-toolbar">
                 @Form.Combobox("AssignUid", ViewBag.Ass as List<SelectListItem>, dataOptions: "editable:false,panelMaxHeight:200")
            </td>
            <td class="label-toolbar">
                <label>代理商类型：</label>
            </td>
            <td class="input-toolbar">
                @Html.DropDownList("Type", ViewBag.ty as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "novalidate:true,editable: false,width:120" })
            </td>
            <td class="label-toolbar">
                <label>创建日期：</label>
            </td>
            <td class="input-toolbar">
                <input name="CreateDT_begin" id="" class="Wdate datacontrol" style="width: 100px;" onclick="WdatePicker({ dateFmt: 'yyyy-MM-dd' })" />
            </td>
            <td class="label-toolbar">
                <label style="width:10px;margin-right:3px;position:relative;top:-4px;">-</label>
            </td>
            <td class="input-toolbar">
                <input name="CreateDT_end" id="" class="Wdate datacontrol" style="width: 100px;" onclick="WdatePicker({ dateFmt: 'yyyy-MM-dd' })" />
            </td>

        </tr>

        <tr class="s_tr">
            <td class="label-toolbar">
                <label>关键字：</label>
            </td>
            <td class="input-toolbar" style="padding-right:10px;">
                @Html.DropDownList("keywordType", new List<SelectListItem>() { new SelectListItem() { Text = "按代理商编号", Value = "0" }, new SelectListItem() { Text = "按代理商名称", Value = "1" }, new SelectListItem() { Text = "按法人姓名", Value = "2" }, new SelectListItem() { Text = "按联系人", Value = "3" } }, new { @class = "easyui-combobox datacontrol", data_options = "novalidate:true, editable: false,width:120" })
            </td>
            <td class="input-toolbar">
                <input name="keyword" class="datacontrol easyui-textbox font-12" placeholder="" data-options="prompt:'关键字',width:231" />
            </td>
        </tr>

    </table>
}
@section toolbar
{
    <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-stale'" onclick="settingUser()">设定主登录账号</a>
    <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-stale'" onclick="renewal()">续签代理</a>
    <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-stale'" onclick="StopAgents()">终止所选代理商</a>
    @Html.DropDownList("AssignUid", ViewBag.upAss as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "novalidate:true,editable: true,width:200,onSelect:upAssignUid" })
}
<script type="text/javascript">

    //日期
    var dt = "@ViewBag.dt";
    //开始日期是否大于结束日期
    function dateCompare(startdate, enddate) {
        var arr = startdate.split("-");
        var starttime = new Date(arr[0], arr[1], arr[2]);
        var starttimes = starttime.getTime();

        var arrs = enddate.split("-");
        var lktime = new Date(arrs[0], arrs[1], arrs[2]);
        var lktimes = lktime.getTime();

        if (starttimes > lktimes) {
            return false;
        }
        else
            return true;
    }

    pharos.manager.$dg.datagrid({
        rowStyler: function (index, row) {
            if (typeof (row.EndTime) == "undefined") {
                return '';
            } 
            if (row.Status == 3 || row.Status == 4 || dateCompare(row.EndTime, dt)) return 'background-color:#ede9e9;color:#9d9c9c';
        }
    })


    pharos.manager.frozenColumns = [[
        { field: 'Id', checkbox: true },
        { field: 'Title', title: '代理商类型', editor: { type: 'text', required: true }, width: 100 },
        { field: 'AgentsId', title: '代理商编号', editor: { type: 'text', required: true }, width: 100 },
        { field: 'FullName', title: '代理商全称', editor: { type: 'text', required: true }, width: 100 },
        { field: 'Name', title: '代理商简称', editor: { type: 'text', required: true }, width: 100 }
    ]];

    pharos.manager.columns = [[
        {
            field: 'Status', title: '代理商状态', editor: { type: 'text', required: true }, width: 100, formatter: function (value, row, index) {
                if (dateCompare(row.EndTime, dt)) {
                    return "到期";
                }

                if (value == "1") {
                    return "待审";
                } else if (value == "2") {
                    return "正常";
                } else if (value == "3") {
                    return "终止";
                }
                else if (value == "4") {
                    return "到期";
                }
            }
        },
        {
            field: 'PAgentsId', title: '上级代理商编号', editor: { type: 'text', required: true }, width: 120, formatter: function (value, row, index) {
                if (value == "0") {
                    return "";
                } else {
                    return value;
                }
            }
        },
        { field: 'EndTime', title: '到期日期', editor: { type: 'text', required: true }, width: 100 },
        { field: 'AgentAreaNames', title: '代理区域', editor: { type: 'text', required: true }, width: 400 },
        { field: 'ApiName', title: '支付通道', editor: { type: 'text', required: true }, width: 120 },
        { field: 'Cost', title: '成本费率', editor: { type: 'text', required: true }, width: 90 },
        { field: 'Lower', title: '下级费率', editor: { type: 'text', required: true }, width: 110 },
        {
            field: 'apiStatus', title: '通道状态', editor: { type: 'text', required: true }, width: 100, formatter: function (value, row, index) {
                if (value == "0") {
                    return "未启用";
                } else if (value == "1") {
                    return "已启用";
                } else if (value == "2") {
                    return "已关闭";
                }
            }
        },
        { field: 'Contract', title: '合同编号', editor: { type: 'text', required: true }, width: 150 },
        { field: 'CorporateName', title: '法人姓名', editor: { type: 'text', required: true }, width: 150 },
        { field: 'IdCard', title: '法人身份证号', editor: { type: 'text', required: true }, width: 150 },
        { field: 'CompanyPhone', title: '公司电话', editor: { type: 'text', required: true }, width: 150 },
        { field: 'Address', title: '公司地址', editor: { type: 'text', required: true }, width: 150 },
        { field: 'LinkMan', title: '联系人', editor: { type: 'text', required: true }, width: 150 },
        { field: 'Phone1', title: '联系电话1', editor: { type: 'text', required: true }, width: 150 },
        { field: 'Phone2', title: '联系电话2', editor: { type: 'text', required: true }, width: 150 },
        { field: 'QQ', title: 'QQ', editor: { type: 'text', required: true }, width: 150 },
        { field: 'Email', title: 'Email', editor: { type: 'text', required: true }, width: 150 },
        { field: 'Weixin', title: '微信号', editor: { type: 'text', required: true }, width: 150 },
        { field: 'CreateTime', title: '创建时间', editor: { type: 'text', required: true }, width: 150 },
        { field: 'sysCreFullName', title: '创建人', editor: { type: 'text', required: true }, width: 150 },
        { field: 'sysAssFullName', title: '指派人', editor: { type: 'text', required: true }, width: 150 }
    ]];

    pharos.manager.addItem = function () {
        this.Id = "";
        openWin({ 'title': this.addText, 'width': 1000, 'height': 560, hideSave: false, 'url': this.editurlNocache() });
    };

    pharos.manager.editItem = function (id, row) {
        this.Id = id;
        openWin({ 'title': this.editText, 'width': 1000, 'height': 560, hideSave: false, 'url': this.editurlNocache() });
    }

    //终止所选代理商
    function StopAgents() {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("StopAgents")", { ids: ids, t: Math.random()}, function (d) {
            if (d.successed) {
                $.messager.alert("提示", "终止成功！", "info");
                pharos.manager.gridReload();
            } else {
                $.messager.alert("提示", "终止失败！" + d.message, "error");
            }
        }, "json");
    }


    $(function () {
        //设定主登录账号
        $("#TraderType").click(function () {
            openWin({ 'title': '客户分类', 'width': 600, 'height': 350, hideSave: true, 'url': '/TraderType/Index' });
        });
    });

    //设定指派人
    function upAssignUid(record) {
        if (record.value == "" || record.value==null)
        {
            return;
        }
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("upAssignUid")", { Ids: ids, t: Math.random(), AssignUid: record.value }, function (d) {
        if (d.successed) {
            $.messager.alert("提示", "归类指派人成功！", "info");
            pharos.manager.gridReload();
        } else {
            $.messager.alert("提示", "归类指派人失败！" + d.message, "error");
        }
    }, "json");
    }

    //续签代理
    function renewal() {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("isExpires")", { ids: ids, t: Math.random()}, function (d) {
            if (d == "1") {
                $.messager.alert("提示", "所选择的代理商存在未到期，无法续签！", "error");
            }
            else {
                openWin({ 'title': '续签代理', 'width': 400, 'height': 300, hideSave: false, 'url': '/AgentsInfo/Renewal?ids=' + encodeURIComponent(ids) });
            }
        }, "html");
    }

    //设定主登录账号
    function settingUser() {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        if (rows.length > 1)
        {
            $.messager.alert("提示", "只能选择一个代理商！", "error");
            return;
        }
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        openWin({ 'title': '设定主登录账号', 'width': 400, 'height': 300, hideSave: false, 'url': '/AgentsInfo/SettingUser?ids=' + encodeURIComponent(ids) });
    }



</script>


