@using Pharos.Logic.OMS.Entity
@using Pharos.Logic.OMS.Entity.View
@model  BankCardInfo
@{
    ViewBag.Title = "Save";
    Layout = "~/Views/Shared/_FormLayout.cshtml";
}

<style type="text/css">
    .formbox td {
        padding: 5px 0px;
    }
</style>

<script type="text/javascript">

    //获取url的参数
    function getUrlParam(name) {

        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象

        var r = window.location.search.substr(1).match(reg);  //匹配目标参数

        if (r != null) return unescape(r[2]); return null; //返回参数值

    }

    $(function () {
        //代理商编号
        $("#AgentsId").next().find(".combo-arrow").removeClass("combo-arrow");
        //商户号
        $("#CID").next().find(".combo-arrow").removeClass("combo-arrow");
    });

    function SaveBefore() {
        return true;
    }

    var comboRows = [];
    var comboload = function (param, success, error) {
        //获取输入的值
        var q = param.q || "";
        //此处q的length代表输入多少个字符后开始查询
        if (q.length <= 0) return false;
        var $combo = $(this);

        var id = getUrlParam('id');
        if (id == null) {
            id = 0;
        }
        $.ajax({
            url: "@Url.Action("getAgentsIdWhere", "AgentsInfo")",
            type: "post",
        data: {
            //传值，还是JSON数据搜索
            keyword: q,
            id:id
        },
        dataType: "json",
        success: function (data) {
            comboRows = data.rows;
            //关键步骤，遍历一个MAP对象
            var items = $.map(data.rows, function (item) {
                return { AgentsId: item.AgentsId, AgentsId: item.AgentsId };
            });
            //执行loader的success方法
            success(items);
        },    //异常处理
        error: function (xml, text, msg) {
            error.apply(this, arguments);
        }
    });
    }

</script>

<div class="default-form">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(o => o.Id)
        <div class="content">

            <div class="formbox" style="border-bottom:0px;">
                <table class="table-form" width="100%" >

                    <tr>
                        <td class="name">代理商编号：</td>
                        <td class="input">@Html.TextBoxFor(o => o.AgentsId, new { @class = "easyui-combobox", data_options = "required:false,prompt:'请输入',width:120,editable:true,mode:'remote',valueField:'AgentsId',textField:'AgentsId',loader:comboload" })</td>
                        <td class="name" style="width:18%;">商户号：</td>
                        <td class="input">@Html.TextBoxFor(o => o.CID, new { @class = "easyui-combobox", data_options = "required:false,prompt:'请输入',width:120,editable:true,mode:'remote',valueField:'CID',textField:'CID',loader:comboload" })</td>
 
                    </tr>

                    <tr>
                        <td class="name">结算银行机构：</td>
                        <td class="input">@Html.TextBoxFor(o => o.Agency, new { @class = "easyui-textbox", data_options = "novalidate:true,required:true,prompt:'限100个字符',validType: 'length[1,100]',width:160" })</td>
                        <td class="name" >结算账号类型：</td>
                        <td class="input">@Html.DropDownListFor(o => o.BillingType, new List<SelectListItem>() { new SelectListItem() { Text = "请选择", Value = "" }, new SelectListItem() { Text = "对公", Value = "1" }, new SelectListItem() { Text = "对私", Value = "2" } }, new { @class = "easyui-combobox datacontrol", data_options = "required:true,novalidate:true,validType:'requiredForCombo', editable: false,width:120" })</td>
                    </tr>

                    <tr>
                        <td class="name">结算卡号：</td>
                        <td class="input">@Html.TextBoxFor(o => o.CardNum, new { @class = "easyui-textbox", data_options = "novalidate:true,required:true,prompt:'限50个字符',validType: 'length[1,50]',width:160" })</td>
                        <td class="name" >账户名称：</td>
                        <td class="input">@Html.TextBoxFor(o => o.CardName, new { @class = "easyui-textbox", data_options = "novalidate:true,required:true,prompt:'限50个字符',validType: 'length[1,50]',width:120" })</td>
                    </tr>

                    <tr>
                        <td class="name">财务联系人：</td>
                        <td class="input">@Html.TextBoxFor(o => o.LinkMan, new { @class = "easyui-textbox", data_options = "novalidate:true,required:false,prompt:'限20个字符',validType: 'length[0,20]',width:120" })</td>
                        <td class="name">财务联系电话：</td>
                        <td class="input">@Html.TextBoxFor(o => o.Phone, new { @class = "easyui-textbox", data_options = "novalidate:true,required:false,prompt:'',validType: 'length[7,20]',width:120" })</td>
                    </tr>

                    <tr>
                        <td class="name">账户状态：</td>
                        <td class="input" colspan="3">
                            @Html.DropDownList("BillingType", new List<SelectListItem>() { new SelectListItem() { Text = "请选择", Value = "" }, new SelectListItem() { Text = "已启用", Value = "2" }, new SelectListItem() { Text = "未启用", Value = "1" }, new SelectListItem() { Text = "已停用", Value = "3" } }, new { @class = "easyui-combobox datacontrol", data_options = "required:true,novalidate:true,validType:'requiredForCombo', editable: false,width:120" })
                        </td>
                    </tr>

                </table>
            </div>

        </div>
    }
</div>

