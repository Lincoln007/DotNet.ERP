@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    ViewData.OpBtnInfo(new OpBtnInfo(addText: "申请支付许可", hideAdd: !CurrentUser.HasPermiss(111), hideEdit: !CurrentUser.HasPermiss(111), hideDel: true, searchHeight: 85));
}

<style type="text/css">
    .table-toolbar .s_tr td {
        padding-top: 9px;
    }
</style>

@section search{
    <table class="table-toolbar">
        <tr>

            <td class="label-toolbar">
                <label>指派人：</label>
            </td>
            <td class="input-toolbar">
                @Form.Combobox("AssignUid", ViewBag.user as List<SelectListItem>, dataOptions: "editable:false,panelMaxHeight:200")
            </td>
            <td class="label-toolbar">
                <label>申请日期：</label>
            </td>
            <td class="input-toolbar">
                <input name="CreateDT_begin" id="" class="Wdate datacontrol" style="width: 100px;" onclick="WdatePicker({ dateFmt: 'yyyy-MM-dd' })" />
            </td>
            <td class="label-toolbar">
                <label style="width:10px;margin-right:3px;position:relative;top:-4px;">-</label>
            </td>
            <td class="input-toolbar">
                <input name="CreateDT_end" id="" class="Wdate datacontrol" style="width: 100px;" onclick="WdatePicker({ dateFmt: 'yyyy-MM-dd' })" />
            </td>
            <td class="label-toolbar">
                <label>服务商号：</label>
            </td>
            <td class="input-toolbar">
                <input type="text" id="AgentsId" name="AgentsId" class="easyui-combobox" data-options="required:false,prompt:'请输入',width:120,editable:true,mode:'remote',valueField:'AgentsId',textField:'AgentsId',loader:comboload" />
            </td>


        </tr>

        <tr class="s_tr">

            <td class="label-toolbar">
                <label>状态：</label>
            </td>
            <td class="input-toolbar" style="padding-right:10px;">
                @Html.DropDownList("State", new List<SelectListItem>() { new SelectListItem() { Text = "全部", Value = "-1" }, new SelectListItem() { Text = "未审核", Value = "1" }, new SelectListItem() { Text = "被驳回", Value = "2" }, new SelectListItem() { Text = "已审核", Value = "3" }, new SelectListItem() { Text = "暂停", Value = "4" }, new SelectListItem() { Text = "注销", Value = "5" }, new SelectListItem() { Text = "无效", Value = "6" } }, new { @class = "easyui-combobox datacontrol", data_options = "novalidate:true, editable: false,width:120" })
            </td>

            <td class="label-toolbar">
                <label>关键字：</label>
            </td>
            <td class="input-toolbar" style="padding-right:10px;">
                @Html.DropDownList("keywordType", new List<SelectListItem>() { new SelectListItem() { Text = "按商户号", Value = "0" }, new SelectListItem() { Text = "按客户名称", Value = "1" } }, new { @class = "easyui-combobox datacontrol", data_options = "novalidate:true, editable: false,width:120" })
            </td>
            <td class="input-toolbar">
                <input name="keyword" class="datacontrol easyui-textbox font-12" placeholder="" data-options="prompt:'关键字',width:231" />
            </td>
        </tr>

    </table>
}
@section toolbar
{
    @if (CurrentUser.HasPermiss(112))
    {
        <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-stale'" onclick="upStatus(3)">将所选商户资料设为通过</a>
    }
    @if (CurrentUser.HasPermiss(112))
    {
        <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-stale'" onclick="Overrule()">驳回商户信息申请</a>
    }

    @if (CurrentUser.HasPermiss(113) || CurrentUser.HasPermiss(114) || CurrentUser.HasPermiss(115))
    {
        <a href="#" class="easyui-menubutton" data-options="menu:'#men',iconCls:'icon-edit'">设置所选商户支付状态</a>
        <div id="men" style="width:220px;">
            @if (CurrentUser.HasPermiss(113))
            {
                <div data-options="iconCls:'icon-order-yes'" onclick="upStatusSel(4)">设为暂停</div>
            }
            @if (CurrentUser.HasPermiss(114))
            {
                <div data-options="iconCls:'icon-order-yes'" onclick="upStatusSel(5)">设为注销</div>
            }
            @if (CurrentUser.HasPermiss(115))
            {
                <div data-options="iconCls:'icon-order-yes'" onclick="upStatusSel(6)">设为无效</div>
            }
        </div>
    }


    @if (CurrentUser.HasPermiss(116))
    {
        <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-stale'" onclick="del()">删除支付许可</a>
    }
    
}
<script type="text/javascript">

    var comboRows = [];
    var comboload = function (param, success, error) {
        //获取输入的值
        var q = param.q || "";
        //此处q的length代表输入多少个字符后开始查询
        if (q.length <= 0) return false;
        var $combo = $(this);

        $.ajax({
            url: "@Url.Action("GetAgentsIdWhere", "PayLicense")",
            type: "post",
            data: {
                //传值，还是JSON数据搜索
                keyword: q
            },
            dataType: "json",
            success: function (data) {
                comboRows = data.rows;
                //关键步骤，遍历一个MAP对象
                var items = $.map(data.rows, function (item) {
                    return { AgentsId: item.AgentsId, AgentsId: item.AgentsId };
                });
                //执行loader的success方法
                success(items);
            },    //异常处理
            error: function (xml, text, msg) {
                error.apply(this, arguments);
            }
        });
    }

    pharos.manager.$dg.datagrid({
        rowStyler: function (index, row) {
            if (row.State == 6 && row.BankState == 6 && row.PayState == 4) return 'background-color:#ede9e9;color:#9d9c9c';
        }
    })

    pharos.manager.frozenColumns = [[
        { field: 'Id', checkbox: true },
        { field: 'DesigneeFullName', title: '指派人', editor: { type: 'text', required: true }, width: 90 },
        {
            field: 'State', title: '商户信息状态', editor: { type: 'text', required: true }, width: 100, formatter: function (value, row, index) {
                if (value == "1") {
                    return "未审核";
                } else if (value == "2") {
                    return "被驳回";
                } else if (value == "3") {
                    return "已审核";
                } else if (value == "4") {
                    return "暂停";
                } else if (value == "5") {
                    return "注销";
                } else if (value == "6") {
                    return "无效";
                } 
            }
        },
        {
            field: 'BankState', title: '结算账户状态', editor: { type: 'text', required: true }, width: 100, formatter: function (value, row, index) {
                if (value == ""||value==null) {
                    return "";
                } else if (value == "1") {
                    return "未审核";
                } else if (value == "2") {
                    return "可用";
                } else if (value == "3") {
                    return "被驳回";
                } else if (value == "4") {
                    return "暂停";
                } else if (value == "5") {
                    return "注销";
                }else if (value == "6") {
                    return "无效";
                }
            }
        },
        {
            field: 'PayState', title: '支付通道状态', editor: { type: 'text', required: true }, width: 100, formatter: function (value, row, index) {
                if (value == "" || value == null) {
                    return "未开通";
                } else if (value == "0") {
                    return "未审核";
                } else if (value == "1") {
                    return "可用";
                } else if (value == "2") {
                    return "暂停";
                } else if (value == "3") {
                    return "注销";
                } else if (value == "4") {
                    return "无效";
                } 
            }
        },
        { field: 'CID', title: '商户号', editor: { type: 'text', required: true }, width: 100 }
    ]];

    pharos.manager.columns = [[
        { field: 'FullTitle', title: '商家公司名称', editor: { type: 'text', required: true }, width: 240 },
        { field: 'AgentsId', title: '上级服务商号', editor: { type: 'text', required: true }, width: 120 },
        { field: 'ContractNo', title: '合同号', editor: { type: 'text', required: true }, width: 120 },
        { field: 'city', title: '城市', editor: { type: 'text', required: true }, width: 120 },
        {
            field: 'SourceType', title: '所属体系', editor: { type: 'text', required: true }, width: 100, formatter: function (value, row, index) {
                if (value == "1") {
                    return "云平台";
                } else if (value == "2") {
                    return "外部系统";
                }
            }
        },
        { field: 'RegisterAddress', title: '注册地址', editor: { type: 'text', required: true }, width: 120 },
        { field: 'RegisterNumber', title: '营业执照注册号', editor: { type: 'text', required: true }, width: 120 },
        { field: 'BusinessScope', title: '经营范围', editor: { type: 'text', required: true }, width: 100 },
        { field: 'Linkman', title: '商家业务联系人', editor: { type: 'text', required: true }, width: 150 },
        { field: 'Phone', title: '商家业务联系人电话', editor: { type: 'text', required: true }, width: 150 },
        { field: 'Email', title: '商家业务联系人邮箱', editor: { type: 'text', required: true }, width: 150 },
        //{ field: 'Remark', title: '备注', editor: { type: 'text', required: true }, width: 250 },
        { field: 'CreateDT', title: '申请时间', editor: { type: 'text', required: true }, width: 150 },
        { field: 'CreateFullName', title: '申请人', editor: { type: 'text', required: true }, width: 100 }
    ]];

    pharos.manager.addItem = function () {
        this.Id = "";
        //openWin({ 'title': this.addText, 'width': 1000, 'height': 560, hideSave: false, 'url': this.editurlNocache() });
        openDialogNew(this.addText, this.editurlNocache(), 1000, 560, false, true);
    };

    pharos.manager.editItem = function (id, row) {
        this.Id = id;
        var isHide = false;
        var editText = this.editText;
        if (row.State >= 3 && (row.BankState == 2 || row.BankState == 4 || row.BankState == 5 || row.BankState == 6))
        {
            isHide = true;
            editText = "查看详情";
        }
        openDialogNew(editText, this.editurlNocache() + "&BankState=" + row.BankState, 1000, 560, isHide, true);
    }

    pharos.manager.viewInfo = function (Id, row) {
        this.Id = Id;
        //openDialog1000(this.viewText, this.viewurlNocache(), false, true);
        openDialogNew(this.viewText, this.viewurlNocache() + "&BankState=" + row.BankState, 1000, 560, true, true);
    }

    //设为通过
    function upStatus(s) {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("upStatus")", { ids: ids, state: s, t: Math.random() }, function (d) {
            if (d.successed) {
                $.messager.alert("提示", "设置成功！", "info");
                pharos.manager.gridReload();
            } else {
                $.messager.alert("提示", "设置失败," + d.message, "error");
            }
        }, "json");

    }

    //列入黑名单
    @*function blacklist(s) {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();

        $.messager.confirm('确认', '列入黑名单后，该服务商将停止所有业务操作，且1年内无法重新申请！', function (f) {
            if (f) {
                $.post("@Url.Action("upStatus")", { ids: ids, state: s, t: Math.random() }, function (d) {
                    if (d.successed) {
                        $.messager.alert("提示", " 列入黑名单成功！", "info");
                        pharos.manager.gridReload();
                    } else {
                        $.messager.alert("提示", "列入黑名单失败," + d.message, "error");
                    }
                }, "json");
            }
        });
    }*@

    //驳回商户信息申请
    function Overrule() {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("ExistOverrule")", { ids: ids, t: Math.random() }, function (d) {
            if (d.successed) {
                openWin({ 'title': '驳回商户信息申请', 'width': 640, 'height': 350, hideSave: false, 'url': '/PayLicense/Overrule?ids=' + ids });
            } else {
                $.messager.alert("提示", d.message, "error");
            }
        }, "json");
    }

    //设置所选商户支付状态
    @*function upStatusSel(record) {
        if (record.value == "" || record.value == null) {
            return;
        }
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("ExistStatusSel")", { ids: ids, state: record.value, t: Math.random() }, function (d) {
            if (d.successed) {
                openWin({ 'title': '设置商户支付状态', 'width': 640, 'height': 350, hideSave: false, 'url': '/PayLicense/SetStatus?ids=' + ids + '&state=' + record.value });
            } else {
                $.messager.alert("提示", d.message, "error");
            }
        }, "json");
    }*@

    //设置所选商户支付状态
    function upStatusSel(record) {
        if (record == "" || record == null) {
            return;
        }
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("ExistStatusSel")", { ids: ids, state: record, t: Math.random() }, function (d) {
            if (d.successed) {
                openWin({ 'title': '设置商户支付状态', 'width': 640, 'height': 350, hideSave: false, 'url': '/PayLicense/SetStatus?ids=' + ids + '&state=' + record });
            } else {
                $.messager.alert("提示", d.message, "error");
            }
        }, "json");
    }

    function removeBefore(row) {
        if (row.State > 1) {
            $.messager.alert("提示", "删除失败，只能删除许可状态为商户信息审核中");
            return false;
        }
        return true;
    }

    //删除
    function del() {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("Deletes")", { ids: ids, t: Math.random() }, function (d) {
            if (d.successed) {
                $.messager.alert("提示", " 删除成功！", "info");
                pharos.manager.gridReload();
            } else {
                $.messager.alert("提示", "删除失败," + d.message, "error");
            }
        }, "json");
    }

    $(function () {
        //服务商号
        $("#AgentsId").next().find(".combo-arrow").removeClass("combo-arrow");
    });
</script>


