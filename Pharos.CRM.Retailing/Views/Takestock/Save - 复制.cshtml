@model TreasuryLocks
@{
    ViewBag.Title = Pharos.Sys.SysConstPool.Page_Title;
    Layout = "~/Views/Shared/_FormLayout.cshtml";
    var users= ViewBag.users as List<SelectListItem>;
    
}
<div class="easyui-layout" data-options="fit:true,border:false">
    <div class="default-form" data-options="region:'north',border:false" style="height:40px;">
        <form id="frmsearch" action="@Url.Action("Save")" method="post">
            @Html.HiddenFor(o => o.Updated)
            <table class="table-toolbar">
                <tr>
                    <td class="name" style="padding-left:13px;">盘点门店：</td>
                    <td class="input">@Html.DropDownListFor(o => o.LockStoreID, ViewBag.shops as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "onSelect:storeSelect,validType:'requiredForCombo'" })</td>
                    <td class="name padding-left-10">盘点批次：</td>
                    <td class="input">@Html.DropDownListFor(o => o.CheckBatch, new List<SelectListItem>() { new SelectListItem() { Text = "请选择", Value = "" } }, new { @class = "easyui-combobox datacontrol", data_options = "validType:'requiredForCombo'" })</td>
                    <td><a href="#" style="margin-left:10px;" class="easyui-linkbutton cus4 linkbtn" data-options="iconCls:'icon-search'" onclick="gridReload()">查询</a></td>
                </tr>
            </table>
        </form>
    </div>
    <div data-options="region:'center',border:false">
        <table class="easyui-datagrid" id="grid"
               data-options="url:'@Url.Action("FindStockList")',checkOnSelect:false,singleSelect:true,border:true,rownumbers:true,fit:true,fitColumns:true,pagination:false,onClickCell:clickCell,onLoadError:loadError,onLoadSuccess:loadSuccess,idField:'Barcode'">
            <thead>
                <tr>
                    <th data-options="field:'Id',checkbox: true,hidden:true" width="50"></th>
                    <th data-options="field:'Barcode'" width="120">条形码</th>
                    <th data-options="field:'Title'" width="150">品名</th>
                    <th data-options="field:'SubUnit'" width="60">计量单位</th>
                    <th data-options="field:'LockNumber'" width="80">锁定库存量</th>
                    <th data-options="field:'ActualNumber',editor:{type:'numberbox',options:{required:true,min:0}}" width="60">实盘数量</th>
                    <th data-options="field:'CheckUID',editor:{type:'combobox',options:{data:pharos.dropdown['users'],valueField:'Value',textField:'Text'}},formatter:checkFormat" width="60">盘点员</th>
                </tr>
            </thead>
        </table>
        @Html.Hidden("isadd")
    </div>
    <div data-options="region:'south',border:false" style="height:40px;">
        <table class="table-toolbar">
            <tr>
                <td class="name">条形码：</td>
                <td class="input">@Html.DropDownList("Barcode", new List<SelectListItem>(), new { @class = "easyui-combobox", data_options = "onSelect:barcodeSelect,prompt:'请输入条码...',width:120,valueField:'Barcode',textField:'Barcode'" })</td>
                <td class="name">品 名：</td>
                <td class="input"><input type="text" class="easyui-textbox" id="Bartitle" data-options="width:130" readonly /></td>
                <td class="name padding-left-10">实盘数量：</td>
                <td class="input">@Html.TextBox("ActualNumber", "0", new { @class = "easyui-numberspinner", data_options = "min:0,width:80,precision:2" })</td>
                <td class="name">盘点员:</td>
                <td class="input">@Form.UserCombobox("CheckUID", CurrentUser.UID,items:users,dataOptions: "width:120,validType:'requiredForCombo'",async:false)</td>
                <td><a href="#" style="margin-left:10px;" class="easyui-linkbutton cus4 linkbtn" data-options="iconCls:'icon-ok'" onclick="updateGrid()">确定</a></td>
            </tr>
        </table>
    </div>
</div>
<script type="text/javascript">
    var $dg, first = true,gridRows=null;
    $(function () {
        $dg = $("#grid");
        $("#ActualNumber").next('span').find('input').keyup(function () {
            if (event.keyCode == 13)
                updateGrid();
        })
    })
    function storeSelect(record) {
        if (!record.value) {
            $("#CheckBatch").combobox("clear");
            return;
        }
        $("#CheckBatch").combobox("clear").combobox("reload", "@Url.Action("StoreSelect")?state=0&storeId=" + record.value);
    }
    function updateGrid() {
        var bar= $("#Barcode").combobox("getValue");
        var num = $("#ActualNumber").numberspinner("getValue");
        if (isNull(num)) {
            $.messager.alert("提示", "请输入实盘数量!", "info"); return;
        }
        $dg.datagrid("selectRecord", bar);
        var row = $dg.datagrid("getSelected");
        var idx = $dg.datagrid("getRowIndex", row);
        //$dg.datagrid("updateRow", {
        //    index: idx,
        //    row: { ActualNumber: num }
        //});
        clickCell(idx, "ActualNumber");
        $("#ActualNumber").numberspinner("setValue", 0);
        $("#Barcode").combobox('showPanel').next('span').find('input').focus();
        var ed = $dg.datagrid('getEditor', { index: idx, field: 'ActualNumber' });
        if (ed) {
            $(ed.target).numberbox('setValue', num);
            clickCell(idx, "CheckUID");
            ed = $dg.datagrid('getEditor', { index: idx, field: 'CheckUID' });
            if(ed)
                $(ed.target).textbox('setValue', $("#CheckUID").combobox("getValue"));
            endClickEditing();
        }
    }
    function barcodeSelect(record) {
        var obj = getRow(record.Barcode);
        if (!obj) return;
        $("#Bartitle").textbox("setValue", obj.Title);
        //$("#ActualNumber").next('span').find('input').focus().select();
    }
    function getRow(barcode) {
        var obj = null;
        $.each(gridRows, function (i, row) {
            if (row.Barcode == barcode) {
                obj = row; return;
            }
        });
        return obj;
    }
    function getUser(uid) {
        var obj = null;
        $.each(pharos.dropdown['users'], function (i, row) {
            if (row.Value == uid) {
                obj = row; return;
            }
        });
        return obj;
    }
    function checkFormat(value,row,index){
        var user=getUser(value);
        if(!user) return;
        return user.Text;
    }
    function loadSuccess(data) {
        gridRows = data.rows;
        $("#Barcode").combobox("clear").combobox("loadData", gridRows);
    }
    function gridReload() {
        if (!$("form").form('validate')) return;
        $dg.datagrid('options').url = "@Url.Action("FindStockList")?" + $('form').serialize();
        $dg.datagrid('reload');
    }
    function batchChange(newValue, oldValue) {
        if (!first) return;
        first = false;
        var storeId = $("#LockStoreID").combobox("getValue");
        storeSelect({ value: storeId, batch: newValue });
    }
    function Refresh() {
        var val = $('#isadd').val();
        if (!val) {
            pharos.easyui.dialog.topClose("formDiv");
            pharos.easyui.dialog.curJquery("formDiv")("#grid").datagrid("reload");
        }
    }
    function clickCell(index, field) {
        if (endClickEditing() && (field == "ActualNumber" || field=="CheckUID")) {
            $dg.datagrid('selectRow', index)
                    .datagrid('editCell', { index: index, field: field });
            clickIndex = index;
        }
    }
    var clickIndex = undefined;
    function endClickEditing() {
        if (clickIndex == undefined) { return true }
        if ($dg.datagrid('validateRow', clickIndex)) {
            $dg.datagrid('endEdit', clickIndex);
            clickIndex = undefined;
            return true;
        } else {
            return false;
        }
    }
    function changeValue() {
        var updated = $dg.datagrid('getChanges', "updated");
        $("#Updated").val(JSON.stringify(updated));
    }
    function SaveBefore() {
        endClickEditing();
        changeValue();
        return true;
    }
    pharos.dropdown['users'] =@Html.Raw(users.ToJson()) ;
</script>
