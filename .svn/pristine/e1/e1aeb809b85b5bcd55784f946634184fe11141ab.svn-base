// --------------------------------------------------
// Copyright (C) 2015 版权所有
// 创 建 人：蔡少发
// 创建时间：2016-03-05
// 描述信息：系统授权许可
// --------------------------------------------------

using System;
using System.IO;
using System.Web;
using System.Text;
using System.Collections.Generic;
using Newtonsoft.Json.Linq;
using Pharos.Utility;
using Pharos.Sys.Entity;
using Pharos.Utility.Caching;
using Pharos.Sys.BLL;
using AX.CSF.Encrypt;

namespace Pharos.Sys
{
    /// <summary>
    /// 系统授权许可
    /// </summary>
    public class SysAuthorize
    {
        /// <summary>
        /// 注册请求
        /// </summary>
        /// <param name="company">单位简称</param>
        /// <param name="fullCompany">单位全称</param>
        /// <returns>true:请求成功，false:请求失败</returns>
        public OpResult Register(OMS_CompanyAuthorize obj)
        {
            //todo:
            //1. 获取该服务器机器码
            obj.MachineSN = Machine.GetMAC;
            obj.Useable = "Y";
            obj.MachineSN = "";
            //2. 将机器码、单位名称 提交给OMS生成客户授权
            var op= OMSCompanyAuthrizeBLL.Save(obj);
            var config = new Pharos.Utility.Config();
            config.SetAppSettings("CompanyId", obj.Code.GetValueOrDefault().ToString());
            return op;
        }

        /// <summary>
        /// 生成序列号
        /// </summary>
        /// <param name="company">OMS_CompanyAuthorize 单位授权实体类</param>
        /// <returns></returns>
        public string GenerateSN(OMS_CompanyAuthorize company)
        {
            if (company.Code > 0)
            {
                JObject json = new JObject();
                json["Code"] = company.Code;
                json["Title"] = company.Title;
                json["FullTitle"] = company.FullTitle;
                json["State"] = company.State;
                json["Category"] = company.Category;

                json["UserNum"] = company.UserNum;
                json["StoreProper"] = company.StoreProper;
                json["AppProper"] = company.AppProper;
                json["PosMinorDisp"] = company.PosMinorDisp;

                json["SupplierProper"] = company.SupplierProper;
                json["WholesalerProper"] = company.WholesalerProper;
                json["EffectiveDT"] = company.EffectiveDT;
                json["ExpirationDT"] = company.ExpirationDT;
                json["ValidityYear"] = company.ValidityYear;

                json["Useable"] = company.Useable;
                json["MachineSN"] = company.MachineSN;
                json["State"] = company.State;

                return DES.Encrypt(json.ToString());
            }
            else
            {
                return DES.Encrypt("-1");
            }
        }

        /// <summary>
        /// 验证激活
        /// </summary>
        /// <param name="sn">序列号</param>
        /// <returns>true:成功，false:失败</returns>
        public OpResult VerifyActivate(string sn)
        {
            var op = new OpResult();
            OMS_CompanyAuthorize auth = this.AnalysisSN(sn);
            if (auth != null && auth.ExpirationDT != null && auth.ExpirationDT > DateTime.Now
                && auth.Useable.ToUpper() == "Y" && auth.State == 1)
            {
                var companyId = Pharos.Utility.Config.GetAppSettings("CompanyId");
                var source = OMSCompanyAuthrizeBLL.GetByCode(int.Parse(companyId));
                if(source==null)
                {
                    op.Message = "CompanyId配置不存在!";
                    return op;
                }
                if(!(auth.Category== source.Category && auth.Title==source.Title && auth.FullTitle==source.FullTitle && auth.MachineSN==source.MachineSN))
                {
                    op.Message = "注册信息不一致!";
                    return op;
                }
                source.SerialNo = sn;
                op= OMSCompanyAuthrizeBLL.Save(source);
                if (auth.Category == 2)
                {
                    Config config = new Config();
                    config.SetAppSettings(_SerialKey, sn);
                }
            }
            return op;
        }

        private string _SerialKey = "SerialNo";
        private OMS_CompanyAuthorize AnalysisSN(string sn)
        {
            if (!string.IsNullOrEmpty(sn))
            {
                var text = DES.Decrypt(sn);
                JObject json = JObject.Parse(text);
                OMS_CompanyAuthorize company = new OMS_CompanyAuthorize();

                company.Code = Convert.ToInt32(json["Code"]);
                company.Title = Convert.ToString(json["Title"]);
                company.FullTitle = Convert.ToString(json["FullTitle"]);
                company.State = Convert.ToInt16(json["State"]);
                company.Category = Convert.ToInt16(json["Category"]);

                company.UserNum = Convert.ToInt16(json["UserNum"]);
                company.StoreProper = Convert.ToString(json["StoreProper"]);
                company.AppProper = Convert.ToString(json["AppProper"]);
                company.PosMinorDisp = Convert.ToString(json["PosMinorDisp"]);

                company.SupplierProper = Convert.ToString(json["SupplierProper"]);
                company.WholesalerProper = Convert.ToString(json["WholesalerProper"]);
                company.EffectiveDT = Convert.ToDateTime(json["EffectiveDT"]);
                company.ValidityYear = Convert.ToInt16(json["ValidityYear"]);

                company.Useable = Convert.ToString(json["Useable"]);
                company.MachineSN = Convert.ToString(json["MachineSN"]);

                return company;
            }
            return null;
        }

        /// <summary>
        /// 解析序列号
        /// </summary>
        public OMS_CompanyAuthorize GetSerialNO
        {
            get
            {
                string key = Config.GetAppSettings(_SerialKey);
                OMS_CompanyAuthorize company = this.AnalysisSN(key);
                if (company.Category == 1)
                {
                    //todo: 在线模式，则 根据 company.Code 从OMS读取
                    
                }
                return company;
            }
        }
    }
}
