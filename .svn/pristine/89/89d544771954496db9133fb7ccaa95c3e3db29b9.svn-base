<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:control="clr-namespace:Pharos.Wpf.Controls;assembly=Pharos.Wpf" 
                    xmlns:local="clr-namespace:Pharos.POS.Retailing.ViewModels" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="{x:Type control:IconTextBox}" x:Key="BaseIconTextBoxStyle">
        <Setter Property="IconWidth" Value="20"></Setter>
        <Setter Property="IconHeight" Value="20"></Setter>
        <Setter Property="IconMargin" Value="2"></Setter>
        <Setter Property="Width" Value="200"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>
    <Style TargetType="{x:Type control:IconPasswordBox}" x:Key="BaseIconPasswordBoxStyle">
        <Setter Property="IconWidth" Value="20"></Setter>
        <Setter Property="IconMargin" Value="2"></Setter>
        <Setter Property="IconHeight" Value="20"></Setter>
        <Setter Property="Width" Value="200"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="FontSize" Value="18"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>
    <Style TargetType="{x:Type Button}" x:Key="WindowButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            Opacity="{TemplateBinding Opacity}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Opacity"  Value="0.9"></Setter>
        <Setter Property="FontFamily" Value="/Pharos.Wpf;component/Fonts/#FontAwesome"/>
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Margin" Value="5,8"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="#EEEE00"></Setter>
                <Setter Property="Opacity"  Value="1"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Margin" Value="10,0,10,10"></Setter>
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border x:Name="border" Background="{TemplateBinding Background}"  CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                  Storyboard.TargetProperty="(Panel.Background).
                        (SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0"
                                           Value="{DynamicResource ControlLightColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer x:Name="DG_ScrollViewer"
                          Focusable="false"
                          Background="Black">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="0" />
                                        </Grid.RowDefinitions>

                                        <Button Focusable="false"
                            Command="{x:Static DataGrid.SelectAllCommand}"
                            Style="{DynamicResource {ComponentResourceKey 
                        ResourceId=DataGridSelectAllButtonStyle, 
                        TypeInTargetAssembly={x:Type DataGrid}}}"
                            Visibility="{Binding HeadersVisibility, 
                        ConverterParameter={x:Static DataGridHeadersVisibility.All}, 
                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            Width="{Binding CellsPanelHorizontalOffset, 
                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                    Grid.Column="1" Grid.ColumnSpan="3"
                                                    Visibility="{Binding HeadersVisibility, 
                        ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                        Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Column="2"
                               Grid.Row="1"
                               Orientation="Vertical" Width="25"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                               Value="{Binding VerticalOffset, Mode=OneWay, 
                        RelativeSource={RelativeSource TemplatedParent}}">
                                            <ScrollBar.Template>
                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                    <Grid Width="25">
                                                        <Border Width="25" HorizontalAlignment="Center" CornerRadius="10" Background="#f6f6f6">
                                                        </Border>
                                                        <Track HorizontalAlignment="Center" Name="PART_Track" Width="{TemplateBinding Width}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}"
                                    Value="{TemplateBinding Value}"  IsDirectionReversed="true">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Command="ScrollBar.LineUpCommand">
                                                                    <RepeatButton.Template>
                                                                        <ControlTemplate TargetType="RepeatButton">
                                                                            <Border Background="Transparent">
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </RepeatButton.Template>
                                                                </RepeatButton>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton  Command="ScrollBar.LineDownCommand">
                                                                    <RepeatButton.Template>
                                                                        <ControlTemplate TargetType="RepeatButton">
                                                                            <Border Background="Transparent">
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </RepeatButton.Template>
                                                                </RepeatButton>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb>

                                                                </Thumb>
                                                            </Track.Thumb>
                                                        </Track>

                                                    </Grid>
                                                </ControlTemplate>
                                            </ScrollBar.Template>
                                        </ScrollBar>

                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                            RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                 Grid.Column="1"
                                 Orientation="Horizontal"
                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                 Maximum="{TemplateBinding ScrollableWidth}"
                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                 Value="{Binding HorizontalOffset, Mode=OneWay, 
                          RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Grid>
                                    </Grid>

                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping"
               Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>




    <Style TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle Width="16" Fill="#d0d0d0" RadiusX="5" RadiusY="5">
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style  TargetType="DataGridColumnHeader">
        <!--<Setter Property="VerticalContentAlignment" Value="Center" />-->
        <!--<Setter Property="SeparatorBrush" Value="DarkRed" />-->
        <Setter Property="Background" Value="#5C5753"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="FontSize" Value="12"></Setter>
        <!--<Setter Property="Margin" Value="0"></Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Background="Transparent">
                        <Border x:Name="columnHeaderBorder" Background="{TemplateBinding Background}" CornerRadius="5,10,0,0">
                            <StackPanel VerticalAlignment="Center">
                                <TextBlock TextAlignment="Center" Text="{TemplateBinding Content}"></TextBlock>
                            </StackPanel>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="DataGridRow">
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="Foreground" Value="#2E2F31" />
        <Setter Property="MinHeight" Value="60"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFFDEE"/>
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FFF29D"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--Style and template for the DataGridCell.-->
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="0,0,1,0"></Setter>
        <Setter Property="BorderBrush" Value="#5C5753"></Setter>
        <Setter Property="TextBlock.TextAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="border"
                  BorderBrush="Transparent"
                  BorderThickness="1"
                  Background="Transparent"
                  SnapsToDevicePixels="True">
                        <Grid VerticalAlignment="Center">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CurrentStates">
                                    <VisualState x:Name="Regular" />
                                    <VisualState x:Name="Current">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                  Storyboard.TargetProperty="(Border.BorderBrush).
                        (SolidColorBrush.Color)">
                                            </ColorAnimationUsingKeyFrames
                                                  >
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <HierarchicalDataTemplate x:Key="TreeItemTemplate" DataType="{x:Type local:TreeModel}" ItemsSource="{Binding Path=Children,Mode=OneWay}">
        <Grid Height="32">
            <TextBlock Text="{Binding Path=Name}" VerticalAlignment="Center" FontSize="13">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding HasChild}" Value="true">
                                <Setter Property="FontWeight" Value="Bold"></Setter>
                            </DataTrigger>
                            <!--<DataTrigger Binding="{Binding IsSelected}" Value="true">

                            </DataTrigger>-->

                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>
    </HierarchicalDataTemplate>

    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">

        <Setter Property="IsSelected" Value="{Binding Path=IsSelected,Mode=TwoWay}"></Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="#E0E0E0" Background="White" x:Name="Bd"  Grid.Column="0"  SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="1" x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                        <Border BorderThickness="0,1,0,0" BorderBrush="#E0E0E0"  Background="White" Grid.Column="0" Grid.Row="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <ItemsPresenter Grid.Column="1" x:Name="ItemsHost"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="IsExpanded" Value="True"></Setter>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter Property="IsExpanded" Value="False"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>