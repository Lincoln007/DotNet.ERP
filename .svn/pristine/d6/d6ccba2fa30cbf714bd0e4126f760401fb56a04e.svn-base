@{
    ViewBag.Title = Pharos.Sys.SysConstPool.Page_Title;
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    ViewData.OpBtnInfo(new OpBtnInfo(hideAdd: true, hideEdit: true, hideDel: true, firstLoadData: false));
}
@section search{
<tr>
    <td class="label-toolbar">&nbsp;</td>
    <td class="label-toolbar">
        <label>关键字：</label>
    </td>
    <td class="input-toolbar">
        <select id="searchField" name="searchField" class="easyui-combobox" data-options="editable:false">
            <option value="barcode">条码</option>
            <option value="Title">品名</option>
            <option value="Title">流水号</option>
        </select>
    </td>
    <td class="input-toolbar">
        &nbsp;<select name="searchText" class="easyui-combobox" data-options="prompt:'请输入查询条件...',width:150,mode:'remote',valueField:'value',textField:'text',loader:comboload"></select>
    </td>
</tr>
}
@section toolbar
{
    <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-import'" onclick="openDialog800('Excel文件导入','@Url.Action("Import")');window.top.$('#lbsave .l-btn-text').width(100).html('导入预览');">导入</a>
    <a href="#" id="btnExcel" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-export'" onclick="Export()">确定导入</a>
}
<script type="text/javascript">
    var comboload=function (param, success, error) {
        //获取输入的值
        var q = param.q || "";
        //此处q的length代表输入多少个字符后开始查询
        if (q.length <= 1) return false;
        $.ajax({
            url:"@Url.Action("GetDataForSearch")",
            type:"post",
            data:{
                //传值，还是JSON数据搜索
                searchText: q,
                searchField:$("#searchField").combobox("getValue")
            },
            //重要，如果写jsonp会报转换错误，此处不写都可以
            dataType:"json",
            success: function (data) {
                var items = $.map(data, function(item){
                    return { value: item.value, text: item.text };
                });
                //执行loader的success方法
                success(items);
            },    //异常处理
            error: function (xml, text, msg) {
                error.apply(this, arguments);
            }
        });
    }
    pharos.manager.geturl = '@Url.Action("SaleDataMoveList")';
    pharos.manager.columns = [[
        { field: 'Type', title: '订单类型', width: 100 },
        { field: 'PaySN', title: '流水号', width: 120 },
        { field: 'Barcode', title: '条码', width: 150 },
        { field: 'Title', title: '品名', width: 150 },
        { field: 'SalesClassifyId', title: '销售方式', width: 60 },
        { field: 'PurchaseNumber', title: '销售数量', width: 80 },
        { field: 'SysPrice', title: '系统售价', width: 80 },
        { field: 'ActualPrice', title: '实际售价', width: 80 },
        { field: 'Total', title: '小计金额', width: 80, formatter: numberToFixed },
        { field: 'Receive', title: '实际消费', width: 80, formatter: numberToFixed },
        { field: 'PreferentialPrice', title: '优惠', width: 80, formatter: numberToFixed },
        { field: 'ApiTitle', title: '结算方式', width: 100 },
        { field: 'Cashier', title: '收银员', width: 80 },
        { field: 'Saler', title: '导购员', width: 80 }
    ]];
</script>