using Pharos.Wpf.HotKeyHelper;
using System;
using System.Threading;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Input;

namespace Pharos.POS.Retailing.Extensions
{
    public static class WindowExtensions
    {
        public static void InitDefualtSettings(this Window _this)
        {
            _this.PreviewKeyDown += _this_PreviewKeyDown;
            _this.Loaded += _this_Loaded;
            _this.ApplyHotKeyBindings();
        }

        static void _this_Loaded(object sender, RoutedEventArgs e)
        {
            Task.Factory.StartNew(() =>
            {
                Thread.Sleep(300);
                Application.Current.Dispatcher.Invoke(new Action(() =>
                {
                    (sender as Window).MoveFocus(new TraversalRequest(FocusNavigationDirection.Next));
                }));
            });
        }

        static void _this_PreviewKeyDown(object sender, System.Windows.Input.KeyEventArgs e)
        {
            var win = sender as Window;
            switch (e.Key)
            {
                case Key.Escape:
                    win.Close();
                    break;
            }
        }


    }
}
