using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using Pharos.Utility.Helpers;
namespace Pharos.Logic.DAL
{
    public class CommonDAL:BaseDAL
    {
        public string StockLockValidMsg(string storeId)
        {
            if (!string.IsNullOrWhiteSpace(storeId))
            {
                using (EFDbContext db = new EFDbContext())
                {
                    var sql = string.Format("SELECT dbo.F_StockLockValidMsg('{0}')", storeId);
                    return db.Database.SqlQuery<string>(sql).FirstOrDefault();
                }
            }
            return "";
        }
        public DataTable FindTakeStockPages(System.Collections.Specialized.NameValueCollection nvl, out int recordCount,bool ispage=true)
        {
            var storeId = nvl["storeId"];
            var userId = nvl["userId"];
            var date1 = nvl["date1"];
            var date2 = nvl["date2"];
            var checkBatch = nvl["checkBatch"];
            var state = nvl["state"];
            var id = nvl["id"];
            if (!date2.IsNullOrEmpty()) date2 = DateTime.Parse(date2).AddDays(1).ToString("yyyy-MM-dd");
            string sql = @"select * from Vw_StockTaking where 1=1 ";
            if (!storeId.IsNullOrEmpty())
                sql += " and LockStoreID='"+storeId+"'";
            if (!userId.IsNullOrEmpty())
                sql += " and CheckUID='" + userId + "'";
            if (!checkBatch.IsNullOrEmpty())
                sql += " and (CheckBatch like '%" + checkBatch + "%' or Barcode like '%" + checkBatch + "%' or Title like '%"+checkBatch+"%')";
            if (!date1.IsNullOrEmpty() && !date2.IsNullOrEmpty())
                sql += " and LockDate between '" + date1 + "' and '" + date2 + "'";
            else if (!date1.IsNullOrEmpty())
                sql += " and LockDate>='" + date1 + "'";
            else if (!date2.IsNullOrEmpty())
                sql += " and LockDate<'" + date2 + "'";
            if (!id.IsNullOrEmpty())
                sql += " and id='"+id+"'";
            if(!state.IsNullOrEmpty())
                sql += " and state=" + state + "";
            recordCount = 0;
            return ispage ? base.ExceuteSqlForPage(sql, out recordCount, nvl) : _db.DataTableText(sql, null);
        }
    }
}
