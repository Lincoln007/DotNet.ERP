using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Pharos.Logic.OMS.BLL
{
    /// <summary>
    /// 订单助手
    /// </summary>
    public class OrderHelper
    {
        /// <summary>
        /// 防止创建类的实例
        /// </summary>
        private OrderHelper() { }

        private static readonly object Locker = new object();
        private static int _sn = -1;
        private static int _ordersn = -1;

        /// <summary>
        /// 生成支付订单流水号
        /// </summary>
        /// <returns></returns>
        public static string GetMaxTradeNo()
        {
            lock (Locker)  //lock 关键字可确保当一个线程位于代码的临界区时，另一个线程不会进入该临界区。
            {
                if (_sn == -1)
                {
                    var svc = new TradeOrderService();
                    var maxNo = svc.GetMaxTradeNo();
                    _sn = maxNo;
                }
                if (_sn == int.MaxValue)
                    _sn = 0;
                else
                    _sn++;
                //Thread.Sleep(100);

                return DateTime.Now.ToString("yyyyMMdd") + _sn.ToString().PadLeft(10, '0');
            }
        }
        /// <summary>
        /// 生成商户订单号 fishtodo:把订单号修改为短一点，启动时先去数据库里取最大值
        /// </summary>
        /// <returns></returns>
        public static string GetMaxOutOrderNo()
        {
            lock (Locker)  //lock 关键字可确保当一个线程位于代码的临界区时，另一个线程不会进入该临界区。
            {
                if (_ordersn == -1)
                {
                    var svc = new TradeOrderService();
                    var maxNo = svc.GetMaxOutOrderNo();
                    _ordersn = maxNo;
                }
                if (_ordersn == int.MaxValue)
                    _ordersn = 0;
                else
                    _ordersn++;
                //Thread.Sleep(100);

                return DateTime.Now.ToString("yyyyMMdd") + _ordersn.ToString().PadLeft(10, '0');
            }
        }
    }
}
