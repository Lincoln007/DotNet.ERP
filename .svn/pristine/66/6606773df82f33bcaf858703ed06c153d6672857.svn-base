using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Pharos.Logic.OMS.Entity;
using Pharos.Logic.OMS.EntityExtend;

namespace Pharos.Logic.OMS.DAL
{
    internal class TradersDAL : BaseSysEntityDAL<Traders>
    {
        public TradersDAL() : base("Traders") { }

        /// <summary>
        /// 获取客户汇总
        /// </summary>
        /// <param name="Where">where条件,不需要加where</param>
        /// <param name="CurrentPage">当前页,从1开始,不是0</param>
        /// <param name="PageSize">每页显示多少条数据</param>
        /// <param name="Count">总数</param>
        /// <returns></returns>
        //internal DataSet GetList(string Where, int CurrentPage, int PageSize,  out int Count)
        //{
        //    //SqlParameter[] parms = {
        //    //        new SqlParameter("@id", id)
        //    //    };

        //    //string sql = "select Id,MenuId,PMenuId,SortOrder,Title,URL,Status from SysMenus order by SortOrder";

        //    //var result = DbHelper.DataTableText<SysMenusExt>(sql, parms);
        //    //return result;

        //    Count = 0;
        //    SqlParameter[] parameters = { 
        //                            new SqlParameter("@Table",SqlDbType.NVarChar,1000),
        //                            new SqlParameter("@Fields",SqlDbType.VarChar,2000),
        //                            new SqlParameter("@Where",SqlDbType.NVarChar,4000),
        //                            new SqlParameter("@OrderBy",SqlDbType.VarChar,1000),
        //                            new SqlParameter("@CurrentPage",SqlDbType.Int,4),
        //                            new SqlParameter("@PageSize",SqlDbType.Int,4),
        //                            new SqlParameter("@GetCount",SqlDbType.Int,4),
        //                            new SqlParameter("@Count",SqlDbType.Int,4)
        //                            };
        //    parameters[0].Value = Table;
        //    parameters[1].Value = Fields;
        //    parameters[2].Value = Where;
        //    parameters[3].Value = OrderBy;
        //    parameters[4].Value = CurrentPage;
        //    parameters[5].Value = PageSize;
        //    parameters[6].Value = GetCount;
        //    parameters[7].Direction = ParameterDirection.Output;
        //    DataSet ds = SqlHelper.ExecuteSet(SqlHelper.ConnectionStringLocalTransaction, CommandType.StoredProcedure, "Pagination", parameters);
        //    DataTable dt = ds.Tables[0];
        //    Count = Convert.ToInt32(parameters[7].Value);//输出
        //    return dt;
        //}
    }
}
