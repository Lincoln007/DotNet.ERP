<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link href="css/component.css" rel="stylesheet" />
    <link href="css/global.css" rel="stylesheet" />
    <link href="css/switchery.css" rel="stylesheet" />
    <script src="javascript/echarts.min.js"></script>
    <script src="javascript/switchery.js"></script>
    <script src="javascript/jquery-3.1.0.min.js"></script>
    <script src="javascript/app.js"></script>
    <script src="javascript/modernizr.custom.js"></script>
    <title></title>
    <style>
        .actions {
            margin: auto;
            margin-top: 45px;
            width: 325px;
        }

            .actions a {
                width: 150px;
                height: 46px;
                background-repeat: no-repeat;
                background-size: 150px 46px;
                display: block;
                text-indent: -9999px;
                float: left;
            }

        a.download {
            background-image: url(site-assets/images/download-btn.png);
        }

        a.tweet {
            background-image: url(site-assets/images/tweet-btn.png);
            margin-left: 25px;
        }

        .attr {
            color: #fff;
            text-align: center;
            font-size: 0.875rem;
            margin-top: 20px;
        }
    </style>

</head>
<body>

    <div class="menu">
        <div>分店POS控制台</div>
        <ul>
            <li class="active"><a href="index.html">运行状况</a></li>
            <li><a href="reg1.html">服务注册</a></li>
            <li><a href="pos.html">POS配置</a></li>
            <li>快捷按键</li>
            <li>系统日志</li>
            <li>软件更新</li>
        </ul>
    </div>
    <div>
        <header>
            <a>退出登录</a>
            <div id="heheda" class="morph-button morph-button-modal morph-button-modal-3 morph-button-fixed " style="color:#515151;float:right;line-height:50px;">
                <button type="button" class="text-button">重启服务</button>
                <div class="morph-content" style="width: 200px; height: 300px; background: none; margin: auto; text-align: center; clear: both;">
                    <img src="svg-loaders/puff.svg" width="50" alt="">
                    <p style="color:#fff;margin:auto;z-index:999999;position:relative;opacity:0.7;">服务启动中…</p>
                </div>
            </div>
        </header>
        <div class="container">
            <h4>资源占比</h4>
            <div class="item">
                <div id="main1" style="width:30%;height:350px;float:left;padding-bottom:35px;"></div>
                <div id="main2" style="width: 30%; height: 350px; float: left;"></div>
                <div id="main3" style="width: 30%; height: 350px; float: left;"></div>
            </div>
            <h4>服务状态</h4>
            <div class="item">
                <ul class="status">
                    <li>
                        <span class="status01"></span>
                        <p>同步服务<span class="SyncServiceClient status-green"></span></p>
                    </li>
                    <li>
                        <span class="status01 status02"></span>
                        <p>API服务<span class="WebServer status-green"></span></p>
                    </li>
                    <li>
                        <span class="status01 status03"></span>
                        <p>促销服务<span class="MarketingManager status-green"></span></p>
                    </li>
                    <li>
                        <span class="status01 status04"></span>
                        <p>Socket通信<span class="SocketClient status-green"></span></p>
                    </li>
                </ul>
            </div>
            <h4>数据交互</h4>
            <div class="item">
                <table class="data SyncLog">
                    <tr>
                        <td>正在请求数据！</td>
                    </tr>
                    <tr>
                        <td>产品档案数据包 已完成<span>1600/4395</span></td>
                    </tr>
                    <tr>
                        <td>买赠促销数据包 同步<span class="finish">已完成</span>，本次同步时间05日 13:39:39，正在等待下次同步通知！</td>
                    </tr>
                    <tr>
                        <td>出入款数据包 <span class="wrong">数据异常！</span></td>
                    </tr>
                    <tr>
                        <td>接口数据包 同步已完成，本次同步时间05日 13:39:35，正在等待下次同步通知！</td>
                    </tr>
                    <tr>
                        <td>公告数据包 同步已完成，本次同步时间05日 13:39:35，正在等待下次同步通知！</td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
    <script src="javascript/classie.js"></script>
    <script src="javascript/uimorphingbutton_fixed.js"></script>
    <script type="text/javascript">
        jQuery(document).ready(function () {
            startRequest();
            setInterval("startRequest()", 5000);
        });
        function startRequest() {
            jQuery.ajax({
                type: 'GET',
                url: 'api/StoreManager/GetServerStates',
                dataType: 'json',
                cache: false,
                success: function (datas) {
                    for (var item in datas.Result) {
                        switch (datas.Result[item].Project) {
                            case "CPU":
                                // 基于准备好的dom，初始化echarts实例
                                var myChart = echarts.init(document.getElementById('main1'));

                                // 指定图表的配置项和数据
                                var option = {
                                    title: {
                                        text: datas.Result[item].Project,
                                        y: 'bottom',
                                        x: 'center',
                                        textStyle: {
                                            fontSize: '16',
                                            color: '#515151',
                                            fontWeight: '400'
                                        }
                                    },
                                    tooltip: {
                                        trigger: 'item',
                                        formatter: "{a} <br/>{b}: {c} ({d}%)",
                                        showContent: false,
                                    },
                                    animation: false,
                                    series: [
                                        {
                                            name: datas.Result[item].Project,
                                            type: 'pie',
                                            radius: ['50%', '70%'],
                                            avoidLabelOverlap: false,
                                            label: {
                                                normal: {
                                                    show: false,
                                                    position: 'center'
                                                },
                                                emphasis: {
                                                    show: true,
                                                    textStyle: {
                                                        fontSize: '56',
                                                    },
                                                    formatter: "{d}%",
                                                }
                                            },
                                            labelLine: {
                                                normal: {
                                                    show: false
                                                }
                                            },
                                            data: [
                                                { value: datas.Result[item].InUse, name: 'CPU使用率', itemStyle: { normal: { color: '#2196f3' } } },
                                                { value: 100 - datas.Result[item].InUse, name: 'CPU未使用率', itemStyle: { normal: { color: '#d5d5d5' } } }
                                            ]
                                        }
                                    ]
                                };

                                // 使用刚指定的配置项和数据显示图表。
                                myChart.setOption(option);
                                break;
                            case "内存":
                                // 基于准备好的dom，初始化echarts实例
                                var myChart = echarts.init(document.getElementById('main2'));

                                // 指定图表的配置项和数据
                                var option = {
                                    title: {
                                        text: datas.Result[item].Project,
                                        y: 'bottom',
                                        x: 'center',
                                        textStyle: {
                                            fontSize: '16',
                                            color: '#515151',
                                            fontWeight: '400'
                                        }
                                    },
                                    tooltip: {
                                        trigger: 'item',
                                        formatter: "{a} <br/>{b}: {c} ({d}%)",
                                        showContent: false,
                                    },
                                    animation: false,
                                    series: [
                                        {
                                            name: datas.Result[item].Project,
                                            type: 'pie',
                                            radius: ['50%', '70%'],
                                            avoidLabelOverlap: false,
                                            label: {
                                                normal: {
                                                    show: false,
                                                    position: 'center'
                                                },
                                                emphasis: {
                                                    show: true,
                                                    textStyle: {
                                                        fontSize: '56',
                                                    },
                                                    formatter: "{d}%",
                                                }
                                            },
                                            labelLine: {
                                                normal: {
                                                    show: false
                                                }
                                            },
                                            data: [
                                                { value: datas.Result[item].InUse, name: '内存使用率', itemStyle: { normal: { color: '#aa55bb' } } },
                                                { value: 100 - datas.Result[item].InUse, name: '内存未使用率', itemStyle: { normal: { color: '#d5d5d5' } } }
                                            ]
                                        }
                                    ]
                                };

                                // 使用刚指定的配置项和数据显示图表。
                                myChart.setOption(option);
                                break;
                            case "硬盘":

                                // 基于准备好的dom，初始化echarts实例
                                var myChart = echarts.init(document.getElementById('main3'));

                                // 指定图表的配置项和数据
                                var option = {
                                    title: {
                                        text: datas.Result[item].Project,
                                        y: 'bottom',
                                        x: 'center',
                                        textStyle: {
                                            fontSize: '16',
                                            color: '#515151',
                                            fontWeight: '400'
                                        }
                                    },
                                    tooltip: {
                                        trigger: 'item',
                                        formatter: "{a} <br/>{b}: {c} ({d}%)",
                                        showContent: false,
                                    },
                                    animation: false,
                                    series: [
                                        {
                                            name: datas.Result[item].Project,
                                            type: 'pie',
                                            radius: ['50%', '70%'],
                                            avoidLabelOverlap: false,
                                            label: {
                                                normal: {
                                                    show: false,
                                                    position: 'center'
                                                },
                                                emphasis: {
                                                    show: true,
                                                    textStyle: {
                                                        fontSize: '56',
                                                    },
                                                    formatter: "{d}%",
                                                }
                                            },
                                            labelLine: {
                                                normal: {
                                                    show: false
                                                }
                                            },
                                            data: [
                                                { value: datas.Result[item].InUse, name: '磁盘使用率', itemStyle: { normal: { color: '#ee3377' } } },
                                                { value: 100 - datas.Result[item].InUse, name: '磁盘未使用率', itemStyle: { normal: { color: '#d5d5d5' } } }
                                            ]
                                        }
                                    ]
                                };

                                // 使用刚指定的配置项和数据显示图表。
                                myChart.setOption(option);
                                break;
                        }
                    }
                }

            })
            jQuery.ajax({
                type: 'GET',
                url: 'api/StoreManager/GetSyncLog',
                dataType: 'json',
                cache: false,
                success: function (datas) {
                    var html = "";
                    for (var item in datas.Result) {
                        html += datas.Result[item];
                    }
                    $(".SyncLog tr").remove();
                    $(".SyncLog").append(html);
                }
            });

            jQuery.ajax({
                type: 'GET',
                url: 'api/StoreManager/GetServicesState',
                dataType: 'json',
                cache: false,
                success: function (datas) {
                    for (var item in datas.Result) {
                        if (datas.Result[item].IsRunning) {
                            $("." + datas.Result[item].ServiceId).removeClass("status-gray");

                            // $("." + datas.Result[item].ServiceId).addClass("status-green");
                        } else {
                            //   $("." + datas.Result[item].ServiceId).removeClass("status-green");

                            $("." + datas.Result[item].ServiceId).addClass("status-gray");
                        }
                    }
                }
            });

        }


        (function () {


            var docElem = window.document.documentElement, didScroll, scrollPosition;

            // trick to prevent scrolling when opening/closing button
            function noScrollFn() {
                window.scrollTo(scrollPosition ? scrollPosition.x : 0, scrollPosition ? scrollPosition.y : 0);
            }

            function noScroll() {
                window.removeEventListener('scroll', scrollHandler);
                window.addEventListener('scroll', noScrollFn);
            }

            function scrollFn() {
                window.addEventListener('scroll', scrollHandler);
            }

            function canScroll() {
                window.removeEventListener('scroll', noScrollFn);
                scrollFn();
            }

            function scrollHandler() {
                if (!didScroll) {
                    didScroll = true;
                    setTimeout(function () { scrollPage(); }, 60);
                }
            };

            function scrollPage() {
                scrollPosition = { x: window.pageXOffset || docElem.scrollLeft, y: window.pageYOffset || docElem.scrollTop };
                didScroll = false;
            };

            scrollFn();

            [].slice.call(document.querySelectorAll('.morph-button')).forEach(function (bttn) {
                new UIMorphingButton(bttn, {
                    closeEl: '.icon-close',
                    onBeforeOpen: function () {
                        // don't allow to scroll
                        noScroll();
                    },
                    onAfterOpen: function () {
                        ReStart();
                        setTimeout(function () {
                            $("#heheda").removeClass("open");
                        }, 20000);
                        // can scroll again
                        canScroll();
                    },
                    onBeforeClose: function () {
                        // don't allow to scroll

                        $("#heheda").addClass("open");
                        noScroll();
                    },
                    onAfterClose: function () {
                        // can scroll again

                        $("#heheda").addClass("open");
                        canScroll();
                    }
                });
            });

            // for demo purposes only
            [].slice.call(document.querySelectorAll('form button')).forEach(function (bttn) {
                bttn.addEventListener('click', function (ev) { ev.preventDefault(); });
            });


           



        })();


        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-56980351-1', 'auto');
        ga('send', 'pageview');
    </script>

</body>
</html>

