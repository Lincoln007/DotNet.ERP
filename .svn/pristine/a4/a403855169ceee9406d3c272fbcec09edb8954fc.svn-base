using Newtonsoft.Json.Linq;
using Pharos.Logic.OMS.Models;
using QCT.Pay.Common.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

namespace QCT.Api.Pay.Utils
{
    public class OrderQuery
    {
        //public QctPayReturn RerurnPayQuery(JObject reqParams)
        //{
        //    try
        //    {
        //        var reqObj = reqParams.ToObject<PayQueryRequest>();
        //        var checkObj = CheckAccessAndValidate<PayQueryRequest>(reqObj, -1);
        //        if (checkObj.Successed == false)
        //            return checkObj;
        //        else
        //        {
        //            var merchObj = (TradersChannelModel)checkObj.Data;
        //            var merchStore = PayTradeSvc.GetMerchStoreByStoreId(merchObj, reqObj.SID);
        //            if (merchStore == null)
        //            {
        //                return Json(QctPayReturn.Fail(msg: "未找到所查找的商户门店"));
        //            }
        //            var sxfReq = new SxfPayQueryRequest(reqObj, merchStore);
        //            //sxf签名并请求
        //            var sxfResult = SendPost(PayConfig.SxfPayUrl, ToDicAndSign(sxfReq, merchObj.SecretKey3, "signature"));
        //            //处理返回结果
        //            var sxfResultObj = JsonConvert.DeserializeObject<SxfPayQueryResponse>(sxfResult);
        //            var result = sxfResultObj.ToPayQueryResponse(merchStore);
        //            //Qct签名
        //            var rstRsp = ToDicAndSign(result, merchObj.SecretKey, "sign");
        //            return Json(rstRsp);
        //        }
        //    }
        //    catch (Exception ex)
        //    {
        //        LogEngine.WriteError(string.Format("[PayQuery支付订单查询请求错误,错误信息：{0}，请求参数：{1}]", ex.Message, reqParams.ToString()), null, LogModule.支付交易);
        //        return Json(QctPayReturn.Fail());
        //    }
        //}
    }
}