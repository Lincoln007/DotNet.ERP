@{
    ViewBag.Title = "ShippingCardIndex";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    ViewData.OpBtnInfo(new OpBtnInfo(addText: "发卡", delText: "移除", hideDel: true, hideEdit: true, hideAdd: true));
}

@section search{
    <table class="table-toolbar">
        <tr>
            <td class="label-toolbar">
                <label>使用到期：</label>
            </td>
            <td class="input-toolbar">
                <select name="beOverdue" class="easyui-combobox" data-options="editable:false">
                    <option value="0">全部</option>
                    <option value="1">1个月</option>
                    <option value="2">2个月</option>
                    <option value="3">3个月</option>
                    <option value="4">4个月</option>
                    <option value="5">5个月</option>
                    <option value="6">6个月</option>
                </select>
            </td>
            <td class="label-toolbar">
                <label>领用日期:</label>
            </td>
            <td class="input-toolbar">
                <input name="dueTimeStart" class="datacontrol Wdate" style="width:100px" />
            </td>
            <td style="float:left;margin-left:7px;margin-right:7px;line-height:28px;">-</td>
            <td class="input-toolbar">
                <input name="dueTimeEnd" class="datacontrol Wdate" style="width:100px" />
            </td>
        </tr>
    </table>
}
@section toolbar
{
    <a class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-usable'" onclick="SetCardState(1)">激活</a>
    <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-import'" onclick="openDialog800('Excel文件导入','@Url.Action("Import")');window.top.$('#lbsave .l-btn-text').width(100).html('开始导入');">导入</a>

}
<script type="text/javascript">
    var cardTypes = undefined;
    $(function () {
        cardTypes = eval(@Html.Raw(Json.Encode(ViewBag.cardTypeToDropDown)));
        if (cardTypes != undefined) {
            var htmlStr = "<div class=\"menu-line\" style=\"height: 92px;\"></div>";
            for (var i = 0; i < cardTypes.length; i++) {
                htmlStr += "<div data-options=\"iconCls:''\" onclick=\"SetCardType(" + cardTypes[i].Value + ")\" class=\"menu-item\"><div class=\"menu-text\">" + cardTypes[i].Text + "</div></div>";
            }
            $("#mm2").html(htmlStr);
            $("#mm2 .menu-item").mouseover(function () {
                $(this).addClass("menu-active").siblings().removeClass("menu-active");
            })
        }


    });


    pharos.manager.geturl = "@Url.Action("FindShippingCardPageList")";
    //pharos.manager.editurl = "@Url.Action("DispatchMemberCard")";
    pharos.manager.columns = [[
        { field: 'MemberId', title: '持卡人', hidden: true },
        { field: 'Deposit', title: '押金', width: 50 },
        { field: 'Balance', title: '可用金额', width: 60 },
        {
            field: 'State', title: '状态', width: 60, formatter: function (value, row, index) {
                switch (value) {
                    case 0:
                        return "未激活";
                    case 1:
                        return "正常";
                    case 2:
                        return "已挂失";
                    case 3:
                        return "已作废";
                    case 4:
                        return "已退卡";
                    case 6:
                        return "已过期";
                }
            }
        },
        { field: 'LeadTime', title: '领用时间', width: 120 },
        {
            field: 'ExpiryStart', title: '有效期限', width: 180, formatter: function (value, row, index) {
                if (row.ExpiryEnd != null) {
                    return value.replace("00:00:00", "") + "~ " + row.ExpiryEnd.replace("00:00:00", "");
                } else {
                    return value.replace("00:00:00", "") + "~ 不限";
                }
            }
        },
        { field: 'ExpiryEnd', hidden: true },
        { field: 'CreateDT', title: '创建时间', width: 130 },
        { field: 'CreateUID', title: '创建人', width: 80 },
    ]];
    pharos.manager.frozenColumns = [[
        { field: 'Id', checkbox: true },
        { field: 'BatchSN', title: '批次', width: 100 },
        {
            field: 'CardSN', title: '卡号', width: 180, formatter: function (value, row, index) {
                return value.replace(/(.{4})/g, '$1 ');
            }
        },
        { field: 'UserUID', title: '持卡人', width: 120 }
    ]];

    //设置状态
    function SetCardState(state) {
        var rows = pharos.manager.selectItems();
        if (!rows) return;

        //卡状态过滤
        var isPass = true;
        var errorMsg = "";

        var ids = $.map(rows, function (item) {
            debugger
            switch (state) {
                case 1://激活
                    if (item.State != 0) {
                        isPass = false;
                        errorMsg = "“激活”仅限对状态为未激活卡片操作！";
                        return false;
                    }
                    break;
                case 2://挂失
                    if (item.State != 1) {
                        isPass = false;
                        errorMsg = "“挂失”仅限于对状态为正常的卡片操作！";
                        return false;
                    }
                    break;
                case 3://作废
                    if (item.State != 1 && item.State != 0) {
                        isPass = false;
                        errorMsg = "“作废”仅限于对状态为正常、未激活的卡片操作！";
                        return false;
                    }
                    break;
                case 4://退卡
                    if (item.State != 1) {
                        isPass = false;
                        errorMsg = "“退卡”仅限于对状态为正常的卡片操作！";
                        return false;
                    }
                    break;
            }

            return item.Id;
        }).join();
        if (!isPass) {
            $.messager.alert("提示", errorMsg, "info");
            return false;
        }

        $.post("@Url.Action("UpdateCardState")", { state: state, ids: ids }, function (result) {
            if (result.successed) {
                $.messager.alert("提示", result.message, "info");
                pharos.manager.gridReload();
            } else {
                $.messager.alert("提示", "修改失败！" + d.message, "error");
            }
        }, "json");
    }
</script>
