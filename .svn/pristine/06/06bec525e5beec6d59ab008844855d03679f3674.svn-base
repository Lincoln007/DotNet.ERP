using Pharos.Logic.ApiData.Pos.DataSynchronism.Protocol;
using SuperSocket.ClientEngine;
using SuperSocket.ClientEngine.Protocol;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Pharos.Logic.ApiData.Pos.DataSynchronism.Protocol
{
    public abstract class BaseCommand : ICommand<SocketClient, CommandInfo>
    {
        public BaseCommand(byte version, byte[] code)
        {
            Route = new CommandRule()
            {
                Entry = version,
                Command = code
            };
            CommandRuleProvider = new CommandRuleProvider();
        }

        public string Name
        {
            get { return CommandRuleProvider.GetCommandName(Route); }
        }

        public CommandRule Route { get; protected set; }

        public ICommandRuleProvider CommandRuleProvider { get; protected set; }

        public abstract void ExecuteCommand(SocketClient client, CommandInfo commandInfo);
    }
}
