using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;

namespace Pharos.Logic.OMS.DAL
{
    public interface IBaseRepository<TEntity>
    {
        TEntity Add(TEntity entity, bool isSave = true);
        List<TEntity> AddRange(List<TEntity> entities, bool isSave = true);
        bool Remove(TEntity entity, bool isSave = true);
        bool RemoveRange(List<TEntity> entities, bool isSave = true);
        bool SaveChanges();
        TEntity Find(Expression<Func<TEntity, bool>> whereLambda, params string[] includeParams);
        TEntity Get(object id);
        IQueryable<TEntity> GetQuery(Expression<Func<TEntity, bool>> whereLambda=null);
    }
}
