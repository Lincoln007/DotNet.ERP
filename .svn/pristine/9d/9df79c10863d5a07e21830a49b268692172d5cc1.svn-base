@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    ViewData.OpBtnInfo(new OpBtnInfo(addText: "新建计划", editText: "编辑计划", delText: "删除计划", hideDel: false));
    var states = (ViewBag.status as List<SelectListItem>).ToClone();
    states.Where(o => o.Value.IsNullOrEmpty()).Each(o => o.Text = "将所选项设为指定状态");
}
@section search{
    <table class="table-toolbar">
        <tr>
            <td class="label-toolbar">
                <label>计划类型：</label>
            </td>
            <td class="input-toolbar">
                @Html.DropDownList("Type", ViewBag.types as List<SelectListItem>, new { @class = "easyui-combobox", data_options = "width:100,editable:false" })
            </td>
            <td class="label-toolbar">
                <label>执行状态：</label>
            </td>
            <td class="input-toolbar">
                @Html.DropDownList("Status", ViewBag.status as List<SelectListItem>, new { @class = "easyui-combobox", data_options = "width:120,editable:false" })
            </td>
            <td class="label-toolbar">
                <label>创建日期：</label>
            </td>
            <td class="input-toolbar">
                <input name="CreateDT_begin" id="" class="Wdate datacontrol" style="width: 100px;" onclick="WdatePicker({ dateFmt: 'yyyy-MM-dd' })" />
            </td>
            <td class="label-toolbar">
                <label style="width:10px;margin-right:3px;position:relative;top:-4px;">-</label>
            </td>
            <td class="input-toolbar">
                <input name="CreateDT_end" id="" class="Wdate datacontrol" style="width: 100px;" onclick="WdatePicker({ dateFmt: 'yyyy-MM-dd' })" />
            </td>
            <td class="label-toolbar">
                <label>关键字：</label>
            </td>
            <td class="input-toolbar">
                <input name="SearchText" class="datacontrol easyui-textbox font-12" placeholder="" data-options="prompt:'请输入查询条件...',width:120" />
            </td>
        </tr>
    </table>
}
@section toolbar
{
    @Html.DropDownList("state", states, new { @class = "easyui-combobox", data_options = "editable:false,width:200,onSelect:statusSelect" })
}
<link href="~/Content/iconfont/iconfont.css" rel="stylesheet" />
<script type="text/javascript">
    pharos.manager.geturl = "@Url.Action("MyIndexPageList")";
    pharos.manager.editurl = "@Url.Action("SavePlan")";
    pharos.manager.delurl = "@Url.Action("DeletePlan")";
    pharos.manager.sortName = "CreateDT";
    pharos.manager.columns = [[
        { field: 'Id', checkbox: true },
        { field: 'TypeTitle', title: '计划类型', width: 180, formatter: typeTitle },
        { field: 'StatuTitle', title: '执行状态', width: 80},
        { field: 'Assigner', title: '执行人', width: 100 },
        { field: 'Content', title: '计划内容', width: 250, formatter: function (value, row, index) { return value + (row.AttachCount > 0 ? "<div class='iconfont icon-wenjianfile65' title='有附件' />" : "") } },
        { field: 'ReplyCount', title: '总结批复', width: 100, formatter: function (value, row) { return row.Summary ? "已总结" : "未总结"; } },
        { field: 'CreateDT', title: '创建时间', width: 150, formatter: function (value, row, index) { return new Date(value.replace(/-/g, '/')).format("yyyy-MM-dd hh:mm") } },
        { field: 'Creater', title: '创建人', width: 100 }
    ]];
    function typeTitle(value, row, index) {
        var title = "<div>" + value + "</div>";
        if (row.StartDate && row.EndDate) {
            title += row.StartDate + "~" + row.EndDate;
        } else if (row.StartDate) {
            title += row.StartDate;
        }
        return title;
    }
    pharos.manager.addItem = function () {
        this.Id = "";
        openDialog800(this.addText, this.editurlNocache(),true);
    };
    pharos.manager.editItem = function (id,row) {
        this.Id = id;
        if (row.ReplyCount> 0) {
            openDialog(this.detailText, this.editurlNocache(), 800, 450, true);
        }else
            openDialog800(this.editText, this.editurlNocache());
    }

    function removeBefore(row) {
        var uid = '@Pharos.Logic.OMS.CurrentUser.UID';
        if (row.Status != 375) {
            $.messager.alert("提示", row.StatuTitle + "状态不能删除!");
            return false;
        }
        if (row.ReplyCount > 0) {
            $.messager.alert("提示", "已批复不能删除!");
            return false;
        }
        if (row.CreateUID != uid) {
            $.messager.alert("提示", "非本人创建不能删除!");
            return false;
        }
        return true;
    }

    //更新客户分类
    function statusSelect(record) {
        if (!record.value) return;
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        var st = Number(record.value);
        var ids = []; 
        $.each(rows, function (i,item) {
            if (item.Status >= st) {
                $.messager.alert("提示", "不允许改变此状态！");
                ids = [];
                return false;
            }
            ids.add(item.Id);
        })
        if (ids.length <= 0) return;
        $.messager.confirm("提示", "是否确定更改此状态?", function (r) {
            if (!r) return;
            $.post("@Url.Action("UpdateStatus")", { ids: ids.join(), t: Math.random(), status: st }, function (d) {
                if (d.successed) {
                    $.messager.alert("提示", "更改成功！", "info");
                    pharos.manager.gridReload();
                } else {
                    $.messager.alert("提示", "更改失败！" + d.message, "error");
                }
            }, "json");
        })
    }
</script>