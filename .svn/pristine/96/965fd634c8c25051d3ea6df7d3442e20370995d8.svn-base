@model CommodityPromotion
@{
    ViewBag.Title = Pharos.Sys.SysConstPool.Page_Title;
    Layout = "~/Views/Shared/_FormLayout.cshtml";
}
<style type="text/css">    .times .textbox{width:78px!important;}</style>
<div class="default-form">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(o=>o.Id)
        @Html.HiddenFor(o => o.Inserted)
        @Html.HiddenFor(o => o.InsertTypeed)
        @Html.HiddenFor(o => o.Deleted)
        @Html.HiddenFor(o => o.DeleteTyped)
        @Html.HiddenFor(o => o.Updated)
        @Html.HiddenFor(o => o.UpdateTyped)
        @Html.HiddenFor(o => o.State)
        <div class="content">
            <div class="formbox">
                <table class="table-form" height="117px">
                    <tr>
                        <td class="name">活动有效期：</td>
                        <td class="input">
                            <table>
                                <tr>
                                    <td>@Html.TextBoxFor(o => o.StartDate, "{0:yyyy-MM-dd}", new { @class = "easyui-datebox", data_options = "required:true,novalidate:true" })</td>
                                    <td style="padding-left:7px;padding-right:7px;line-height:28px;">-</td>
                                    <td>@Html.TextBoxFor(o => o.EndDate, "{0:yyyy-MM-dd}", new { @class = "easyui-datebox", data_options = "required:true,novalidate:true" })</td>
                                    <td style="padding-left:10px;">适用客户：</td>
                                    <td>@Html.RadioButtonListFor(o => o.CustomerObj, ViewBag.customers as List<SelectListItem>)</td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td class="name">活动时效：</td>
                        <td class="input times">
                            <table>
                                <tr>
                                    <td>@Html.RadioButtonListFor(o => o.Timeliness, new List<SelectListItem>() { new SelectListItem() { Text = "不限", Value = "0", Selected = true }, new SelectListItem() { Text = "指定每天时效", Value = "1" } })</td>
                                    <td id="tdtimes">@Html.TimeBoxList((List<string>)ViewBag.times, "Times")</td>
                                </tr>
                            </table>
                        </td>
                    </tr>
                    <tr>
                        <td class="name">适用门店：</td>

                        <td class="input choose">@Html.CheckBoxListFor(o => o.StoreId, ViewBag.shops as List<SelectListItem>, new { data_options = "required:true,novalidate:true,missingMessage:'必勾选一项'", @class = "easyui-validatebox", id = "store" }, 10)</td>

                    </tr>
                </table>
            </div><br />
            <div id="win" class="easyui-dialog" data-options="title:'选择商品',buttons:btns,cache:false,modal:true,width:800,height:450,closed:true,collapsible:false,minimizable:false,maximizable:false"></div>
            <div id="tt1" class="easyui-tabs" data-options="onSelect:function(title,index){if(index==0){appendItemProc();disabedGrid();} else{appendItemType();disabedTypeGrid();}}" style="height:auto;">
                <div title="促销商品" style="padding:10px;">
                    <a href="#" class="easyui-linkbutton" onclick="selectProduct()" style="margin:5px 0px;">添加促销商品</a>
                    <table class="easyui-datagrid" id="grid2"
                           data-options="url:'@Url.Action("LoadDetailList")',queryParams:{zhekouId:'@Model.Id',type:1},showFooter:false,border:true,rownumbers:true,fit:false,fitColumns:true,pagination:false,singleSelect: true,onClickCell:clickCell,onLoadSuccess:function(){ setTimeout(function(){appendItemProc();disabedGrid();},500)},onLoadError:loadError,idField:'Id'">
                        <thead>
                            <tr>
                                <th data-options="field:'ProductCode',editor:{type:'textbox',options:{disabled:true}}" width="120">货号</th>
                                <th data-options="field:'Barcode',editor:{type:'combobox',options:{prompt:'请输入条码...',required:true,mode:'remote',valueField:'barcode',textField:'title',loader:comboload,onChange:comboSelect}}" width="150">条码</th>
                                <th data-options="field:'Title',editor:{type:'textbox',options:{disabled:true}}" width="150">品名</th>
                                <th data-options="field:'CategoryTitle',editor:{type:'textbox',options:{disabled:true}}" width="80">品类</th>
                                <th data-options="field:'SubUnit',editor:{type:'textbox',options:{disabled:true}}" width="60">单位</th>
                                <th data-options="field:'SysPrice',editor:{type:'textbox',options:{disabled:true}}" width="80">系统售价</th>
                                <th data-options="field:'StockNums',editor:{type:'textbox',options:{disabled:true}}" width="120">库存</th>
                                <th data-options="field:'MinPurchaseNum',editor:{type:'numberbox',options:{disabled:false,required:true,min:1,precision:3}}" width="60">起购量</th>
                                <th data-options="field:'Detail',formatter:operProction" width="200">赠送商品</th>
                                <th data-options="field:'RestrictionBuyNum',editor:{type:'numberbox',options:{disabled:false,required:true,min:0}}" width="80">限购次数</th>
                                <th data-options="field:'Editor',formatter:operation" width="100">操作</th>
                            </tr>
                        </thead>
                    </table>
                </div>
                <div title="促销系列" style="padding:10px;">
                    <a href="#" class="easyui-linkbutton" onclick="selectType()" style="margin:5px 0px;">添加促销系列</a>
                    <table class="easyui-datagrid" id="grid3"
                           data-options="url:'@Url.Action("LoadDetailList")',queryParams:{zhekouId:'@Model.Id',type:2},showFooter:false,border:true,rownumbers:true,fit:false,fitColumns:true,pagination:false,singleSelect: true,onLoadSuccess:function(){},onClickCell:clickCell,onLoadError:loadError,idField:'Id'">
                        <thead>
                            <tr>
                                <th data-options="field:'Id',hidden:true,editor:{type:'textbox'}" width="120">ID</th>
                                <th data-options="field:'StrId',hidden:true,editor:{type:'textbox'}" width="120">ID</th>
                                <th data-options="field:'CategorySN',hidden:true,editor:{type:'textbox'}" width="120">类别</th>
                                <th data-options="field:'CategoryGrade',hidden:true,editor:{type:'textbox'}" width="80">层级</th>
                                <th data-options="field:'BrandSN',hidden:true,editor:{type:'textbox'}" width="120">品牌ID</th>
                                <th data-options="field:'BigCategoryTitle',editor:{type:'combobox',options:{required:true,data:pharos.dropdown['parenttypes'],onSelect:bigTypeSelect,editable:false}}" width="150">大类</th>
                                <th data-options="field:'MidCategoryTitle',editor:{type:'combobox',options:{required:true,onSelect:midTypeSelect,editable:false}}" width="150">中类</th>
                                <th data-options="field:'SubCategoryTitle',editor:{type:'combobox',options:{onSelect:childTypeSelect,editable:false}}" width="150">子类</th>
                                <th data-options="field:'BrandTitle',editor:{type:'combobox',options:{data:pharos.dropdown['brands'],onSelect:brandSelect}}" width="120">品牌</th>
                                <th data-options="field:'StockNums',editor:{type:'textbox',options:{disabled:true}}" width="120">库存</th>
                                <th data-options="field:'MinPurchaseNum',editor:{type:'numberbox',options:{disabled:false,required:true,min:1}}" width="60">起购量</th>
                                <th data-options="field:'Detail',formatter:operTypeProction" width="200">赠送商品</th>
                                <th data-options="field:'RestrictionBuyNum',editor:{type:'numberbox',options:{disabled:false,required:true,min:0}}" width="80">限购次数</th>
                                <th data-options="field:'Editor',formatter:operationType" width="120">操作</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <p style="margin-top:30px;">
                说明：<br />
                1）录入货号或条码后自动填充相关商品信息；<br />
                2）限购次数为0，则表示无限制，直至商品售完或活动到期为止；<br />
                3）限购次数大于0，则表示每天限多少个购买订单。<br />
            </p>
        </div>
    }
</div>

<script type="text/javascript">
    var $dg2,$dg3,$dgt;
    $(function () {
        $dg2 = $("#grid2");
        $dg3 = $("#grid3");
        
        $("[name='Timeliness']").click(function () {
            if ($(this).val() == "0") {
                $("[textboxname='Times']").timespinner('disable');
            } else {
                $("[textboxname='Times']").timespinner('enable');
            }
        })
        $("[name='StoreId']").click(function () {
            if ($(this).val() == "") {
                var chk = this.checked;
                $("[name='StoreId']:not(:first)").each(function (i, r) {
                    //console.log($(this).attr("id"));
                    r.checked = chk;
                })
            } else {
                $("[name='StoreId']:first")[0].checked = $("[name='StoreId']:not(:first):checked").size() == $("[name='StoreId']:not(:first)").size();
            }
            storeRequired();
        });
        if ($("[name='StoreId']:first").attr("checked"))
            $("[name='StoreId']:not(:first)").attr("checked", true);
        if ($("[name='Timeliness']:checked").val() == "0")
            $("[textboxname='Times']").timespinner('disable');
        storeRequired();
    });
    var comboload=function (param, success, error) {
        var q = param.q || "";
        if (q.length <= 1) return false;
        var $combo = $(this);
        $.ajax({
            url:"@Url.Action("GetProductInput", "Product")",
            type:"post",
            data:{
                //传值，还是JSON数据搜索
                searchName:q
            },
            //重要，如果写jsonp会报转换错误，此处不写都可以
            dataType:"json",
            success: function (data) {
                comboRows = data.rows;
                //关键步骤，遍历一个MAP对象
                var items = $.map(data.rows, function(item){
                    return { barcode: item.Barcode, title: item.Title };
                });
                //执行loader的success方法
                success(items);
                var val = $combo.combobox("getValue");
                if (val) {
                    comboSelect(val);
                }
            },    //异常处理
            error: function (xml, text, msg) {
                error.apply(this, arguments);
            }
        });
    }
    function getRow(cd) {
        var obj = null;
        $.each(comboRows, function (i, row) {
            if (row.Barcode == cd) {
                obj = row; return;
            }
        });
        return obj;
    }
    function comboSelect(newValue, oldValue) {
        var obj = getRow(newValue);
        if (!obj) return;
        var ed = $dg2.datagrid('getEditor', { index: editProcIndex, field: 'ProductCode' });
        $(ed.target).textbox('setValue', obj.ProductCode);
        ed = $dg2.datagrid('getEditor', { index: editProcIndex, field: 'Title' });
        $(ed.target).textbox('setValue', obj.Title);
        ed = $dg2.datagrid('getEditor', { index: editProcIndex, field: 'SubUnit' });
        $(ed.target).textbox('setValue', obj.SubUnit);
        ed = $dg2.datagrid('getEditor', { index: editProcIndex, field: 'SysPrice' });
        $(ed.target).textbox('setValue', obj.SysPrice);
        ed = $dg2.datagrid('getEditor', { index: editProcIndex, field: 'CategoryTitle' });
        $(ed.target).textbox('setValue', obj.CategoryTitle);
        ed = $dg2.datagrid('getEditor', { index: editProcIndex, field: 'StockNums' });
        $(ed.target).textbox('setValue', obj.StockNums);

    }
    function loadSuccess() {
        setTimeout(function () {
            appendItemProc();
            disabedGrid();
        }, 500);
    }
    pharos.dropdown['parenttypes'] =@Html.Raw(ViewBag.parenttypes)
    pharos.dropdown['brands'] =@Html.Raw(ViewBag.brands)
    function selectProduct(id, zp, dg) {
        if (dg) $dgt = $("#" + dg);
        else $dgt = $dg2;
        var isExclude ="";
        if (id) {
            var r = $dgt.datagrid("selectRecord", id).datagrid("getSelected");
            selectIndex = $dgt.datagrid("getRowIndex", r);
            $dgt.datagrid("selectRow", selectIndex);
            isExclude = "1";
            if (dg == "grid2") {
                if (selectIndex == editProcIndex) {
                    enabledGrid();
                    if (endClickEditing() && endProcEditing()) {
                        appendItemProc();
                    } else {
                        return;
                    }
                }
            } else if (dg == "grid3") {
                if (selectIndex == editTypeIndex) {
                    enabledTypeGrid();
                    if (endClickEditing() && endTypeEditing()) {
                        appendItemType();
                    } else
                        return;
                }
            }
        }
        var url = "@Url.Action("SelectProduct", "Product")?t="+Math.random();
        var rows = $dg2.datagrid("getRows");
        var ids = $.map(rows, function (row) {
            return row.Barcode;
        }).join(",");
        url += "&cds=" + ids //+ "&promtype=4";
        if (zp) url += "&zp=" + zp;
        if (isExclude == "1") url += "&isExclude=1";
        var cont = "<iframe src='" + url + "' width='100%' height='99%' frameborder='0' />";
        $("#win").dialog({ content: cont, buttons: btns }).dialog("open");
    }
    var btns = [{
        text: '添加所选产品',
        iconCls: 'icon-ok',
        width:140,
        handler: function () {
            var chks = $('#win iframe')[0].contentWindow.$dg3.datagrid("getChecked");
            if (selectIndex != undefined && chks.length > 0) {
                var row = $dgt.datagrid('getSelected');
                var str = "<div style='color:orange'>随机赠1件</div>";
                var detail = $.map(chks, function (item) {
                    return item.Barcode + " " + (item.BrandTitle?item.BrandTitle:"") + " " + item.Title
                }).join("<br>");
                var barcodes = $.map(chks, function (row) {
                    return row.Barcode;
                }).join();
                $dgt.datagrid('updateRow',
                {
                    index: selectIndex,
                    row: { Detail: str + detail, Barcodes: barcodes }
                });
                selectIndex = undefined;
            } else {
                var data = $dgt.datagrid("getData");
                var lastIndex = data.rows.length - 1;
                $.each(chks, function (idx, row) {
                    if (!isExists(data.rows, row.Barcode)) {
                        $dgt.datagrid('insertRow',
                        {
                            index: lastIndex,
                            row: {
                                ProductCode: row.ProductCode, Barcode: row.Barcode, Title: row.Title, SubUnit: row.SubUnit, StockNums: row.StockNums, CategoryTitle: row.CategoryTitle,
                                SysPrice: row.SysPrice, BrandTitle: row.BrandTitle, MinPurchaseNum: 1, RestrictionBuyNum: 0, Id: guidGenerator()
                            }
                        });
                        lastIndex++;
                    }
                });
            }
            changeValue();
            $('#win').dialog('close');
        }
    }, {
        text: '关闭',
        iconCls: 'icon-cancel',
        handler: function () {
            $('#win').dialog('close');
        }
    }];
    var btntypes = [{
        text: '添加所选系列',
        iconCls: 'icon-ok',
        width: 140,
        handler: function () {
            //debugger;
            var chks = $('#win iframe')[0].contentWindow.$dg3.datagrid("getChecked");
            var data = $dg3.datagrid("getData");
            var lastIndex = data.rows.length - 1;
            var names = $.map(data.rows, function (item) { return item.StrId; });
            $.each(chks, function (idx, row) {
                if (!row.BrandSN) row.BrandSN = 0;
                if (names.indexOf(row.Id) == -1) {
                    $dg3.datagrid('insertRow',
                    {
                        index: lastIndex,
                        row: {
                            CategorySN: row.CategorySN, MidCategoryTitle: row.MidCategoryTitle, SubCategoryTitle: row.SubCategoryTitle, BigCategoryTitle: row.BigCategoryTitle, BrandTitle: row.BrandTitle, BrandSN: row.BrandSN,
                            StockNums: row.StockNums, StrId: row.CategorySN + '~' + row.BrandSN, Id: maxId(2), MinPurchaseNum: 1, RestrictionBuyNum: "0"
                        }
                    });
                    lastIndex++;
                }
            });
            changeValue();
            $('#win').dialog('close');
        }
    }, {
        text: '关闭',
        iconCls: 'icon-cancel',
        handler: function () {
            $('#win').dialog('close');
        }
    }];
    function selectType(idx, zp) {
        var url = "@Url.Action("SelectType", "Product")?t="+Math.random();
        var rows = $dg3.datagrid("getRows");
        var cds = $.map(rows, function (row) {
            return row.StrId;
        }).join(",");
        url += "&cds=" + cds;
        var cont = "<iframe src='" + url + "' width='100%' height='99%' frameborder='0' />";
        $("#win").dialog({ content: cont, buttons: btntypes }).dialog("open");
    }
    function isExists(rows, cd) {
        var result = false;
        $.each(rows, function (idx, row) {
            if (row.Barcode == cd) {
                result = true; return;
            }
        });
        return result;
    }
    var editProcIndex = undefined, editTypeIndex = undefined, clickIndex = undefined, opaddPro = false,opaddType=false, selectIndex = undefined, comboRows = [];
    function endProcEditing() {
        if (editProcIndex == undefined) { return true }
        if ($dg2.datagrid('validateRow', editProcIndex)) {
            var ed = $dg2.datagrid('getEditor', { index: editProcIndex, field: 'Barcode' });
            if (ed) {
                var vl = $(ed.target).combobox('getValue');
                var data = $dg2.datagrid("getData");
                if (isExists(data.rows, vl)) {
                    $.messager.alert("提示", "该条形码已存在", "warning", function () {
                        $(ed.target).combobox('showPanel').next('span').find('input').focus()
                    });
                    return false;
                }
                if (!vl) return false;
                if (!isExists(comboRows, vl)) {
                    $.messager.alert("提示", "该条形码不存在", "warning", function () {
                        $(ed.target).combobox('showPanel').next('span').find('input').focus()
                    });
                    return false;
                }
            }
            $dg2.datagrid('endEdit', editProcIndex);
            editProcIndex = undefined;
            return true;

        } else {
            return false;
        }
    }
    function endClickEditing() {
        if (clickIndex == undefined) { return true }
        if ($dgt.datagrid('validateRow', clickIndex)) {
            $dgt.datagrid('endEdit', clickIndex);
            clickIndex = undefined;
            return true;

        } else {
            return false;
        }
    }
    function endTypeEditing() {
        if (editTypeIndex == undefined) { return true }
        if ($dg3.datagrid('validateRow', editTypeIndex)) {
            var ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'SubCategoryTitle' });
            var edm = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'MidCategoryTitle' });
            var edp = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'BigCategoryTitle' });
            var edb = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'BrandTitle' });
            if (ed) {
                var brandTitle = $(edb.target).combobox('getText');
                var brandId = $(edb.target).combobox('getValue');
                var subTitle = $(ed.target).combobox('getText');
                var subId = $(ed.target).combobox('getValue');
                var midTitle = $(edm.target).combobox('getText');
                var midId = $(edm.target).combobox('getValue');
                var bigTitle = $(edp.target).combobox('getText');
                var bigId = $(edp.target).combobox('getValue');
                var rows = $dg3.datagrid("getRows");
                brandId = brandId ? brandId : "0";
                midId = midId ? midId : "0";
                var categorySN = subId ? subId : midId;
                var titles = categorySN + '~' + brandId;
                var alltitles = $.map(rows, function (item) {
                    return item.CategorySN + '~' + item.BrandSN;
                })
                if (alltitles.indexOf(titles) != -1) {
                    $.messager.alert("提示", "该类别信息已存在!", "warning");
                    return false;
                }
                $(edp.target).combobox('setValue', bigTitle);//改变文本
                $(ed.target).combobox('setValue', subTitle);//改变文本
                $(edm.target).combobox('setValue', midTitle);//改变文本
                $(edb.target).combobox('setValue', brandTitle);//改变文本
                var edid = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'CategorySN' });
                $(edid.target).textbox("setValue", categorySN);
                edid = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'BrandSN' });
                $(edid.target).textbox("setValue", brandId);
                edid = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'StrId' });
                $(edid.target).textbox("setValue", titles);
                edid = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'Id' });
                $(edid.target).textbox("setValue", maxId(2));
            }
            $dg3.datagrid('endEdit', editTypeIndex);
            editTypeIndex = undefined;
            return true;

        } else {
            return false;
        }
    }
    function appendItemProc() {
        $dg2 =$dg2?$dg2:$("#grid2");
        enabledGrid();
        if (endClickEditing() && endProcEditing()) {
            opaddPro = true;
            $dg2.datagrid('appendRow', { MinPurchaseNum: 1, RestrictionBuyNum: "0", Id: guidGenerator() });
            editProcIndex = $dg2.datagrid('getRows').length - 1;
            $dg2.datagrid('selectRow', editProcIndex)
                .datagrid('beginEdit', editProcIndex);
            changeValue();
            disabedGrid();
        }
    }
    function appendItemType() {
        $dg3 = $dg3 ? $dg3 : $("#grid3");
        enabledTypeGrid();
        if (endTypeEditing()) {
            opaddType = true;
            $dg3.datagrid('appendRow', { BrandSN: 0,MinPurchaseNum: 1,RestrictionBuyNum: "0",Id: maxId(2) });
            editTypeIndex = $dg3.datagrid('getRows').length - 1;
            $dg3.datagrid('selectRow', editTypeIndex)
                .datagrid('beginEdit', editTypeIndex);
            changeValue();
            disabedTypeGrid();
        }
    }
    function changeValue() {
        var inserted = $dg2.datagrid('getChanges', "inserted");
        var deleted = $dg2.datagrid('getChanges', "deleted");
        var updated = $dg2.datagrid('getChanges', "updated");
        
        //alert(JSON.stringify(inserted))
        $("#Inserted").val(JSON.stringify(inserted));
        $("#Deleted").val(JSON.stringify(deleted));
        $("#Updated").val(JSON.stringify(updated));
        editProcIndex = $dg2.datagrid('getRows').length - 1;
        if (editProcIndex < 0) editProcIndex = undefined;
        if (!$dg3) return;
        var inserteTyped = $dg3.datagrid('getChanges', "inserted");
        var deleteTyped = $dg3.datagrid('getChanges', "deleted");
        var updateTyped = $dg3.datagrid('getChanges', "updated");
        $("#InsertTypeed").val(JSON.stringify(inserteTyped));
        $("#DeleteTyped").val(JSON.stringify(deleteTyped));
        $("#UpdateTyped").val(JSON.stringify(updateTyped));
        editTypeIndex = $dg3.datagrid('getRows').length - 1;
        if (editTypeIndex < 0) editTypeIndex = undefined;
    }
    function clickCell(index, field) {
        $dgt= $(this);
        if (endClickEditing() && (field == "MinPurchaseNum" || field == "RestrictionBuyNum")) {
            $dgt.datagrid('selectRow', index)
                    .datagrid('editCell', { index: index, field: field });
            clickIndex = index;
        }
    }
    function operation(value, row, index) {
        if (opaddPro) {
            opaddPro = false;
            return "<a href='javascript:void(0)' onclick='appendItemProc()'>添加</a>";
        } else {
            return "<a href='javascript:void(0)' onclick=\"copyItem('" + row.Id + "')\">复制</a>&nbsp;&nbsp;<a href='javascript:void(0)' onclick=\"removeItem(" + row.Id + ")\">删除</a>";
        }
    }
    function operationType(value, row, index) {
        if (opaddType) {
            opaddType = false;
            return "<a href='javascript:void(0)' onclick='appendItemType()'>添加</a>";
        } else {
            return "<a href='javascript:void(0)' onclick=\"removeItemType('" + row.Id + "')\">删除</a>";
        }
    }
    function operProction(value, row, index) {
        return value ? value : "<a href='javascript:void(0)' onclick=\"selectProduct('" + row.Id + "','1','grid2')\">指定赠送商品</a>";
    }
    function operTypeProction(value, row, index) {
        return value ? value : "<a href='javascript:void(0)' onclick=\"selectProduct('" + row.Id + "','1','grid3')\">指定赠送商品</a>";
    }
    function copyItem(id) {
        $dg2.datagrid('selectRecord', id);
        var row = $dg2.datagrid('getSelected');
        editProcIndex = $dg2.datagrid('getRows').length - 1;
        //row.Id = guidGenerator();
        $dg2.datagrid('insertRow', {
            index: editProcIndex, row: {
                ProductCode: row.ProductCode, Barcode: row.Barcode, Title: row.Title, SubUnit: row.SubUnit, StockNums: row.StockNums, CategoryTitle: row.CategoryTitle,
                Detail: row.Detail, Barcodes: row.Barcodes,
                SysPrice: row.SysPrice, BrandTitle: row.BrandTitle, MinPurchaseNum: row.MinPurchaseNum, RestrictionBuyNum: row.RestrictionBuyNum, Id: guidGenerator()
            }
        });
        changeValue();
    }
    function removeItem(id) {
        $.messager.confirm("提示", "是否确定删除该项信息?", function (r) {
            if (!r) return r;
            //$dg2.datagrid("selectRecord", id);
            //var row = $dg2.datagrid("getSelected")
            var index = $dg2.datagrid("clearSelections").datagrid("getRowIndex", id);
            $dg2.datagrid('deleteRow', index);
            changeValue();
        })
    }
    function removeItemType(id) {
        $.messager.confirm('提示', "是否确定删除该项信息?", function (r) {
            if (!r) {
                return r;
            }
            $dg3.datagrid("selectRecord", id);
            var row = $dg3.datagrid("getSelected")
            var index = $dg3.datagrid("getRowIndex", row);
            $dg3.datagrid('deleteRow', index);
            changeValue();
        });
    }
    function bigTypeSelect(record) {
        var ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'MidCategoryTitle' });
        if (ed) {
            $(ed.target).combobox("clear").combobox('reload', "@Url.Action("ChildCategory", "ProductType")?emptyTitle=&psn=" + record.value);
        }
    }
    function midTypeSelect(record) {
        var ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'SubCategoryTitle' });
        if (ed) {
            $(ed.target).combobox("clear").combobox('reload', "@Url.Action("ChildCategory", "ProductType")?emptyTitle=&psn=" + record.value);
            ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'CategoryGrade' });
            $(ed.target).textbox("setValue", 2);
        }
    }
    function childTypeSelect(record) {
        var ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'CategoryGrade' });
        if (ed) {
            $(ed.target).textbox("setValue", 3);
        }
    }
    function brandSelect(record) {
        var ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'SubCategoryTitle' });
        var subCate = $(ed.target).combobox('getValue');
        ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'StockNums' });
        if (ed) {
            $.post("@Url.Action("BrandSelect", "Product")", { SubCategorySN: subCate, BrandSN: record.value, t: Math.random() }, function (data) {
                if (data && data.length > 0)
                    $(ed.target).textbox('setValue', data[0].StockNums);
            }, "json");
        }
    }
    function SaveBefore() {
        var start = $("#StartDate").datebox("getValue");
        var end = $("#EndDate").datebox("getValue");
        var state = $("#State").val();
        if (start && end) {
            start = start.replace(/-/g, "/") + " 23:59:00";
            end = end.replace(/-/g, "/") + " 23:59:00";;
            if (new Date(end) < new Date(start)) {
                $.messager.alert("提示", "活动有效期范围错误!", "info"); return false;
            }
            if ((state == "0" || state == "2") && new Date() > new Date(start)) {
                $.messager.alert("提示", "活动有效期开始日期不能是过去日期!", "info"); return false;
            }
        }
        storeRequired();
        var rows = $dg2.datagrid("getRows");
        
        var isnull = false,hasrd=false;
        $.each(rows, function (i, r) {
            if (r.Barcode && !r.Barcodes)
                isnull = true;
            if (r.Barcode)
                hasrd = true;
        });
        if (!isnull) {
            rows = $dg3.datagrid("getRows");
            $.each(rows, function (i, r) {
                if (r.CategorySN && !r.Barcodes)
                    isnull = true;
            });
        }
        if (!hasrd){
            rows = $dg3.datagrid("getRows");
            $.each(rows, function (i, r) {
                if (r.CategorySN)
                    hasrd = true;
            });
        }
        if (!hasrd) {
            $.messager.alert("提示", "请添加促销信息", "info"); return false;
        }
        if (isnull) {
            $.messager.alert("提示", "请添加赠送商品", "info"); return false;
        }
        if (state == "2") {
            if (!confirm("是否新增买赠促销?"))
                return false;
        }
        disabedGrid();
        disabedTypeGrid();
        endClickEditing();
        changeValue();
        return true;
    }
    function guidGenerator() {
        //debugger;
        var rows = $dg2.datagrid("getRows");
        var ids = $.map(rows, function (row) {
            return row.Id ? row.Id : 0;
        });
        var maxId = Math.max.apply(null, ids);
        if (maxId == -Infinity) maxId = 0;
        return maxId + 1;
    }
    function storeRequired() {
        if ($("[name='StoreId']:checked").size() <= 0)
            $("#store").validatebox("enableValidation");
        else
            $("#store").validatebox("disableValidation");
    }
    function disabedGrid() {
        if (editProcIndex != undefined) {
            var ed = $dg2.datagrid('getEditor', { index: editProcIndex, field: 'Barcode' });
            if (!ed) return;
            $(ed.target).combobox('disableValidation');
        }
    }
    function enabledGrid() {
        if (editProcIndex != undefined) {
            var ed = $dg2.datagrid('getEditor', { index: editProcIndex, field: 'Barcode' });
            if (!ed) return;
            $(ed.target).combobox('enableValidation');
        }
    }
    function disabedTypeGrid() {
        if (editTypeIndex != undefined) {
            var ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'BigCategoryTitle' });
            if (ed) {
                $(ed.target).combobox('disableValidation');
                ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'MidCategoryTitle' });
                $(ed.target).combobox('disableValidation');
                ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'BrandTitle' });
                $(ed.target).combobox('disableValidation');
            }
        }
    }
    function enabledTypeGrid() {
        if (editTypeIndex != undefined) {
            var ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'BigCategoryTitle' });
            if (ed) {
                $(ed.target).combobox('enableValidation');
                ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'MidCategoryTitle' });
                $(ed.target).combobox('enableValidation');
                ed = $dg3.datagrid('getEditor', { index: editTypeIndex, field: 'BrandTitle' });
                $(ed.target).combobox('enableValidation');
            }
        }
    }
    function maxId(type) {
        var $dg = type == 1 ? $dg2 : type == 2 ? $dg3 : $dgt;
        var rows = $dg.datagrid("getRows");
        var ids = $.map(rows, function (row) {
            return row.Id ? row.Id : 0;
        });
        var maxId = Math.max.apply(null, ids);
        if (maxId == -Infinity) maxId = 0;
        return maxId + 1;
    }
</script>