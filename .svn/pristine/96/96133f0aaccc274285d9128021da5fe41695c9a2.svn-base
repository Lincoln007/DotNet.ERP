using Pharos.SuperSocketProtocol;
using SuperSocket.SocketBase;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Pharos.MessageAgent.Protocol
{
    public class MessageServerSessionManager : ISessionManager
    {
        public SuperSocket.SocketBase.IAppServer Server { get; set; }

        public void RegisterSession<TSessionInformaction>(TSessionInformaction info) where TSessionInformaction : ISessionInformaction
        {
            throw new NotImplementedException();
        }

        public void NotifyAlive<TSessionInformaction>(TSessionInformaction info) where TSessionInformaction : ISessionInformaction
        {
            throw new NotImplementedException();
        }

        public void ReleaseSession<TSessionInformaction>(TSessionInformaction info) where TSessionInformaction : ISessionInformaction
        {
            throw new NotImplementedException();
        }

        public SuperSocket.SocketBase.IAppSession GetSession<TSessionInformaction>(TSessionInformaction info) where TSessionInformaction : ISessionInformaction
        {
            throw new NotImplementedException();
        }
    }
}
