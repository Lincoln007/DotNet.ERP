@{
    ViewBag.Title = Pharos.Sys.SysConstPool.Page_Title;
    Layout = "~/Views/Shared/_ManagerTreeLayout.cshtml";
    var hideAdd = !CurrentUser.HasPermiss(SysConstLimits.产品分类_新增分类);
    var showDetail = CurrentUser.HasPermiss(SysConstLimits.产品分类_查看分类) && hideAdd;
    var hideEnable = !CurrentUser.HasPermiss(SysConstLimits.产品分类_设为可用或停用);
    ViewData.OpBtnInfo(new OpBtnInfo(addText: "新增分类", editText: "修改分类", hideDel: true));
}

@section search{
    <table class="table-toolbar">
        <tr>
            <td class="label-toolbar">
                <label>类别：</label>
            </td>
            <td class="input-toolbar">
                @Html.DropDownList("parentType", ViewBag.parenttypes as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "editable:false" })
            </td>
            @*<td class="label-toolbar">
        <label>状态：</label>
    </td>
    <td class="input-toolbar">
        @Html.DropDownList("state", ViewBag.states as List<SelectListItem>, new { @class = "easyui-combobox datacontrol", data_options = "editable:false" })
    </td>
    <td class="label-toolbar">
        <label>关键字：</label>
    </td>
    <td class="input-toolbar">
        <input name="searchText" class="datacontrol easyui-textbox" placeholder="名称" data-options="prompt:'名称'" />
    </td>*@
        </tr>
    </table>
}
@section toolbar
{
    @if(!hideEnable)
    { 
    <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-usable'" onclick="setEnable(1)">设为可用</a>
    <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-suspend'" onclick="setEnable(0)">设为停用</a>
    }
}

<script type="text/javascript">
    pharos.managertree.columns = [[
        { field: 'Id', checkbox: true },
        { field: 'text', title: '分类名称', width: 150 },
        { field: 'CategoryPSNTitle', title: '上级分类', width: 150,hidden:true },
        { field: 'Count', title: '档案商品量', width: 150 },
        { field: 'StateTitle', title: '状态', width: 150 }
    ]];
    pharos.managertree.sortName = "OrderNum";
    pharos.managertree.sortOrder = "asc";
    pharos.managertree.treeField = "text";
    pharos.managertree.pagination = false;
    pharos.managertree.addItem = function () {
        this.Id = "";
        //openDialog600(this.addText, this.editurlNocache());
        //openWin({ 'title': this.addText, 'width': 420, 'height': 260, 'url': this.editurlNocache() });
        openDialogNew(this.addText, this.editurlNocache(),600,370,false,false);
    }
    pharos.managertree.editItem = function (Id) {
        this.Id = Id;
        @if(showDetail)
        { 
            @:openDialog("查看详情", this.editurlNocache(),600,370,true);
        }
        else
        {
            @:openDialog600(this.editText, this.editurlNocache());
        }
        //openWin({ 'title': this.editText, 'width': 420, 'height': 260, 'url': this.editurlNocache() });
    }
    function setEnable(state) {
        var rows = pharos.managertree.selectItems();
        if (!rows) return;
        var ids = $.map(rows, function (item) {
            return item.Id;
        }).join();
        $.post("@Url.Action("SetState")", { Ids: ids, t: Math.random(), state: state }, function (d) {
            if (d.successed) {
                $.messager.alert("提示", "修改成功！", "info");
                pharos.managertree.gridReload();
            } else {
                $.messager.alert("提示", "修改失败！" + d.message, "error");
            }
        }, "json");
    }
    function removeBefore(item) {
        if (item.Count>0) {
            $.messager.alert("提示", "商品量大于零不能删除!"); return false;
        }
        return true;
    }
</script>