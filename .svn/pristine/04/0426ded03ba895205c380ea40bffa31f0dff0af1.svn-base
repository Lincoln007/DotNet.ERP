using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace QCT.Pay.Common
{
    #region QctPay
    /// <summary>
    /// 商户退款状态
    /// </summary>
    public enum RefundState : short
    {
        /// <summary>
        /// 退款中
        /// </summary>
        [Description("退款中")]
        RefundIng = 0,
        /// <summary>
        /// 退款成功
        /// </summary>
        [Description("退款成功")]
        RefundSuccess = 1,
        /// <summary>
        /// 退款失败
        /// </summary>
        [Description("退款失败")]
        RefundFail = 2
    }
    /// <summary>
    /// 商户支付交易订单类型（收支）
    /// </summary>
    public enum QctTradeType : short
    {
        /// <summary>
        /// 收入
        /// </summary>
        [Description("收入")]
        Income = 0,
        /// <summary>
        /// 支出
        /// </summary>
        [Description("支出")]
        Expense = 1
    }
    /// <summary>
    /// 币种
    /// </summary>
    public enum FeeType : short
    {
        /// <summary>
        /// 人民币
        /// </summary>
        [Description("人民币")]
        RMB = 1
    }
    /// <summary>
    /// 所属体系
    /// </summary>
    public enum PaySourceType : short
    {
        /// <summary>
        /// 云平台
        /// </summary>
        [Description("云平台")]
        CloudQctErp = 1,
        /// <summary>
        /// 外部
        /// </summary>
        [Description("外部")]
        Outside = 2
    }
    /// <summary>
    /// 支付渠道
    /// </summary>
    public enum PayChannel : short
    {
        [Description("退款")]
        REFUND = 0,
        /// <summary>
        /// 微信支付
        /// </summary>
        [Description("微信支付")]
        WX = 1,
        /// <summary>
        /// 支付宝支付
        /// </summary>
        [Description("支付宝支付")]
        ALIPAY = 2
    }

    /// <summary>
    /// 支付订单状态
    /// </summary>
    public enum PayState : short
    {
        /// <summary>
        /// 未支付，付款中
        /// </summary>
        [Description("未支付")]
        NotPay = 0,
        /// <summary>
        /// 支付成功
        /// </summary>
        [Description("支付成功")]
        PaySuccess = 1,
        /// <summary>
        /// 支付失败
        /// </summary>
        [Description("支付失败")]
        PayFail = 2,
        /// <summary>
        /// 已撤销
        /// </summary>
        [Description("已撤销")]
        PayCancel = 3,
        /// <summary>
        /// 支付超时
        /// </summary>
        [Description("支付超时")]
        PayTimeout = 4
    }
    #endregion

    #region PayApi
    /// <summary>
    /// 收单渠道状态
    /// </summary>
    public enum PayChannelState : short
    {
        /// <summary>
        /// 未审核
        /// </summary>
        [Description("未审核")]
        NotAuditing = 0,
        /// <summary>
        /// 可用
        /// </summary>
        [Description("可用")]
        Enabled = 1,
        /// <summary>
        /// 停用
        /// </summary>
        [Description("停用")]
        Disabled = 2,
        /// <summary>
        /// 注销
        /// </summary>
        [Description("注销")]
        Cancel = 3
    }
    /// <summary>
    /// 交易支付接口状态
    /// </summary>
    public enum PayApiState : short
    {
        /// <summary>
        /// 未发布
        /// </summary>
        [Description("未发布")]
        NotReleased = 0,
        /// <summary>
        /// 已发布
        /// </summary>
        [Description("已发布")]
        HasReleased = 1,
        /// <summary>
        /// 已失效
        /// </summary>
        [Description("已失效")]
        Expired = 2
    }
    /// <summary>
    /// 支付终端
    /// </summary>
    public enum TerminalType : short
    {
        /// <summary>
        /// 电脑端
        /// </summary>
        [Description("电脑端")]
        PC = 1,
        /// <summary>
        /// 手机端
        /// </summary>
        [Description("手机端")]
        Mobile = 2,
        /// <summary>
        /// POS机
        /// </summary>
        [Description("POS机")]
        POS = 3
    }
    /// <summary>
    /// 支付操作类型
    /// </summary>
    public enum PayOperateType : short
    {
        /// <summary>
        /// 收款
        /// </summary>
        [Description("收款")]
        Receipt = 1,
        /// <summary>
        /// 退款
        /// </summary>
        [Description("退款")]
        Refund = 2,
        /// <summary>
        /// 转账
        /// </summary>
        [Description("转账")]
        Transfer = 3,
        /// <summary>
        /// 付款
        /// </summary>
        [Description("付款")]
        Payment = 4
    }
    /// <summary>
    /// 支付交易方式
    /// </summary>
    public enum PayTradeMode {
        /// <summary>
        /// 主动扫码（动态）
        /// </summary>
        [Description("主动扫码(动态)")]
        ActiveScanDyna = 1,
        /// <summary>
        /// 被动扫码
        /// </summary>
        [Description("被动扫码")]
        UnActiveScan = 2,
        /// <summary>
        /// 静态扫码
        /// </summary>
        [Description("静态扫码")]
        StaticScan = 3,
        /// <summary>
        /// 银联卡
        /// </summary>
        [Description("银联卡")]
        UnionPay = 4,
        /// <summary>
        /// 会员储值卡
        /// </summary>
        [Description("会员储值卡")]
        MemberCard = 5,
        /// <summary>
        /// 站内转账
        /// </summary>
        [Description("站内转账")]
        SystemTransfer = 6
    }

    /// <summary>
    /// 支付接口类型
    /// </summary>
    public enum PayApiMode:short
    {
        /// <summary>
        /// 微信支付
        /// </summary>
        [Description("微信支付")]
        WeChatPay = 1,
        /// <summary>
        /// 支付宝支付
        /// </summary>
        [Description("支付宝支付")]
        AliPay = 2,
        /// <summary>
        /// 银联支付
        /// </summary>
        [Description("银联支付")]
        UnionPay = 3,
        /// <summary>
        /// 网银支付
        /// </summary>
        [Description("网银支付")]
        EBankPay = 4,
        /// <summary>
        /// 即付宝
        /// </summary>
        [Description("即付宝")]
        JiFuBao = 5,
        /// <summary>
        /// 点百趣
        /// </summary>
        [Description("点百趣")]
        DianBaiQuPay = 6,
        /// <summary>
        /// 融合支付（SxfPay）
        /// </summary>
        [Description("融合支付")]
        SxfPay = 7
    }
    /// <summary>
    /// 微信支付接口通道
    /// </summary>
    public enum PayApiMethod:short
    {
        /// <summary>
        /// WX主扫支付动态二维码（买家主动扫码）
        /// </summary>
        [Category("1")]
        [Description("主扫支付动态")]
        WXBuyerScanDynaPay = 10,
        /// <summary>
        /// WX被扫支付（商家扫码）
        /// </summary>
        [Category("1")]
        [Description("被扫支付")]
        WXMerchScanPay = 11,
        /// <summary>
        /// WX退款支付
        /// </summary>
        [Category("1")]
        [Description("退款申请")]
        WXRefundPay = 12,

        /// <summary>
        /// AL主扫支付动态二维码（买家主动扫码）
        /// </summary>
        [Category("2")]
        [Description("主扫支付动态")]
        ALBuyerScanDynaPay = 20,
        /// <summary>
        /// AL被扫支付（商家扫码）
        /// </summary>
        [Category("2")]
        [Description("被扫支付")]
        ALMerchScanPay = 21,
        /// <summary>
        /// AL退款支付
        /// </summary>
        [Category("2")]
        [Description("退款申请")]
        ALRefundPay = 22,

        /// <summary>
        /// Sxf主扫支付动态二维码（买家主动扫码）
        /// </summary>
        [Category("7")]
        [Description("主扫支付动态")]
        SxfBuyerScanDynaPay = 70,
        /// <summary>
        /// Sxf被扫支付（商家扫码）
        /// </summary>
        [Category("7")]
        [Description("被扫支付")]
        SxfMerchScanPay = 71,
        /// <summary>
        /// Sxf退款支付
        /// </summary>
        [Category("7")]
        [Description("退款申请")]
        SxfRefundPay = 72
    }

    #endregion
}
