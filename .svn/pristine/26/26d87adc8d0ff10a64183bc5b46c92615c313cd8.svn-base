@model Pharos.Logic.OMS.Entity.PayChannelInfo
@{
    ViewBag.Title = "收单渠道信息";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    ViewData.OpBtnInfo(new OpBtnInfo(addText: "新增收单渠道",
        delText: "注销渠道", hideDel: true));
}
@section search{
    <table class="table-toolbar">
        <tr>
            <td class="label-toolbar">
                <label>关键词：</label>
            </td>
            <td class="input-toolbar">
                <input id="KeyValues" name="KeyValues" class="datacontrol easyui-textbox font-12" placeholder="" data-options="prompt:'收单渠道/名称/备注',width:140" />
            </td>
            <td class="label-toolbar">
                <label>状态：</label>
            </td>
            <td class="input-toolbar">
                @Html.CheckBoxListFor(o => o.Status, ViewBag.CkbStatusList as List<SelectListItem>)
            </td>
        </tr>
    </table>
}
@section toolbar
{
    <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-stale'" onclick="setStatus(1)">设为可用渠道</a>
<a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-stale'" onclick="setStatus(2)">停用渠道</a>
    <a href="#" class="easyui-linkbutton cus1 linkbtn" data-options="iconCls:'icon-stale'" onclick="cancelItem()">注销渠道</a>
}
<link href="~/Content/iconfont/iconfont.css" rel="stylesheet" />
<script type="text/javascript">
    window.drpdata = window.drpdata || {};
    window.drpdata['StatusJson'] = @Html.Raw(ViewBag.StatusJson);

    pharos.manager.geturl = "@Url.Action("GetPayChannelPaging")";
    pharos.manager.editurl = "@Url.Action("PayChannelForm")";
    pharos.manager.delurl = "@Url.Action("RemovePayChannel")";
    pharos.manager.sortName = "CreateDT";
    pharos.manager.pagination = false;
    pharos.manager.showFooter = false;
    pharos.manager.columns = [[
        { field: 'Id', checkbox: true },
        { field: 'Status', title: '状态', width: 60, align:'center', formatter: function (value, row) {
            return formatColumn(value, window.drpdata['StatusJson']);
        }},
        { field: 'ChannelNo', title: '渠道编号', width: 60 , align:'center'},
        { field: 'ChannelCode', title: '收单渠道', width: 100},
        { field: 'ChannelName', title: '名称', width: 100 },
        { field: 'Memo', title: '备注', width: 200 },
        { field: 'CreateDT', title: '创建时间', width: 100, align:'center', formatter: function (value, row, index) { return new Date(value.replace(/-/g, '/')).format("yyyy-MM-dd") } },
        { field: 'Creater', title: '创建人', width: 80 , align:'center'},
        { field: 'AuditDT', title: '审核时间', width: 100, align:'center', formatter: function (value, row, index) { 
            if(row.AuditUID!=null)
                return new Date(value.replace(/-/g, '/')).format("yyyy-MM-dd") 
            else
                return "--";
        } },
        { field: 'Auditer', title: '审核人', width: 80 , align:'center'}
    ]];

    pharos.manager.addItem = function () {
        this.Id = "";
        openDialogNew(this.addText, this.editurlNocache(), 450, 300, false, true);
    };
    pharos.manager.editItem = function (id, row) {
        this.Id = id;
        openDialogNew(this.addText, this.editurlNocache(), 450, 300, false, true);
    }

    function cancelItem(){
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        if (rows.length > 1) {
            $.messager.alert("提示", "只能选择一项数据进行操作", "error");
            return false;
        }
        if(rows[0].Status != 2 && rows[0].Status!=0){
            $.messager.alert("提示", "只有未审核与停用状态的数据才可以注销", "error");
            return false;
        }
        if(rows[0].Status == 3){
            $.messager.alert("提示", "该数据已是注销状态，不可操作", "error");
            return false;
        }
        $.messager.confirm("提示", "确定注销该收单渠道吗？", function (r) {
            if (!r) return;
            $.post("@Url.Action("CancelPayChannel")", { id: rows[0].Id }, function (r) {
                if (r.successed) {
                    $.messager.alert("提示", "操作执行成功！", "info");
                    pharos.manager.gridReload();
                } else {
                    $.messager.alert("提示", "操作执行失败！" + r.message, "error");
                }
            }, "json");
        });
    }

    //设置可用停用
    function setStatus(status) {
        var rows = pharos.manager.selectItems();
        if (!rows) return;
        if (rows.length > 1) {
            $.messager.alert("提示", "只能选择一项数据进行操作", "error");
            return false;
        }
        var statusJson = window.drpdata['StatusJson'];
        if (rows[0].Status == status) {
            $.messager.alert("提示", "选中项已经是" + statusJson[status].text + "状态", "error");
            return false;
        }
        
        $.messager.confirm("提示", "是否确定更改状态", function (r) {
            if (!r) return;
            $.post("@Url.Action("SetPayChannelStatus")", { id: rows[0].Id, status: status }, function (r) {
                if (r.successed) {
                    $.messager.alert("提示", "操作执行成功！", "info");
                    pharos.manager.gridReload();
                } else {
                    $.messager.alert("提示", "操作执行失败！" + r.message, "error");
                }
            }, "json");
        });
        //fishtodo: 1 按钮图标设置
    }

    //取枚举对应值
    function formatColumn(value, list) {
        for (var i = 0; i < list.length; i++) {
            if (list[i].value == value) {
                if (list[i].value != "")
                    return list[i].text;
            }
        }
        return value;
    }
</script>