@using Pharos.Logic.OMS.Entity
@using Pharos.Logic.OMS.Entity.View
@model  BankCardInfo
@{
    ViewBag.Title = "Save";
    Layout = "~/Views/Shared/_FormLayout.cshtml";
}

<style type="text/css">
    .formbox td {
        padding: 5px 0px;
    }
</style>

<script type="text/javascript">

    //获取url的参数
    function getUrlParam(name) {

        var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)"); //构造一个含有目标参数的正则表达式对象

        var r = window.location.search.substr(1).match(reg);  //匹配目标参数

        if (r != null) return unescape(r[2]); return null; //返回参数值

    }

    $(function () {

    });

    function SaveBefore() {
        return true;
    }

</script>

<div class="default-form">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(o => o.Id)
        <div class="content">

            <div class="formbox" style="border-bottom:0px;">
                <table class="table-form" width="100%">

                    <tr>
                        <td class="name">商户号：</td>
                        <td class="input">@Html.TextBoxFor(o => o.Agency, new { @class = "easyui-textbox", data_options = "novalidate:true,required:false,prompt:'',validType: 'length[1,100]',width:125,readonly:true" })</td>
                        <td class="name" style="width:20%;">商户全称：</td>
                        <td class="input">@Html.TextBoxFor(o => o.Agency, new { @class = "easyui-textbox", data_options = "novalidate:true,required:false,prompt:'',validType: 'length[1,100]',width:190,readonly:true" })</td>

                    </tr>

                    <tr>
                        <td class="name">门店编号：</td>
                        <td class="input">@Html.TextBoxFor(o => o.Agency, new { @class = "easyui-textbox", data_options = "novalidate:true,required:false,prompt:'',validType: 'length[1,100]',width:125,readonly:true" })</td>
                        <td class="name">门店全称：</td>
                        <td class="input">@Html.TextBoxFor(o => o.Agency, new { @class = "easyui-textbox", data_options = "novalidate:true,required:false,prompt:'',validType: 'length[1,20]',width:190,readonly:true" })</td>
                    </tr>

                    <tr>
                        <td class="name">员工姓名：</td>
                        <td class="input">@Html.TextBoxFor(o => o.CardName, new { @class = "easyui-textbox", data_options = "required:true,prompt:'',validType: 'length[1,10]',width:125" })</td>
                        <td class="name">登录账号：</td>
                        <td class="input">@Html.TextBoxFor(o => o.CardName, new { @class = "easyui-textbox", data_options = "required:true,prompt:'',validType: 'length[1,20]',width:125" })</td>
                    </tr>

                    <tr>
                        <td class="name">联系电话：</td>
                        <td class="input">@Html.TextBoxFor(o => o.Phone, new { @class = "easyui-textbox", data_options = "required:true,prompt:'',validType: 'length[1,20]',width:125" })</td>
                        <td class="name">登录密码：</td>
                        <td class="input">@Html.TextBoxFor(o => o.LinkMan, new { type = "password", @class = "easyui-textbox", data_options = "novalidate:true,required:true,prompt:'',validType: 'length[1,20]',width:125" })</td>
                    </tr>

                    <tr>
                        <td class="name">备注：</td>
                        <td class="input" colspan="3">
                            @Html.TextBoxFor(o => o.CardName, new { @class = "easyui-textbox", data_options = "required:false,prompt:'限50个字内',validType: 'length[0,50]',width:456" })
                        </td>
                    </tr>

                </table>
            </div>

        </div>
    }
</div>


